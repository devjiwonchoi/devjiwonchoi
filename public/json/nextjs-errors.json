[{"path":"errors/404-get-initial-props.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/404-get-initial-props.mdx","prodUrl":"https://nextjs.org/docs/messages/404-get-initial-props","sha":"5629fd3224f0fc91905806dba72d161348fcb2ef","size":1343,"content":"---\ntitle: 404.js Cannot Have getInitialProps\ndescription: This document provides an understanding of the \"404.js Cannot Have getInitialProps\" error in Next.js and offers solutions to fix it.\n---\n\n## Why This Error Occurred\n\nThe \"404.js Cannot Have `getInitialProps`\" error usually occurs when either `getInitialProps` or `getServerSideProps` is used in your `404.js` page. The `404.js` page in Next.js is designed to be static to ensure consistent performance.\n\n## Possible Ways to Fix It\n\nAdding `getInitialProps` or `getServerSideProps` to your `404.js` page will cause it to be rendered on the server-side.\n\nTo fix this error, you should remove `getInitialProps` from your `404.js` page. Additionally, ensure that no Higher-Order Components (HOCs) used in the `404.js` page are attaching `getInitialProps`.\n\nIf your `404.js` page requires data fetching, we recommend incrementally adopting the App Router and the [`not-found`](/docs/app/api-reference/file-conventions/not-found) file, which does support fetching data before displaying the 404 page.\n\n## Useful Links\n\n- [Automatic Static Optimization](/docs/pages/building-your-application/rendering/automatic-static-optimization) - Learn more about how Next.js automatically optimizes your pages for better performance.\n- [`not-found`](/docs/app/api-reference/file-conventions/not-found)\n"},{"path":"errors/built-in-next-font.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/built-in-next-font.mdx","prodUrl":"https://nextjs.org/docs/messages/built-in-next-font","sha":"a6da744b0a0fab650e7409afc42d769d36879ff1","size":1406,"content":"---\ntitle: Resolving \"Built-in next/font\" Error in Next.js\ndescription: This document offers a detailed guide on fixing the \"Built-in `next/font`\" error in Next.js, which typically occurs when you're still using the `@next/font` package in Next.js 13.2 and later.\n---\n\n`next/font` will automatically optimize your fonts (including custom fonts) and remove external network requests for improved privacy and performance.\n\n## Why This Error Occurred\n\nThe \"Built-in `next/font`\" error is triggered when the `@next/font` package is still installed and used in your Next.js application.\n\nFrom version 13.2 onward, **`next/font` has been built into Next.js**, making the `@next/font` package redundant. The `@next/font` package will be completely removed in Next.js 14.\n\n## Possible Ways to Fix It\n\nTo resolve this issue, you need to uninstall `@next/font` and replace all `@next/font` imports with `next/font` in your project. This can be done automatically using the `built-in-next-font` codemod:\n\n```sh filename=\"Terminal\"\nnpx @next/codemod built-in-next-font .\n```\n\n## Useful Links\n\n- [Codemods](/docs/app/building-your-application/upgrading/codemods) - Understand more about codemods and how they can help automate large-scale codebase refactors.\n- [Optimizing Fonts](/docs/app/building-your-application/optimizing/fonts) - Learn how to optimize fonts in your Next.js applications for improved performance.\n"},{"path":"errors/app-dir-dynamic-href.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/app-dir-dynamic-href.mdx","prodUrl":"https://nextjs.org/docs/messages/app-dir-dynamic-href","sha":"1e4f60691e46f9ce5e031e3a06a732afb28bacec","size":1347,"content":"---\ntitle: Handling \"Dynamic href is not Supported in the App Router\" Error in Next.js\ndescription: This document describes the dynamic href is not supported in the App Router error in Next.js and provides a solution to fix it.\n---\n\n## Why This Error Occurred\n\nThe \"Dynamic `href` is not supported in the App Router\" error happens when you try to use a dynamic `href` with `next/link` in the `app` directory.\n\nThe new client-side router in Next.js does not use a mapping of dynamic routes to URLs, but rather it leverages the URL directly. This means it doesn't support dynamic `href` use.\n\n## Possible Ways to Fix It\n\nYou need to replace the dynamic `href` with a direct path in the `next/link` component. Here's a before and after comparison of what your code should look like:\n\n**Before**\n\n```jsx\n<Link\n  href={{\n    pathname: '/route/[slug]',\n    query: { slug: '1' },\n  }}\n>\n  link\n</Link>\n```\n\nOr\n\n```jsx\n<Link href=\"/route/[slug]?slug=1\">link</Link>\n```\n\n**After**\n\n```jsx\n<Link href=\"/route/1\">link</Link>\n```\n\nIn the revised code, the dynamic part of the `href` (`[slug]`) is replaced directly with the actual value (`1`), which simplifies the `href` and makes it a direct path.\n\n## Useful Links\n\n- [`next/link` documentation](/docs/app/api-reference/components/link#href-required) - Learn more about the usage of `next/link` in Next.js.\n"},{"path":"errors/babel-font-loader-conflict.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/babel-font-loader-conflict.mdx","prodUrl":"https://nextjs.org/docs/messages/babel-font-loader-conflict","sha":"524a78dfdd8a34a28c9e79dccd9041002ea5dc45","size":1121,"content":"---\ntitle: Resolving \"Babel and `next/font` Conflict\" in Next.js\ndescription: This document explains the \"Babel and `next/font` Conflict\" in Next.js and provides a solution to resolve this issue.\n---\n\n## Why This Error Occurred\n\nThe \"Babel and `next/font` Conflict\" error arises when you attempt to use `next/font` in conjunction with a custom Babel configuration in your Next.js application. When you have a custom Babel config, you opt out of the Next.js Compiler, which is a requirement for using `next/font`.\n\n## Possible Ways to Fix It\n\nTo address this issue, you should remove your custom Babel configuration (e.g. `.babelrc`) and instead make use of the Next.js Compiler. This ensures compatibility between your Babel configuration and `next/font`.\n\n## Useful Links\n\n- [Next.js Compiler](/docs/architecture/nextjs-compiler) - Learn more about the Next.js Compiler and how it benefits your application.\n- [Customizing Babel Config](/docs/pages/building-your-application/configuring/babel) - Understand more about how to customize your Babel configuration in a Next.js application, and the implications of doing so.\n"},{"path":"errors/cant-override-next-props.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/cant-override-next-props.mdx","prodUrl":"https://nextjs.org/docs/messages/cant-override-next-props","sha":"6522df108c08f5086713ffe812f74d87b978c172","size":536,"content":"---\ntitle: Can't Override Next Props\n---\n\n## Why This Error Occurred\n\nIn your `pages/_app.js` you returned an object from `getInitialProps` that contained a `router` or `Component` value. These property names are used by Next.js and can not be overwritten.\n\n## Possible Ways to Fix It\n\nLook in your \\_app.js component's `getInitialProps` function and make sure neither of these property names are present in the object returned.\n\n## Useful Links\n\n- [The issue this was reported in: #6480](https://github.com/vercel/next.js/issues/6480)\n"},{"path":"errors/circular-structure.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/circular-structure.mdx","prodUrl":"https://nextjs.org/docs/messages/circular-structure","sha":"f13b37a6aec9125a1b9dd0a40abe5a9cc4edfa5f","size":693,"content":"---\ntitle: 'Circular structure in `getInitialProps` result'\n---\n\n## Why This Error Occurred\n\n`getInitialProps` is serialized to JSON using `JSON.stringify` and sent to the client side for hydrating the page.\n\nHowever, the result returned from `getInitialProps` can't be serialized when it has a circular structure.\n\n## Possible Ways to Fix It\n\nCircular structures are not supported, so the way to fix this error is removing the circular structure from the object that is returned from `getInitialProps`.\n\nFor example, the `req` instance exposed is a circular object and can not be serialized, instead the specific fields such as relevant headers on the instance should be passed specifically.\n"},{"path":"errors/app-container-deprecated.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/app-container-deprecated.mdx","prodUrl":"https://nextjs.org/docs/messages/app-container-deprecated","sha":"e2acca81763508d6a963d7b75ca63d1f13f24cdc","size":1578,"content":"---\ntitle: Addressing \"App Container Deprecated\" Error in Next.js\ndescription: This document guides developers on how to resolve the \"App Container Deprecated\" error in Next.js by updating their custom App component.\n---\n\n## Why This Error Occurred\n\nThe \"App Container Deprecated\" error usually occurs when you are using the `<Container>` component in your custom `<App>` (`pages/_app.js`). Prior to version `9.0.4` of Next.js, the `<Container>` component was used to handle scrolling to hashes.\n\nFrom version `9.0.4` onwards, this functionality was moved up the component tree, rendering the `<Container>` component unnecessary in your custom `<App>`.\n\n## Possible Ways to Fix It\n\nTo resolve this issue, you need to remove the `<Container>` component from your custom `<App>` (`pages/_app.js`).\n\n**Before**\n\n```jsx filename=\"pages/_app.js\"\nimport React from 'react'\nimport App, { Container } from 'next/app'\n\nclass MyApp extends App {\n  render() {\n    const { Component, pageProps } = this.props\n    return (\n      <Container>\n        <Component {...pageProps} />\n      </Container>\n    )\n  }\n}\n\nexport default MyApp\n```\n\n**After**\n\n```jsx filename=\"pages/_app.js\"\nimport React from 'react'\nimport App from 'next/app'\n\nclass MyApp extends App {\n  render() {\n    const { Component, pageProps } = this.props\n    return <Component {...pageProps} />\n  }\n}\n\nexport default MyApp\n```\n\nAfter making this change, your custom `<App>` should work as expected without the `<Container>` component.\n\n## Useful Links\n\n- [Custom App](/docs/pages/building-your-application/routing/custom-app)\n"},{"path":"errors/ignored-compiler-options.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/ignored-compiler-options.mdx","prodUrl":"https://nextjs.org/docs/messages/ignored-compiler-options","sha":"5bc5e257de7a5d1fa1e0f6dbc25a17f9ef6543f6","size":420,"content":"---\ntitle: '`ignored-compiler-options`'\n---\n\n## Why This Error Occurred\n\nOptions under the `compiler` key in `next.config.js` only apply to the new Rust based compiler and will be ignored if Babel is used instead. This message will appear if Next.js detects a Babel configuration file while `compiler` options are configured in `next.config.js`\n\n## Useful Links\n\n- [Next.js Compiler](/docs/architecture/nextjs-compiler)\n"},{"path":"errors/empty-configuration.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/empty-configuration.mdx","prodUrl":"https://nextjs.org/docs/messages/empty-configuration","sha":"007d4f7f8517f9f58e8b204bd86b6b9ff13d470b","size":433,"content":"---\ntitle: 'Detected `next.config.js`, no exported configuration found'\n---\n\n#### Why This Warning Occurred\n\nThere is no object exported from next.config.js or the object is empty.\n\n## Possible Ways to Fix It\n\nCheck if you correctly export configuration in `next.config.js` file:\n\n```\nmodule.exports = {\n  /* config options here */\n}\n```\n\n## Useful Links\n\n- [Introduction to next.config.js](/docs/pages/api-reference/next-config-js)\n"},{"path":"errors/can-not-output-to-static.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/can-not-output-to-static.mdx","prodUrl":"https://nextjs.org/docs/messages/can-not-output-to-static","sha":"e6ab400f479ab0ebe7fc98a60e87a0375f081c41","size":482,"content":"---\ntitle: Cannot output to /static\n---\n\n## Why This Error Occurred\n\nEither you set `distDir` to `static` in your `next.config.js` or during `next export` you tried to export to the `static` directory.\n\nThis is not allowed because `static` is used by Next.js to serve static assets.\n\n## Possible Ways to Fix It\n\nUse a different `distDir` or export to a different folder.\n\n## Useful Links\n\n- [Static file serving docs](/docs/pages/building-your-application/optimizing/static-assets)\n"},{"path":"errors/amp-bind-jsx-alt.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/amp-bind-jsx-alt.mdx","prodUrl":"https://nextjs.org/docs/messages/amp-bind-jsx-alt","sha":"52f944a4c26ff008567dd2cd13d0bd0c6681225d","size":1026,"content":"---\ntitle: Resolving \"AMP Bind JSX Error\" in Next.js\ndescription: This document explains the \"AMP Bind JSX Error\" in Next.js and provides a valid solution to resolve it.\n---\n\n## Why This Error Occurred\n\nThe \"AMP Bind JSX Error\" arises when you use the `[prop]='something'` syntax somewhere in your code.\n\nJSX is a syntax extension for JavaScript used by React (and by extension, Next.js). JSX does not support the usage of this particular syntax, hence the error.\n\n## Possible Ways to Fix It\n\nTo fix this issue, instead of using `[prop]='something'`, you can use `data-amp-bind-prop='something'`. This is a valid alternative in Accelerated Mobile Pages (AMP) that works well with JSX.\n\n## Useful Links\n\n- [AMP HTML Specification](https://www.ampproject.org/docs/fundamentals/spec) - Understand the underlying standards and rules for creating AMP pages.\n- [Possible future syntax](https://github.com/ampproject/amphtml/issues/21600) - Check out the discussions on potential syntax changes that may be applicable in the future.\n"},{"path":"errors/failed-to-fetch-devpagesmanifest.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/failed-to-fetch-devpagesmanifest.mdx","prodUrl":"https://nextjs.org/docs/messages/failed-to-fetch-devpagesmanifest","sha":"843ceee976b823cc562ac78640ea6a8a4c9cf5fd","size":819,"content":"---\ntitle: 'Failed to fetch `devPagesManifest`'\n---\n\n## Why This Error Occurred\n\nThe network request to load `_devPagesManifest.json` did not succeed.\n\nThe dev pages manifest file is used by `next/link` to retrieve the list of pages to be (pre-)loaded by Next.js.\nIf it fails, Next.js cannot properly navigate and link between pages.\n\n## Possible Ways to Fix It\n\n- Make sure your browser developer tools, extensions, and any other network tools aren't blocking that request.\n- If you're running your Next.js application through a proxy, nginx, or other network layer, make sure links like `/_next/*` are configured to be allowed.\n\n## Useful Links\n\n- [Original GitHub Issue Thread](https://github.com/vercel/next.js/issues/16874)\n- [GitHub Issue Thread With Reproduction](https://github.com/vercel/next.js/issues/38047)\n"},{"path":"errors/css-npm.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/css-npm.mdx","prodUrl":"https://nextjs.org/docs/messages/css-npm","sha":"bcef6442193187554dbbdb8e67487cde0daf2391","size":924,"content":"---\ntitle: CSS Imported by a Dependency\n---\n\n## Why This Error Occurred\n\nOne of your dependencies (`node_modules`) imports a CSS file.\n\nThis normally happens when a package's source files are accidentally consumed,\ninstead of the built package.\n\n## Possible Ways to Fix It\n\nReach out to the maintainer and ask for them to publish a compiled version of\ntheir dependency.\n\nCompiled dependencies do not have references to CSS files, or any other files\nthat require bundler-specific integrations.\n\nThe dependency should also provide instructions about what CSS needs to be\nimported by you, in your application.\n\nImporting CSS files within `node_modules` cannot be supported because we cannot\nknow the correct behavior:\n\n- Should the file be consumed as Global CSS or CSS Modules?\n- If Global, in what order does the file need to be injected?\n- If Modules, what are the emitted class names? As-is, camel-case, snake case?\n- Etc.\n"},{"path":"errors/custom-error-no-custom-404.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/custom-error-no-custom-404.mdx","prodUrl":"https://nextjs.org/docs/messages/custom-error-no-custom-404","sha":"4d7e8b1c45ccd04c1ad2f6acded33130491d7a1b","size":582,"content":"---\ntitle: 'Custom `_error` without /404'\n---\n\n## Why This Error Occurred\n\nYou added a custom `/_error` page without adding a custom `/404` page. Adding a custom `/_error` typically opts your application out of having the automatic static optimization applied to the 404 page.\n\n## Possible Ways to Fix It\n\nAdd a `pages/404.js` with the 404 page you would like to show.\n\n## Useful Links\n\n- [Automatic Static Optimization](/docs/pages/building-your-application/rendering/automatic-static-optimization)\n- [404 Page](/docs/pages/building-your-application/routing/custom-error#404-page)\n"},{"path":"errors/can-not-output-to-public.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/can-not-output-to-public.mdx","prodUrl":"https://nextjs.org/docs/messages/can-not-output-to-public","sha":"c6e53b741749f0c6ac6ad251456ff14f62036293","size":482,"content":"---\ntitle: Cannot output to /public\n---\n\n## Why This Error Occurred\n\nEither you set `distDir` to `public` in your `next.config.js` or during `next export` you tried to export to the `public` directory.\n\nThis is not allowed because `public` is used by Next.js to serve static assets.\n\n## Possible Ways to Fix It\n\nUse a different `distDir` or export to a different folder.\n\n## Useful Links\n\n- [Static file serving docs](/docs/pages/building-your-application/optimizing/static-assets)\n"},{"path":"errors/empty-object-getInitialProps.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/empty-object-getInitialProps.mdx","prodUrl":"https://nextjs.org/docs/messages/empty-object-getInitialProps","sha":"c90fae9d5e5d41fd1a9a40435da503f82d889562","size":748,"content":"---\ntitle: 'Empty Object Returned From `getInitialProps`'\n---\n\n## Why This Error Occurred\n\nIn one of your page components you added a `getInitialProps` that returned an empty object. This de-optimizes automatic static optimization. If you **meant** to do this and understand the **consequences** you can ignore this message as it is only shown in development.\n\n## Possible Ways to Fix It\n\nLook for any page's using `getInitialProps` that return an empty object `{}`. You might also need to update higher order components (HOCs) to only add `getInitialProps` if they are present on the passed component.\n\n## Useful Links\n\n- [Automatic Static Optimization Documentation](/docs/pages/building-your-application/rendering/automatic-static-optimization)\n"},{"path":"errors/fast-refresh-reload.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/fast-refresh-reload.mdx","prodUrl":"https://nextjs.org/docs/messages/fast-refresh-reload","sha":"96cafb279717c94d0e1106422fe10d98f5aeb280","size":658,"content":"---\ntitle: Fast Refresh had to perform full reload\n---\n\n## Why This Error Occurred\n\nFast Refresh had to perform a full reload when you edited a file. It may be because:\n\n- The file you're editing might have other exports in addition to a React component.\n- Your React component is an anonymous function.\n- The component name is in camelCase and not PascalCase, for example `textField` instead of `TextField`.\n\n## Possible Ways to Fix It\n\n- Move your other exports to a separate file.\n- Use a named function for your React component.\n- Rename your component name to pascal case.\n\n## Useful Links\n\n[Fast Refresh documentation](/docs/architecture/fast-refresh)\n"},{"path":"errors/gssp-mixed-not-found-redirect.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/gssp-mixed-not-found-redirect.mdx","prodUrl":"https://nextjs.org/docs/messages/gssp-mixed-not-found-redirect","sha":"13713267d38b8c191d155b4863a6e0b13d34c6b8","size":687,"content":"---\ntitle: 'Mixed `notFound` and `redirect`'\n---\n\n## Why This Error Occurred\n\nIn one of your page's `getStaticProps` or `getServerSideProps` `notFound` and `redirect` values were both returned.\n\nThese values can not both be returned at the same time and one or the other needs to be returned at a time.\n\n## Possible Ways to Fix It\n\nMake sure only `notFound` **or** `redirect` is being returned on your page's `getStaticProps` or `getServerSideProps`\n\n## Useful Links\n\n- [`getStaticProps` Documentation](/docs/pages/building-your-application/data-fetching/get-static-props)\n- [`getServerSideProps` Documentation](/docs/pages/building-your-application/data-fetching/get-server-side-props)\n"},{"path":"errors/inline-script-id.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/inline-script-id.mdx","prodUrl":"https://nextjs.org/docs/messages/inline-script-id","sha":"ba15bf31363eebab4cc7c5f9616792022bb62863","size":717,"content":"---\ntitle: Inline script id\n---\n\n> Enforce `id` attribute on `next/script` components with inline content.\n\n## Why This Error Occurred\n\n`next/script` components with inline content require an `id` attribute to be defined to track and optimize the script.\n\n## Possible Ways to Fix It\n\nAdd an `id` attribute to the `next/script` component.\n\n```jsx filename=\"pages/_app.js\"\nimport Script from 'next/script'\n\nexport default function App({ Component, pageProps }) {\n  return (\n    <>\n      <Script id=\"my-script\">{`console.log('Hello world!');`}</Script>\n      <Component {...pageProps} />\n    </>\n  )\n}\n```\n\n## Useful links\n\n- [Docs for Next.js Script component](/docs/pages/building-your-application/optimizing/scripts)\n"},{"path":"errors/invalid-external-rewrite.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-external-rewrite.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-external-rewrite","sha":"997e63c9f595a2589b1d46635e8de8c74bc9ddcb","size":575,"content":"---\ntitle: Invalid External Rewrite\n---\n\n## Why This Error Occurred\n\nA rewrite was defined with both `basePath: false` and an internal `destination`. Rewrites that capture urls outside of the `basePath` must route externally, as they are intended for proxying in the case of incremental adoption of Next.js in a project.\n\n## Possible Ways to Fix It\n\nLook for any rewrite where `basePath` is `false` and make sure its `destination` starts with `http://` or `https://`.\n\n## Useful Links\n\n- [Rewrites section in Documentation](/docs/pages/api-reference/next-config-js/rewrites)\n"},{"path":"errors/install-sharp.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/install-sharp.mdx","prodUrl":"https://nextjs.org/docs/messages/install-sharp","sha":"6a346bdb14bbef012769ca47f1a7818280946fac","size":1297,"content":"---\ntitle: 'Install `sharp` to Use Built-In Image Optimization'\n---\n\n## Why This Error Occurred\n\nUsing Next.js' built-in [Image Optimization](/docs/pages/building-your-application/optimizing/images) requires [sharp](https://www.npmjs.com/package/sharp) as a dependency.\n\nYou are seeing this error because your OS was unable to [install sharp](https://sharp.pixelplumbing.com/install) properly, either using pre-built binaries or building from source.\n\n## Possible Ways to Fix It\n\nOption 1: Use a different version of Node.js and try to install `sharp` again.\n\n```bash filename=\"Terminal\"\nnpm i sharp\n```\n\n```bash filename=\"Terminal\"\nyarn add sharp\n```\n\n```bash filename=\"Terminal\"\npnpm add sharp\n```\n\n```bash filename=\"Terminal\"\nbun add sharp\n```\n\nOption 2: Try installing the wasm variant of `sharp` by running `npm install --cpu=wasm32 sharp`.\n\nOption 3: If using macOS, ensure XCode Build Tools are installed and try to install `sharp` again.\n\nFor example, see [macOS Catalina instructions](https://github.com/nodejs/node-gyp/blob/66c0f0446749caa591ad841cd029b6d5b5c8da42/macOS_Catalina.md).\n\nOption 4: Use a different OS and try to install `sharp` again.\n\nFor example, if you're using Windows, try using [WSL](https://docs.microsoft.com/en-us/windows/wsl/about) (Windows Subsystem for Linux).\n"},{"path":"errors/next-router-not-mounted.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/next-router-not-mounted.mdx","prodUrl":"https://nextjs.org/docs/messages/next-router-not-mounted","sha":"affa51d37aaf9b217a1fbca0e56858eeb940b30a","size":1024,"content":"---\ntitle: '`NextRouter` was not mounted'\n---\n\n## Why This Error Occurred\n\nA component used `useRouter` outside a Next.js application, or was rendered outside a Next.js application. This can happen when doing unit testing on components that use the `useRouter` hook as they are not configured with Next.js' contexts.\n\nThis can also happen when you try to use the `useRouter` hook from `next/router` inside the `app` directory, as the App Router's `useRouter` from `next/navigation` has different behavior to the `useRouter` hook in `pages`.\n\n## Possible Ways to Fix It\n\nIf used in a test, mock out the router by mocking the `next/router`'s `useRouter()` hook.\n\nIf used in the `app` directory, migrate to the new hooks imported from `next/navigation`.\n\n## Useful Links\n\n- [next-router-mock](https://www.npmjs.com/package/next-router-mock)\n- [App Router Migration](/docs/pages/building-your-application/upgrading/app-router-migration#step-5-migrating-routing-hooks)\n- [useRouter](/docs/app/api-reference/functions/use-router)\n"},{"path":"errors/custom-document-image-import.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/custom-document-image-import.mdx","prodUrl":"https://nextjs.org/docs/messages/custom-document-image-import","sha":"c98c978cecaddab59bfa8872ad964e04f13bba69","size":1464,"content":"---\ntitle: Images cannot be imported into your custom document.\n---\n\n## Why This Error Occurred\n\nAn attempt to import an image file into [`pages/_document.js`](/docs/pages/building-your-application/routing/custom-document) was made.\n\nCustom documents aren't compiled for the browser and images statically imported like this will not be displayed.\n\n## Possible Ways to Fix It\n\nIf your image needs to be displayed on every page you can relocate it to your [`pages/_app.js`](/docs/pages/building-your-application/routing/custom-app) file.\n\n#### Example\n\n```jsx filename=\"pages/_app.js\"\nimport yourImage from 'path/to/your/image'\nimport Image from 'next/image'\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <>\n      <Image src={yourImage} alt=\"your_image_description\" />\n      <Component {...pageProps} />\n    </>\n  )\n}\n\nexport default MyApp\n```\n\nIf your application is not using image imports with `next/image`, you can disable the built-in loader with the following `next.config.js`:\n\n```js filename=\"next.config.js\"\nmodule.exports = {\n  images: {\n    disableStaticImages: true,\n  },\n}\n```\n\n## Useful Links\n\n- [Custom `Document`](/docs/pages/building-your-application/routing/custom-document)\n- [Custom `App`](/docs/pages/building-your-application/routing/custom-app)\n- [Static File Serving](/docs/pages/building-your-application/optimizing/static-assets)\n- [Disable Static Image Imports](/docs/pages/api-reference/components/image#disablestaticimages)\n"},{"path":"errors/beta-middleware.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/beta-middleware.mdx","prodUrl":"https://nextjs.org/docs/messages/beta-middleware","sha":"20a46f34d89b4534e2e07a29b306c4aab92dbd59","size":1369,"content":"---\ntitle: Addressing \"Beta Middleware Used\" Error in Next.js\ndescription: This document clarifies the \"Beta Middleware Used\" error in Next.js and provides a potential solution to fix it.\n---\n\n## Why This Error Occurred\n\nThe \"Beta Middleware Used\" error occurs if you are using [Middleware](/docs/pages/building-your-application/routing/middleware) in a version of Next.js prior to `v12.2`. The Middleware feature was still in beta in those versions and not yet covered by [semver](https://semver.org/) or Semantic Versioning rules.\n\n## Possible Ways to Fix It\n\nDespite this error, you can continue using Middleware in versions prior to `v12.2`. Be aware that **upgrading to newer versions of Next.js will require changes to your application to accommodate updates in Middleware handling**.\n\nIf you're using Next.js on Vercel, your existing deployments using Middleware will remain functional, and you can keep deploying your site with Middleware. However, when you decide to upgrade your site to Next.js `v12.2` or later, you'll need to follow the provided [upgrade guide](/docs/messages/middleware-upgrade-guide) to ensure compatibility.\n\n## Useful Links\n\n- [Middleware Upgrade Guide](/docs/messages/middleware-upgrade-guide) - Learn more about the necessary steps to upgrade your application to a version of Next.js that includes the official version of Middleware.\n"},{"path":"errors/failed-loading-swc.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/failed-loading-swc.mdx","prodUrl":"https://nextjs.org/docs/messages/failed-loading-swc","sha":"77857f9564536dd2b624e70641d83dff9a8cccba","size":1961,"content":"---\ntitle: SWC Failed to Load\n---\n\n#### Why This Message Occurred\n\nNext.js now uses Rust-based compiler [SWC](https://swc.rs/) to compile JavaScript/TypeScript. This new compiler is up to 17x faster than Babel when compiling individual files and up to 5x faster Fast Refresh.\n\nSWC requires a binary to be downloaded that is compatible with your system. In some cases this binary may fail to load either from failing to download or an incompatibility with your architecture.\n\n## Possible Ways to Fix It\n\nWhen on an M1 Mac and switching from a Node.js version without M1 support to one with, e.g. v14 to v16, you may need a different swc dependency which can require re-installing `node_modules` (`npm i --force` or `yarn install --force`).\n\nOn Windows make sure you have Microsoft Visual C++ Redistributable installed. https://docs.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist\n\nAlternatively, you might need to allow optional packages to be installed by your package manager (remove `--no-optional` flag) for the package to download correctly.\n\nIn some cases your package manager (e.g. `npm`) might have generated a lockfile that only includes `optionalDependencies` specific to the platform it was generated on, preventing the `optionalDependency` needed for CI from being installed.\n\nThis can be fixed by removing the lockfile and regenerating it with a newer version of your package manager `npm i -g npm@latest`.\n\nIf SWC continues to fail to load you can opt-out by disabling `swcMinify` in your `next.config.js` or by adding a `.babelrc` to your project with the following content:\n\n```json filename=\".babelrc\"\n{\n  \"presets\": [\"next/babel\"]\n}\n```\n\nBe sure to report the issue on [the feedback thread](https://github.com/vercel/next.js/discussions/30468) so that we can investigate it further.\n\n## Useful Links\n\n- [SWC Feedback Thread](https://github.com/vercel/next.js/discussions/30468)\n- [SWC Disabled Document](/docs/messages/swc-disabled)\n"},{"path":"errors/invalid-page-config.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-page-config.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-page-config","sha":"f524d0061fe35ca5d6ec1568c6ec18a9181d7765","size":1685,"content":"---\ntitle: Invalid Page / API Route Config\n---\n\n## Why This Error Occurred\n\nIn one of your pages or API Routes, you used `export const config` with an invalid value.\n\n## Possible Ways to Fix It\n\n- The page's `config` must be an object initialized directly when being exported and not modified dynamically.\n- The `config` object must only contain static constant literals without expressions.\n\n<table>\n<thead>\n  <tr>\n    <th>Not Allowed</th>\n    <th>Allowed</th>\n  </tr>\n</thead>\n<tbody>\n\n<tr>\n<td>\n\n```js\n// `config` should be an object\nexport const config = 'hello world'\n```\n\n</td>\n<td>\n\n```js\nexport const config = {}\n```\n\n</td>\n</tr>\n\n<tr>\n<td>\n\n```js\nexport const config = {}\n// `config.amp` is defined after `config` is exported\nconfig.amp = true\n\n// `config.amp` contains a dynamic expression\nexport const config = {\n  amp: 1 + 1 > 2,\n}\n```\n\n</td>\n<td>\n\n```js\nexport const config = {\n  amp: true,\n}\n\nexport const config = {\n  amp: false,\n}\n```\n\n</td>\n</tr>\n\n<tr>\n<td>\n\n```js\n// `config.runtime` contains a dynamic expression\nexport const config = {\n  runtime: `node${'js'}`,\n}\n```\n\n</td>\n<td>\n\n```js\nexport const config = {\n  runtime: 'nodejs',\n}\nexport const config = {\n  runtime: `nodejs`,\n}\n```\n\n</td>\n</tr>\n\n<tr>\n<td>\n\n```js\n// Re-exported `config` is not allowed\nexport { config } from '../config'\n```\n\n</td>\n<td>\n\n```js\nexport const config = {}\n```\n\n</td>\n</tr>\n\n</tbody>\n</table>\n\n## Useful Links\n\n- [Enabling AMP Support](/docs/pages/building-your-application/configuring/amp)\n- [API Routes Request Helpers](/docs/pages/building-your-application/routing/api-routes)\n- [Edge and Node.js Runtimes](/docs/pages/building-your-application/rendering/edge-and-nodejs-runtimes)\n"},{"path":"errors/deopted-into-client-rendering.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/deopted-into-client-rendering.mdx","prodUrl":"https://nextjs.org/docs/messages/deopted-into-client-rendering","sha":"c4004f365798140ec2782a08da194834ef961014","size":2214,"content":"---\ntitle: Entire page deopted into client-side rendering\n---\n\n## Why This Error Occurred\n\nDuring static rendering, the entire page was deopted into client-side rendering by `useSearchParams` as there was no [Suspense boundary](/docs/app/api-reference/functions/use-search-params#static-rendering) that caught it.\n\nIf a route is statically rendered, calling `useSearchParams()` will cause the tree up to the closest [Suspense boundary](/docs/app/api-reference/functions/use-search-params#static-rendering) to be client-side rendered.\n\nThis allows a part of the page to be statically rendered while the dynamic part that uses `searchParams` can be client-side rendered.\n\n## Possible Ways to Fix It\n\nYou can reduce the portion of the route that is client-side rendered by wrapping the component that uses useSearchParams in a Suspense boundary.\n\nFor example if `app/dashboard/search-bar.tsx` uses `useSearchParams` wrap the component in a [Suspense boundary](/docs/app/api-reference/functions/use-search-params#static-rendering) as shown in `app/dashboard/page.tsx`.\n\n```tsx filename=\"app/dashboard/search-bar.tsx\"\n'use client'\n\nimport { useSearchParams } from 'next/navigation'\n\nexport default function SearchBar() {\n  const searchParams = useSearchParams()\n\n  const search = searchParams.get('search')\n\n  // This will not be logged on the server when using static rendering\n  console.log(search)\n\n  return <>Search: {search}</>\n}\n```\n\n```tsx filename=\"app/dashboard/page.tsx\"\nimport { Suspense } from 'react'\nimport SearchBar from './search-bar'\n\n// This component passed as fallback to the Suspense boundary\n// will be rendered in place of the search bar in the initial HTML.\n// When the value is available during React hydration the fallback\n// will be replaced with the `<SearchBar>` component.\nfunction SearchBarFallback() {\n  return <>placeholder</>\n}\n\nexport default function Page() {\n  return (\n    <>\n      <nav>\n        <Suspense fallback={<SearchBarFallback />}>\n          <SearchBar />\n        </Suspense>\n      </nav>\n      <h1>Dashboard</h1>\n    </>\n  )\n}\n```\n\n## Useful Links\n\n- [`useSearchParams` static rendering documentation](/docs/app/api-reference/functions/use-search-params#static-rendering)\n"},{"path":"errors/client-side-exception-occurred.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/client-side-exception-occurred.mdx","prodUrl":"https://nextjs.org/docs/messages/client-side-exception-occurred","sha":"e3b4b4f367007234f82db0378fdacb253faab26a","size":687,"content":"---\ntitle: Client-side Exception Occurred\n---\n\n## Why This Error Occurred\n\nIn your production application a client-side error occurred that was not caught by an error boundary. Additional information should be visible in the console tab of your browser.\n\n## Possible Ways to Fix It\n\nAdd error boundaries in your React tree to gracefully handle client-side errors and render a fallback view when they occur.\n\n## Useful Links\n\n- [Error Boundaries Documentation](https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary)\n- [Custom Error Page Documentation](/docs/pages/building-your-application/routing/custom-error#more-advanced-error-page-customizing)\n"},{"path":"errors/next-image-missing-loader-width.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/next-image-missing-loader-width.mdx","prodUrl":"https://nextjs.org/docs/messages/next-image-missing-loader-width","sha":"c6c55d7c1fb08529006c60c00380a2738e692587","size":1097,"content":"---\ntitle: 'Missing `width` in the URL Returned by the Loader Prop on `next/image`'\n---\n\n## Why This Error Occurred\n\nThe [`loader`](/docs/pages/api-reference/components/image#loader) prop on the `next/image` component allows you to override the built-in URL resolution with a custom implementation in order to support any 3rd party cloud provider that can perform Image Optimization.\n\nThis error occurred because the provided `loader()` function did not use `width` in the returned URL string. This means that the image will likely not be resized and therefore degrade performance.\n\n## Possible Ways to Fix It\n\n- Ensure your Image Optimization provider can resize images. Then use the `width` parameter from the [`loader()`](/docs/pages/api-reference/components/image#loader) function to construct the correct URL string.\n- Add the [`unoptimized`](/docs/pages/api-reference/components/image#unoptimized) prop.\n\n## Useful Links\n\n- [Image Optimization Documentation](/docs/pages/building-your-application/optimizing/images)\n- [`next/image` Documentation](/docs/pages/api-reference/components/image)\n"},{"path":"errors/parallel-build-without-worker.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/parallel-build-without-worker.mdx","prodUrl":"https://nextjs.org/docs/messages/parallel-build-without-worker","sha":"7c1791ba3911ef389f297948f6dd2ab00fb6cd27","size":776,"content":"---\ntitle: Parallel Build Without Build Worker\n---\n\n## Why This Error Occurred\n\nThe `experimental.parallelServerCompiles` and `experimental.parallelServerBuildTraces`\noptions require that the `experimental.webpackBuildWorker` option is set to `true`. These\noptions use workers to improve the parallelization of the build which may improve performance,\nbut the build may use more memory at the same time.\n\n## Possible Ways to Fix It\n\nBuild workers are enabled by default unless you have a custom webpack config. You can force enable the option by setting `experimental.webpackBuildWorker: true` in your `next.config.js` file, but some webpack configuration options may not be compatible.\n\n## Useful Links\n\nAlso see https://nextjs.org/docs/messages/webpack-build-worker-opt-out\n"},{"path":"errors/built-in-css-disabled.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/built-in-css-disabled.mdx","prodUrl":"https://nextjs.org/docs/messages/built-in-css-disabled","sha":"ddaeb516070cb8c787c3231f90bb181165501dc1","size":1289,"content":"---\ntitle: Resolving \"Built-in CSS Support Disabled\" Error in Next.js\ndescription: This document provides a comprehensive explanation of the \"Built-in CSS Support Disabled\" error in Next.js and suggests ways to fix it.\n---\n\n## Why This Error Occurred\n\nThe \"Built-in CSS Support Disabled\" error typically occurs when a custom CSS configuration is added in the `next.config.js` file. This action deactivates the built-in CSS/SCSS support to avoid conflicts in configuration.\n\nIf you have added a legacy plugin like `@zeit/next-css` in your `next.config.js` file, you may encounter this error message.\n\n## Possible Ways to Fix It\n\nIf you want to use the built-in CSS/SCSS support, you need to remove any custom CSS configuration or plugins such as `@zeit/next-css` or `@zeit/next-sass` in your `next.config.js` file. We recommend this approach.\n\nOn the other hand, if you choose not to use the built-in support, you can safely ignore this warning.\n\n## Useful Links\n\n- [Built-in CSS Support docs](/docs/pages/building-your-application/styling) - Learn more about the built-in CSS/SCSS support in Next.js and how to use it effectively.\n- [Custom webpack config docs](/docs/pages/api-reference/next-config-js/webpack) - Get more information on customizing your webpack configuration in Next.js.\n"},{"path":"errors/no-duplicate-head.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-duplicate-head.mdx","prodUrl":"https://nextjs.org/docs/messages/no-duplicate-head","sha":"d513c394f077dd4d26fb8dabf236d2418dd25f3c","size":881,"content":"---\ntitle: No Duplicate Head\n---\n\n> Prevent duplicate usage of `<Head>` in `pages/_document.js`.\n\n## Why This Error Occurred\n\nMore than a single instance of the `<Head />` component was used in a single custom document. This can cause unexpected behavior in your application.\n\n## Possible Ways to Fix It\n\nOnly use a single `<Head />` component in your custom document in `pages/_document.js`.\n\n```jsx filename=\"pages/_document.js\"\nimport Document, { Html, Head, Main, NextScript } from 'next/document'\n\nclass MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    //...\n  }\n\n  render() {\n    return (\n      <Html>\n        <Head />\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    )\n  }\n}\n\nexport default MyDocument\n```\n\n## Useful Links\n\n- [Custom Document](/docs/pages/building-your-application/routing/custom-document)\n"},{"path":"errors/context-in-server-component.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/context-in-server-component.mdx","prodUrl":"https://nextjs.org/docs/messages/context-in-server-component","sha":"1c395922615da6333bb19d99b7cf3a95c784113d","size":729,"content":"---\ntitle: createContext in a Server Component\n---\n\n## Why This Error Occurred\n\nYou are using `createContext` in a Server Component but it only works in Client Components.\n\n## Possible Ways to Fix It\n\nMark the component using `createContext` as a Client Component by adding `'use client'` at the top of the file.\n\n##### Before\n\n```jsx filename=\"app/example-component.js\"\nimport { createContext } from 'react'\n\nconst Context = createContext()\n```\n\n##### After\n\n```jsx filename=\"app/example-component.js\"\n'use client'\nimport { createContext } from 'react'\n\nconst Context = createContext()\n```\n\n## Useful Links\n\n[Server and Client Components Composition Patterns](/docs/app/building-your-application/rendering/composition-patterns)\n"},{"path":"errors/reserved-port.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/reserved-port.mdx","prodUrl":"https://nextjs.org/docs/messages/reserved-port","sha":"335cea91471897f305b860803ad65538a061c20f","size":541,"content":"---\ntitle: Reserved Port\n---\n\n## Why This Error Occurred\n\nServer was started on a reserved port. For example, `4045` is reserved for the Network Paging Protocol (npp).\n\n```\nnext start -p 4045\n```\n\nor\n\n```\nnext dev --port 4045\n```\n\nStarting the server on a reserved port will result in an error.\n\n## Possible Ways to Fix It\n\nChange the provided port to ensure it's not listed in the [Port Blocking](https://fetch.spec.whatwg.org/#port-blocking) section of WHATWG's fetch spec.\n\n## Useful Links\n\n- https://fetch.spec.whatwg.org/#port-blocking\n"},{"path":"errors/class-component-in-server-component.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/class-component-in-server-component.mdx","prodUrl":"https://nextjs.org/docs/messages/class-component-in-server-component","sha":"701ebfd30c9f97f9cc5240f87902b363d826bb5e","size":1098,"content":"---\ntitle: React Class component rendered in a Server Component\n---\n\n## Why This Error Occurred\n\nYou are rendering a React Class Component in a Server Component, `React.Component` and `React.PureComponent` only works in Client Components.\n\n## Possible Ways to Fix It\n\nUse a Function Component.\n\n##### Before\n\n```jsx filename=\"app/page.js\"\nexport default class Page extends React.Component {\n  render() {\n    return <p>Hello world</p>\n  }\n}\n```\n\n##### After\n\n```jsx filename=\"app/page.js\"\nexport default function Page() {\n  return <p>Hello world</p>\n}\n```\n\nMark the component rendering the React Class Component as a Client Component by adding `'use client'` at the top of the file.\n\n##### Before\n\n```jsx filename=\"app/page.js\"\nexport default class Page extends React.Component {\n  render() {\n    return <p>Hello world</p>\n  }\n}\n```\n\n##### After\n\n```jsx filename=\"app/page.js\"\n'use client'\n\nexport default class Page extends React.Component {\n  render() {\n    return <p>Hello world</p>\n  }\n}\n```\n\n## Useful Links\n\n[Server Components](/docs/app/building-your-application/rendering/server-components)\n"},{"path":"errors/opt-out-automatic-prerendering.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/opt-out-automatic-prerendering.mdx","prodUrl":"https://nextjs.org/docs/messages/opt-out-automatic-prerendering","sha":"707a83ac067da9ddfb6ae18641c90ba760013e59","size":1148,"content":"---\ntitle: Opt-out of Automatic Static Optimization\n---\n\n#### Why This Warning Occurred\n\nYou are using `getInitialProps` in your [Custom `<App>`](/docs/pages/building-your-application/routing/custom-app).\n\nThis causes **all pages** to be executed on the server -- disabling [Automatic Static Optimization](/docs/pages/building-your-application/rendering/automatic-static-optimization).\n\n## Possible Ways to Fix It\n\nBe sure you meant to use `getInitialProps` in `pages/_app`!\nThere are some valid use cases for this, but it is often better to handle `getInitialProps` on a _per-page_ basis.\n\nIf you previously copied the [Custom `<App>`](/docs/pages/building-your-application/routing/custom-app) example, you may be able to remove your `getInitialProps`.\n\nThe following `getInitialProps` does nothing and may be removed:\n\n```js filename=\"pages/_app.js\"\nclass MyApp extends App {\n  // Remove me, I do nothing!\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {}\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    return { pageProps }\n  }\n\n  render() {\n    // ...\n  }\n}\n```\n"},{"path":"errors/no-document-import-in-page.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-document-import-in-page.mdx","prodUrl":"https://nextjs.org/docs/messages/no-document-import-in-page","sha":"79fd9d6da8e16e7b0a9271b30c5fbcc7a75ad437","size":776,"content":"---\ntitle: No Document Import in Page\n---\n\n> Prevent importing `next/document` outside of `pages/_document.js`.\n\n## Why This Error Occurred\n\n`next/document` was imported in a page outside of `pages/_document.js` (or `pages/_document.tsx` if you are using TypeScript). This can cause unexpected issues in your application.\n\n## Possible Ways to Fix It\n\nOnly import and use `next/document` within `pages/_document.js` (or `pages/_document.tsx`) to override the default `Document` component:\n\n```jsx filename=\"pages/_document.js\"\nimport Document, { Html, Head, Main, NextScript } from 'next/document'\n\nclass MyDocument extends Document {\n  //...\n}\n\nexport default MyDocument\n```\n\n## Useful Links\n\n- [Custom Document](/docs/pages/building-your-application/routing/custom-document)\n"},{"path":"errors/no-head-element.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-head-element.mdx","prodUrl":"https://nextjs.org/docs/messages/no-head-element","sha":"6193c3f41888fe148ebb685983a71308d2dfeaad","size":707,"content":"---\ntitle: No Head Element\n---\n\n> Prevent usage of `<head>` element.\n\n## Why This Error Occurred\n\nA `<head>` element was used to include page-level metadata, but this can cause unexpected behavior in a Next.js application. Use Next.js' built-in `next/head` component instead.\n\n## Possible Ways to Fix It\n\nImport and use the `<Head />` component:\n\n```jsx filename=\"pages/index.js\"\nimport Head from 'next/head'\n\nfunction Index() {\n  return (\n    <>\n      <Head>\n        <title>My page title</title>\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n      </Head>\n    </>\n  )\n}\n\nexport default Index\n```\n\n## Useful Links\n\n- [next/head](/docs/pages/api-reference/components/head)\n"},{"path":"errors/deleting-query-params-in-middlewares.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/deleting-query-params-in-middlewares.mdx","prodUrl":"https://nextjs.org/docs/messages/deleting-query-params-in-middlewares","sha":"a111fda4431d78e8881e543c0a293064777d47ee","size":1414,"content":"---\ntitle: Deleting Query Parameters In Middlewares\n---\n\n## Why This Error Occurred\n\nIn previous versions of Next.js, we were merging query parameters with the incoming request for rewrites happening in middlewares, to match the behavior of static rewrites declared in the config. This forced Next.js users to use empty query parameters values to delete keys.\n\nWe are changing this behavior to allow extra flexibility and a more streamlined experience for users. So from now on, query parameters will not be merged and thus the warning.\n\n```ts filename=\"middleware.ts\"\nimport type { NextRequest } from 'next/server'\nimport { NextResponse } from 'next/server'\n\nexport default function middleware(request: NextRequest) {\n  const nextUrl = request.nextUrl\n  nextUrl.searchParams.delete('key') // <-- this is now possible! 🎉\n  return NextResponse.rewrite(nextUrl)\n}\n```\n\n## Possible Ways to Fix It\n\nIf you are relying on the old behavior, please add the query parameters manually to the rewritten URL. Using `request.nextUrl` would do that automatically for you.\n\n```ts filename=\"middleware.ts\"\nimport type { NextRequest } from 'next/server'\nimport { NextResponse } from 'next/server'\n\nexport default function middleware(request: NextRequest) {\n  const nextUrl = request.nextUrl\n  nextUrl.pathname = '/dest'\n  return NextResponse.rewrite(nextUrl)\n}\n```\n\nThis warning will be removed in the next version of Next.js.\n"},{"path":"errors/config-resolve-alias.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/config-resolve-alias.mdx","prodUrl":"https://nextjs.org/docs/messages/config-resolve-alias","sha":"21906abdaff2ae011cb4b7b8fa2eac1cb0a33262","size":655,"content":"---\ntitle: Invalid webpack resolve alias\n---\n\n## Why This Error Occurred\n\nWhen overriding `config.resolve.alias` incorrectly in `next.config.js` webpack will throw an error because private-next-pages is not defined.\n\n## Possible Ways to Fix It\n\nThis is not a bug in Next.js, it's related to the user adding a custom webpack(config) config to next.config.js and overriding internals by not applying Next.js' aliases. Solution would be:\n\n```js filename=\"next.config.js\"\nwebpack(config) {\n  config.resolve.alias = {\n    ...config.resolve.alias,\n    // your aliases\n  }\n}\n```\n\n## Useful Links\n\n- [Related issue](https://github.com/vercel/next.js/issues/6681)\n"},{"path":"errors/css-modules-npm.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/css-modules-npm.mdx","prodUrl":"https://nextjs.org/docs/messages/css-modules-npm","sha":"644a6532d3e5cfc7fb8ac0c87bd017f6606ea9f9","size":907,"content":"---\ntitle: CSS Modules Imported by a Dependency\n---\n\n## Why This Error Occurred\n\nOne of your dependencies (`node_modules`) imports a CSS Modules file.\n\nThis normally happens when a package's source files are accidentally consumed,\ninstead of the built package.\n\n## Possible Ways to Fix It\n\nReach out to the maintainer and ask for them to publish a compiled version of\ntheir dependency.\n\nCompiled dependencies do not have references to CSS Module files, or any other\nfiles that require bundler-specific integrations.\n\nThe dependency should also provide instructions about what CSS needs to be\nimported by you, in your application.\n\nIf this is **first-party code**, try [including monorepo packages in the compilation pipeline](/docs/architecture/nextjs-compiler#module-transpilation).\n\n> **Good to know**: This limitation does not exist when using the [`app` directory](/docs/app/building-your-application).\n"},{"path":"errors/future-webpack5-moved-to-webpack5.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/future-webpack5-moved-to-webpack5.mdx","prodUrl":"https://nextjs.org/docs/messages/future-webpack5-moved-to-webpack5","sha":"a33c89bf24cfc805ca117291f8c051342a5e43e3","size":657,"content":"---\ntitle: '`future.webpack5` has been moved to `webpack5`'\n---\n\n## Why This Error Occurred\n\nThe `future.webpack5` option has been moved to `webpack5` in `next.config.js`.\n\n## Possible Ways to Fix It\n\nIf you had the value `true` you can remove the option as webpack 5 is now the default for all Next.js apps unless opted out.\n\nIf you had the value `false` you can update `next.config.js`:\n\nChange `future.webpack5` to `webpack5`.\n\nCurrent `next.config.js`:\n\n```js filename=\"next.config.js\"\nmodule.exports = {\n  future: {\n    webpack5: false,\n  },\n}\n```\n\nUpdated `next.config.js`:\n\n```js filename=\"next.config.js\"\nmodule.exports = {\n  webpack5: false,\n}\n```\n"},{"path":"errors/invalid-react-version.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-react-version.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-react-version","sha":"a7f4782a8e1999ee8d37f928494615eb35cd1707","size":418,"content":"---\ntitle: Invalid React Version\n---\n\n## Why This Error Occurred\n\nYou tried running `next` in a project with an incompatible react version. Next.js uses certain react features that when are unavailable show this error since it can't work without them.\n\n## Possible Ways to Fix It\n\nRun `npm i react@latest react-dom@latest` or `yarn add react@latest react-dom@latest` in your project and then try running `next` again.\n"},{"path":"errors/amp-export-validation.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/amp-export-validation.mdx","prodUrl":"https://nextjs.org/docs/messages/amp-export-validation","sha":"fd00950ea8dfc01b5f4bee0e09f1c7b2189b134a","size":1215,"content":"---\ntitle: Troubleshooting \"AMP Export Validation\" Error in Next.js\ndescription: This document provides insights on the \"AMP Export Validation\" error in Next.js and how to address it.\n---\n\n## Why This Error Occurred\n\nThe \"AMP Export Validation\" error typically occurs during the export process when the AMP pages are validated using the [amphtml-validator](https://www.npmjs.com/package/amphtml-validator). If the validator returns any errors, the export process will fail.\n\nAMP validation errors are crucial as they can prevent your pages from being indexed by AMP Caches. AMP Caches are systems that store and serve valid AMP documents to ensure faster delivery of AMP pages to users.\n\n## Possible Ways to Fix It\n\nTo resolve this issue, carefully review the error messages provided by the validator. These messages usually provide detailed insights into the problem and how to fix it. Following the links associated with these error messages can also guide you to more information about the particular error and its solution.\n\n## Useful Links\n\n- [AMP HTML Specification](https://www.ampproject.org/docs/fundamentals/spec) - Get more details about AMP standards and conventions to ensure your pages are compliant.\n"},{"path":"errors/deprecated-target-config.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/deprecated-target-config.mdx","prodUrl":"https://nextjs.org/docs/messages/deprecated-target-config","sha":"e944864350a5d65b56c69cc793ad150e604f31dc","size":459,"content":"---\ntitle: Deprecated target config\n---\n\n## Why This Error Occurred\n\nStarting in Next.js 13, the `target` property in `next.config.js` has been removed.\n\n## Possible Ways to Fix It\n\nFor serverless targets, please use the Output File Tracing or deploy your application somewhere where it can be leveraged automatically, like [Vercel](https://vercel.com).\n\n## Useful Links\n\n- [Output File Tracing Documentation](/docs/pages/api-reference/next-config-js/output)\n"},{"path":"errors/max-custom-routes-reached.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/max-custom-routes-reached.mdx","prodUrl":"https://nextjs.org/docs/messages/max-custom-routes-reached","sha":"f88e9ef5ad387534c94cf1616cd485191b71240f","size":892,"content":"---\ntitle: Max Custom Routes Reached\n---\n\n## Why This Error Occurred\n\nThe number of combined routes from `headers`, `redirects`, and `rewrites` exceeds 1000. This can impact performance because each request will iterate over all routes to check for a match in the worst case.\n\n## Possible Ways to Fix It\n\n- Leverage dynamic routes inside of the `pages` folder to reduce the number of rewrites needed\n- Combine headers routes into dynamic matches e.g. `/first-header-route` `/second-header-route` -> `/(first-header-route$|second-header-route$)`\n\n## Useful Links\n\n- [Dynamic Routes documentation](/docs/pages/building-your-application/routing/dynamic-routes)\n- [Rewrites documentation](/docs/pages/api-reference/next-config-js/rewrites)\n- [Redirects documentation](/docs/pages/api-reference/next-config-js/redirects)\n- [Headers documentation](/docs/pages/api-reference/next-config-js/headers)\n"},{"path":"errors/conflicting-amp-tag.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/conflicting-amp-tag.mdx","prodUrl":"https://nextjs.org/docs/messages/conflicting-amp-tag","sha":"a6f88fbf54458112d7a68f896438ce06d4367456","size":361,"content":"---\ntitle: Conflicting AMP Tag\n---\n\n## Why This Error Occurred\n\nIn AMP mode Next.js adds certain necessary tags automatically to comply with the AMP standard. You added a tag using `next/head` that conflicts with one of these automatically added tags.\n\n## Possible Ways to Fix It\n\nRemove the tag mentioned in the error message from any `<Head></Head>` elements\n"},{"path":"errors/doc-crossorigin-deprecated.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/doc-crossorigin-deprecated.mdx","prodUrl":"https://nextjs.org/docs/messages/doc-crossorigin-deprecated","sha":"aa52e393b7d87a60f180ac4bd3bde37409e9ff01","size":400,"content":"---\ntitle: '`Head` or `NextScript` attribute `crossOrigin` is deprecated'\n---\n\n## Why This Error Occurred\n\nThis option has been moved to `next.config.js`.\n\n## Possible Ways to Fix It\n\nAdd the config option:\n\n```js filename=\"next.config.js\"\nmodule.exports = {\n  crossOrigin: 'anonymous',\n}\n```\n\n## Useful Links\n\n- [The issue this was reported in: #5674](https://github.com/vercel/next.js/issues/5674)\n"},{"path":"errors/link-passhref.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/link-passhref.mdx","prodUrl":"https://nextjs.org/docs/messages/link-passhref","sha":"b826f7ff1299e3b90adb5f721a1072eae6f84605","size":842,"content":"---\ntitle: 'Link `passHref`'\n---\n\n> Ensure `passHref` is used with custom `Link` components.\n\n## Why This Error Occurred\n\n`passHref` was not used for a `Link` component that wraps a custom component. This is needed in order to pass the `href` to the child `<a>` tag.\n\n## Possible Ways to Fix It\n\nIf you're using a custom component that wraps an `<a>` tag, make sure to add `passHref`:\n\n```jsx filename=\"nav-link.js\"\nimport Link from 'next/link'\nimport styled from 'styled-components'\n\nconst StyledLink = styled.a`\n  color: red;\n`\n\nfunction NavLink({ href, name }) {\n  return (\n    <Link href={href} passHref>\n      <StyledLink>{name}</StyledLink>\n    </Link>\n  )\n}\n\nexport default NavLink\n```\n\n## Useful Links\n\n- [next/link - Custom Component](/docs/pages/api-reference/components/link#if-the-child-is-a-custom-component-that-wraps-an-a-tag)\n"},{"path":"errors/generatebuildid-not-a-string.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/generatebuildid-not-a-string.mdx","prodUrl":"https://nextjs.org/docs/messages/generatebuildid-not-a-string","sha":"f3642d7e59e943c561b6d292688369a6f1d98d93","size":304,"content":"---\ntitle: '`generateBuildId` did not return a string'\n---\n\n## Why This Error Occurred\n\nThe most common cause for this issue is a custom `next.config.js` with the `generateBuildId` method defined, but it does not return a string.\n\n## Possible Ways to Fix It\n\nAlways return a string from generateBuildId.\n"},{"path":"errors/minification-disabled.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/minification-disabled.mdx","prodUrl":"https://nextjs.org/docs/messages/minification-disabled","sha":"1f0af010ec0e359d3010d0166988a891a9eb388b","size":646,"content":"---\ntitle: Minification Disabled in Production\n---\n\n## Why This Error Occurred\n\nCode optimization has been disabled for your **production build**.\nThe `optimization.minimize` or `optimization.minimizer` was incorrectly overridden in `next.config.js`.\n\nThis severely degrades your application's performance at runtime. It can also result in server-side-only code being downloaded by your users.\n\n## Possible Ways to Fix It\n\nBe sure your `next.config.js` has not modified `optimization.minimize` or `optimization.minimizer`.\n\nYou can file an issue on our GitHub if you do not understand why minification is being disabled by your `next.config.js`.\n"},{"path":"errors/next-start-serverless.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/next-start-serverless.mdx","prodUrl":"https://nextjs.org/docs/messages/next-start-serverless","sha":"24ad0d48838d2fc4802e81c0fd124154c04234b0","size":466,"content":"---\ntitle: 'Using `next start` with `target` not set to `server`'\n---\n\n## Why This Error Occurred\n\nNext.js can only handle running a server when the `target` is set to `server` (this is the default value). A serverless build, for instance, has no handler for requests–this is usually implemented by a hosting provider.\n\n## Possible Ways to Fix It\n\nUse a different handler than `next start` when testing a serverless **production** build, otherwise use `next dev`.\n"},{"path":"errors/import-esm-externals.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/import-esm-externals.mdx","prodUrl":"https://nextjs.org/docs/messages/import-esm-externals","sha":"93947e85af530913598bfc178820810bd90f2b4f","size":767,"content":"---\ntitle: ESM packages need to be imported\n---\n\n## Why This Error Occurred\n\nPackages in node_modules that are published as EcmaScript Module, need to be `import`ed via `import ... from 'package'` or `import('package')`.\n\nYou get this error when using a different way to reference the package, e. g. `require()`.\n\n## Possible Ways to Fix It\n\n1. Use `import` or `import()` to reference the package instead. (Recommended)\n\n2. If you are already using `import`, make sure that this is not changed by a transpiler, e. g. TypeScript or Babel.\n\n3. Switch to loose mode (`experimental.esmExternals: 'loose'`), which tries to automatically correct this error.\n\n## Useful Links\n\n- [Node.js ESM require docs](https://nodejs.org/dist/latest-v16.x/docs/api/esm.html#esm_require)\n"},{"path":"errors/invalid-route-source.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-route-source.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-route-source","sha":"391f7e22a2c9d6482b5c6ffd41678d218114ce2e","size":1065,"content":"---\ntitle: 'Invalid Custom Route `source`'\n---\n\n## Why This Error Occurred\n\nA pattern could not be parsed when defining custom routes or a middleware `matcher`.\n\nThis could have been due to trying to use normal `RegExp` syntax like negative lookaheads (`?!exclude`) without following [`path-to-regexp`](https://github.com/pillarjs/path-to-regexp)'s syntax.\n\n## Possible Ways to Fix It\n\nWrap the `RegExp` part of your `source` as an un-named parameter.\n\n##### Custom Routes\n\n**Before**\n\n```js\n{\n  source: '/feedback/(?!general)',\n  destination: '/feedback/general'\n}\n```\n\n**After**\n\n```js\n{\n  source: '/feedback/((?!general).*)',\n  destination: '/feedback/general'\n}\n```\n\n##### Middleware\n\n**Before**\n\n```ts filename=\"middleware.ts\"\nconst config = {\n  matcher: '/feedback/(?!general)',\n}\n```\n\n**After**\n\n```ts filename=\"middleware.ts\"\nconst config = {\n  matcher: '/feedback/((?!general).*)',\n}\n```\n\n## Useful Links\n\n- [path-to-regexp](https://github.com/pillarjs/path-to-regexp)\n- [un-named parameters](https://github.com/pillarjs/path-to-regexp#unnamed-parameters)\n"},{"path":"errors/next-export-no-build-id.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/next-export-no-build-id.mdx","prodUrl":"https://nextjs.org/docs/messages/next-export-no-build-id","sha":"2c5afce1f6566404e19d28b28da3e7342ba8f977","size":320,"content":"---\ntitle: Could not find a production build\n---\n\n## Why This Error Occurred\n\nWhen running `next export` a production build is needed.\n\n## Possible Ways to Fix It\n\n- Run `next build` to create a production build before running `next export`.\n- If your intention was to run the development server run `next dev` instead.\n"},{"path":"errors/next-config-error.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/next-config-error.mdx","prodUrl":"https://nextjs.org/docs/messages/next-config-error","sha":"8212c0e91bd0469a082d3c1751f525c937bf95df","size":655,"content":"---\ntitle: '`next.config.js` Loading Error'\n---\n\n## Why This Error Occurred\n\nWhen attempting to load your `next.config.js` or `next.config.mjs` file, an error occurred. This could be due to a syntax error or attempting to `require`/`import` a module that wasn't available.\n\n## Possible Ways to Fix It\n\nSee the error message in your terminal where you started `next` to see more context.\n\n> Note: This config file is not transpiled by Next.js, so only use features supported by your current Node.js version.\n\n## Useful Links\n\n- [next.config.js documentation](/docs/pages/api-reference/next-config-js)\n- [Node.js version feature chart](https://node.green/)\n"},{"path":"errors/middleware-new-signature.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/middleware-new-signature.mdx","prodUrl":"https://nextjs.org/docs/messages/middleware-new-signature","sha":"ea9aa89d427860cf1a5d4bff3783ecb744c18c9f","size":751,"content":"---\ntitle: Deprecated Middleware API Signature\n---\n\n## Why This Error Occurred\n\nYour application is using a Middleware function that is using parameters from the deprecated API.\n\n```ts filename=\"middleware.ts\"\nimport { NextResponse } from 'next/server'\n\nexport function middleware(event) {\n  if (event.request.nextUrl.pathname === '/blocked') {\n    event.respondWith(\n      new NextResponse(null, {\n        status: 403,\n      })\n    )\n  }\n}\n```\n\n## Possible Ways to Fix It\n\nUpdate to use the new API for Middleware:\n\n```ts filename=\"middleware.ts\"\nimport { NextResponse } from 'next/server'\n\nexport function middleware(request) {\n  if (request.nextUrl.pathname === '/blocked') {\n    return new NextResponse(null, {\n      status: 403,\n    })\n  }\n}\n```\n"},{"path":"errors/ppr-preview.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/ppr-preview.mdx","prodUrl":"https://nextjs.org/docs/messages/ppr-preview","sha":"fb431e1dcdc88b3466cb71335ac7685b8643ecbf","size":484,"content":"---\ntitle: Partial Prerendering Preview in Next.js Canary\n---\n\n## Why This Error Occurred\n\nIn your `next.config.js` you enabled `experimental.ppr` but you are not using the latest Next.js canary. To ensure you are experimenting with the latest version, we currently require the use of a canary release.\n\n## Possible Ways to Fix It\n\n- Install `next@canary` (e.g. `npm install next@canary`)\n\n## Useful Links\n\n- [Partial Prerendering Preview](/blog/next-14#partial-prerendering-preview)\n"},{"path":"errors/rewrite-auto-export-fallback.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/rewrite-auto-export-fallback.mdx","prodUrl":"https://nextjs.org/docs/messages/rewrite-auto-export-fallback","sha":"09769394f49c15316d3213ce0c049a36cfb44b6e","size":1216,"content":"---\ntitle: Rewriting to Auto Export or Fallback Dynamic Route\n---\n\n## Why This Error Occurred\n\nOne of your rewrites in your `next.config.js` point to a [dynamic route](/docs/pages/building-your-application/routing/dynamic-routes) that is automatically statically optimized or is a [fallback SSG page](/docs/pages/api-reference/functions/get-static-paths#getstaticpaths-return-values).\n\nRewriting to these pages are not yet supported since rewrites are not available client-side and the dynamic route params are unable to be parsed. Support for this may be added in a future release.\n\n## Possible Ways to Fix It\n\nFor fallback SSG pages you can add the page to the list of [prerendered paths](/docs/pages/api-reference/functions/get-static-paths#paths).\n\nFor static dynamic routes, you will currently need to either rewrite to non-dynamic route or opt the page out of the static optimization with [`getServerSideProps`](/docs/pages/building-your-application/data-fetching/get-server-side-props)\n\n## Useful Links\n\n- [Dynamic Routes Documentation](/docs/pages/building-your-application/routing/dynamic-routes)\n- [Fallback Documentation](/docs/pages/api-reference/functions/get-static-paths#getstaticpaths-return-values)\n"},{"path":"errors/routes-must-be-array.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/routes-must-be-array.mdx","prodUrl":"https://nextjs.org/docs/messages/routes-must-be-array","sha":"b15bc9b0e053673f8fcce6dc5feb38c442267f5f","size":651,"content":"---\ntitle: Custom Routes must return an array\n---\n\n## Why This Error Occurred\n\nWhen defining custom routes an array wasn't returned from either `headers`, `rewrites`, or `redirects`.\n\n## Possible Ways to Fix It\n\nMake sure to return an array that contains the routes.\n\n**Before**\n\n```js filename=\"next.config.js\"\nmodule.exports = {\n  async rewrites() {\n    return {\n      source: '/feedback',\n      destination: '/feedback/general',\n    }\n  },\n}\n```\n\n**After**\n\n```js filename=\"next.config.js\"\nmodule.exports = {\n  async rewrites() {\n    return [\n      {\n        source: '/feedback',\n        destination: '/feedback/general',\n      },\n    ]\n  },\n}\n```\n"},{"path":"errors/nested-middleware.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/nested-middleware.mdx","prodUrl":"https://nextjs.org/docs/messages/nested-middleware","sha":"f28d96d899db67ac8d6887dd76296cc7bcd11512","size":1317,"content":"---\ntitle: Nested Middleware\n---\n\n## Why This Error Occurred\n\nYou are defining a Middleware file in a location different from `<root>/middleware`, which is not allowed.\n\nWhile in beta, a Middleware file under specific pages would _only_ be executed when pages below its declaration were matched, allowing nesting Middleware files. Based on customer feedback, we have replaced this API with a single root Middleware.\n\n## Possible Ways to Fix It\n\nDeclare your Middleware in the root folder and use `NextRequest` parsed URL to define which path the Middleware should be executed for.\n\nFor example, a Middleware at `pages/about/_middleware.ts` can move the logic to `<root>/middleware.ts` in the root of your repository. Then, a conditional statement can be used to only run the Middleware when it matches the `about/*` path:\n\n```ts filename=\"middleware.ts\"\nimport type { NextRequest } from 'next/server'\n\nexport function middleware(request: NextRequest) {\n  if (request.nextUrl.pathname.startsWith('/about')) {\n    // This logic is only applied to /about\n  }\n\n  if (request.nextUrl.pathname.startsWith('/dashboard')) {\n    // This logic is only applied to /dashboard\n  }\n}\n```\n\nIf you have more than one Middleware, you should combine them into a single file and model their execution depending on the incoming request.\n"},{"path":"errors/app-static-to-dynamic-error.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/app-static-to-dynamic-error.mdx","prodUrl":"https://nextjs.org/docs/messages/app-static-to-dynamic-error","sha":"07e090ff34fa7fc40b71c46e56017c0800552aa1","size":1776,"content":"---\ntitle: Resolving \"app/ Static to Dynamic Error\" in Next.js\ndescription: This document explains the \"app/ Static to Dynamic Error\" in Next.js and provides potential solutions to resolve it.\n---\n\n## Why This Error Occurred\n\nThe \"`app/` Static to Dynamic Error\" happens when one of your routes in the `app/` directory is initially generated statically at build time, but during runtime it attempts to use dynamic server values (such as `cookies()` or `headers()`) either for a fallback path or while a path is being revalidated.\n\nCurrently, Next.js does not support switching between static and dynamic types during runtime, so the system throws an error.\n\n## Possible Ways to Fix It\n\nTo resolve this issue, you have two main options:\n\n1. Prevent the conditional use of dynamic server values that may cause the static/dynamic mode of the page to differ between build time and runtime. This ensures consistency in the rendering mode of your page.\n\n2. Leverage the `dynamic` export to control the handling of your page. If you want to ensure your page is always handled statically, regardless of the usage of dynamic server values, you can use `export const dynamic = 'force-static'`. Conversely, if you prefer your page to always be dynamic, you can use `export const dynamic = 'force-dynamic'`, and your page won't attempt to be statically generated.\n\n## Useful Links\n\n- [Static and Dynamic Rendering](/docs/app/building-your-application/rendering/server-components#server-rendering-strategies) - Learn more about the differences between static and dynamic rendering in Next.js.\n- [Dynamic Functions](/docs/app/building-your-application/rendering/server-components#dynamic-functions) - Understand more about the usage of dynamic server functions in your Next.js application.\n"},{"path":"errors/build-dir-not-writeable.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/build-dir-not-writeable.mdx","prodUrl":"https://nextjs.org/docs/messages/build-dir-not-writeable","sha":"4944f8018682e3f0fe0313cc468a869500ec4d4d","size":1460,"content":"---\ntitle: Handling \"Build Directory Not Writeable\" Error in Next.js\ndescription: This document explains the \"Build Directory Not Writeable\" error in Next.js and provides a solution to resolve this issue.\n---\n\n## Why This Error Occurred\n\nThe \"Build Directory Not Writeable\" error usually occurs when the file system does not permit writing to the designated directory. A common scenario for this error is when you initiate a [custom server](/docs/pages/building-your-application/configuring/custom-server) in development mode on a production server.\n\nThese production servers often disallow writing to the filesystem after your application is built, causing this error.\n\n## Possible Ways to Fix It\n\nIf you're deploying a custom server with a server file (let's assume it's named `server.js`), you should modify the scripts key in your `package.json` to the following:\n\n```json filename=\"package.json\"\n{\n  \"scripts\": {\n    \"dev\": \"node server.js\",\n    \"build\": \"next build\",\n    \"start\": \"NODE_ENV=production node server.js\"\n  }\n}\n```\n\nEnsure that your custom server starts Next.js in production mode when `NODE_ENV` is set to `production`:\n\n```js filename=\"server.js\"\nconst dev = process.env.NODE_ENV !== 'production'\nconst app = next({ dev })\n```\n\n## Useful Links\n\n- [Custom Server documentation + examples](/docs/pages/building-your-application/configuring/custom-server) - Learn more about how to effectively set up and manage an ejected server in Next.js.\n"},{"path":"errors/api-routes-response-size-limit.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/api-routes-response-size-limit.mdx","prodUrl":"https://nextjs.org/docs/messages/api-routes-response-size-limit","sha":"e66b346204d531df6c85952dc5d5a0ba546a6786","size":1456,"content":"---\ntitle: Addressing \"API Routes Response Size Limited to 4MB\" Error in Next.js\ndescription: This document explains the \"API Routes Response Size Limited to 4MB\" error in Next.js and guides developers on how to modify response size limits.\n---\n\n## Why This Error Occurred\n\nThe \"API Routes Response Size Limited to 4MB\" error arises when your API Route is trying to send a response larger than the allowed size of `4MB`. API Routes in Next.js are designed to deliver quick responses and are not built to support the transmission of large amounts of data.\n\n## Possible Ways to Fix It\n\nIf you are not utilizing Next.js in a serverless environment, and you're fully aware of the performance implications, you can disable this limit in your API Route. Here is how you can set `responseLimit` to `false`:\n\n```js filename=\"pages/api/example.js\"\nexport const config = {\n  api: {\n    responseLimit: false,\n  },\n}\n```\n\nAlternatively, `responseLimit` can also accept a numeric value (in bytes) or any string format supported by the `bytes` module. This can be a value like `1000`, `'500kb'`, or `'3mb'`. This value will set the maximum response size before a warning is displayed. For example, to set the limit to 8MB:\n\n```js filename=\"pages/api/example.js\"\nexport const config = {\n  api: {\n    responseLimit: '8mb',\n  },\n}\n```\n\n**Note:** Increasing the response limit can have significant impacts on performance and should only be done after careful consideration.\n"},{"path":"errors/returning-response-body-in-middleware.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/returning-response-body-in-middleware.mdx","prodUrl":"https://nextjs.org/docs/messages/returning-response-body-in-middleware","sha":"fbc1876279dc17bd52a28c58d8f703618077c061","size":2281,"content":"---\ntitle: Returning response body in Middleware\n---\n\n> Note: In Next.js v13.0.0 you can now respond to Middleware directly by returning a `NextResponse`. For more information, see [Producing a Response](/docs/pages/building-your-application/routing/middleware#producing-a-response).\n\n## Why This Error Occurred\n\n[Middleware](/docs/pages/building-your-application/routing/middleware) can no longer produce a response body as of `v12.2+`.\n\n## Possible Ways to Fix It\n\nMigrate to using `rewrite`/`redirect` to Pages/API Routes handling a response.\n\n#### Explanation\n\nTo respect the differences in client-side and server-side navigation, and to help ensure that developers do not build insecure Middleware, Middleware can no longer produce a response body. This ensures that Middleware is only used to `rewrite`, `redirect`, or modify the incoming request (e.g. [setting cookies](/docs/pages/building-your-application/routing/middleware#using-cookies)).\n\nThe following patterns will no longer work:\n\n```js\nnew Response('a text value')\nnew Response(streamOrBuffer)\nnew Response(JSON.stringify(obj), { headers: 'application/json' })\nNextResponse.json()\n```\n\n### How to upgrade\n\nFor cases where Middleware is used to respond (such as authorization), you should migrate to use `rewrite`/`redirect` to pages that show an authorization error, login forms, or to an API Route.\n\n#### Before\n\n```ts filename=\"pages/_middleware.ts\"\nimport { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\nimport { isAuthValid } from './lib/auth'\n\nexport function middleware(request: NextRequest) {\n  // Example function to validate auth\n  if (isAuthValid(request)) {\n    return NextResponse.next()\n  }\n\n  return NextResponse.json({ message: 'Auth required' }, { status: 401 })\n}\n```\n\n#### After\n\n```ts filename=\"middleware.ts\"\nimport { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\nimport { isAuthValid } from './lib/auth'\n\nexport function middleware(request: NextRequest) {\n  // Example function to validate auth\n  if (isAuthValid(request)) {\n    return NextResponse.next()\n  }\n\n  request.nextUrl.searchParams.set('from', request.nextUrl.pathname)\n  request.nextUrl.pathname = '/login'\n\n  return NextResponse.redirect(request.nextUrl)\n}\n```\n"},{"path":"errors/css-global.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/css-global.mdx","prodUrl":"https://nextjs.org/docs/messages/css-global","sha":"95550d5fdafab8912a3e00191c5333bf68061236","size":1823,"content":"---\ntitle: 'Global CSS Must Be in Your Custom `<App>`'\n---\n\n## Why This Error Occurred\n\nAn attempt to import Global CSS from a file outside of [`pages/_app.js`](/docs/pages/building-your-application/routing/custom-app) was made.\n\nGlobal CSS cannot be used in files other than your [custom `_app.js` file](/docs/pages/building-your-application/routing/custom-app) due to ordering problems and side-effects.\n\n## Possible Ways to Fix It\n\nThere are two possible ways to fix this error:\n\n- Move all global CSS imports to your [`pages/_app.js` file](/docs/pages/building-your-application/routing/custom-app).\n- If you do not wish your stylesheet to be global, update it to use [CSS Modules](/docs/pages/building-your-application/styling/css-modules). This will allow you to import the stylesheet and scope the styles to a specific component.\n\n#### Example\n\nConsider the stylesheet named [`styles.css`](/docs/pages/building-your-application/styling/css-modules)\n\n```css filename=\"styles.css\"\nbody {\n  font-family: 'SF Pro Text', 'SF Pro Icons', 'Helvetica Neue', 'Helvetica',\n    'Arial', sans-serif;\n  padding: 20px 20px 60px;\n  max-width: 680px;\n  margin: 0 auto;\n}\n```\n\n**Global CSS**:\n\nCreate a [`pages/_app.js` file](/docs/pages/building-your-application/routing/custom-app) if not already present. Then import the `styles.css` file:\n\n```jsx filename=\"pages/_app.js\"\nimport '../styles.css'\n\nexport default function MyApp({ Component, pageProps }) {\n  return <Component {...pageProps} />\n}\n```\n\n**CSS Modules**:\n\nRename the `styles.css` file to `styles.module.css`. Then import the file in the component or page where you want to use the styles.\n\n```jsx filename=\"pages/index.js\"\nimport styles from '../../styles.module.css'\n\nexport default function Home() {\n  return <div className={styles.container}>Hello World</div>\n}\n```\n"},{"path":"errors/api-routes-static-export.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/api-routes-static-export.mdx","prodUrl":"https://nextjs.org/docs/messages/api-routes-static-export","sha":"c2906f88d87f9afd246cb30345b75e5d86f2ca81","size":1985,"content":"---\ntitle: Understanding \"API Routes in Static Export\" Warning in Next.js\ndescription: This document explains the \"API Routes in Static Export\" warning in Next.js and offers steps to resolve it.\n---\n\n## Why This Warning Occurred\n\nThe \"API Routes in Static Export\" warning is typically raised when an `exportPathMap` path is matched to an API route while trying to statically export a Next.js application via the `next export` command. This command disables API routes as it is designed for a static-only setup.\n\nRunning `next export` is not necessary to make your application static. Pages in your application that do not have server-side data dependencies will be automatically statically optimized when you run `next build`. This includes pages powered by `getStaticProps`.\n\n## Possible Ways to Fix It\n\nTo resolve this issue, you have two main options:\n\n1. Use the `next build` command instead of `next export` if you're deploying your application on platforms that don't require `next export`. For example, [Vercel](https://vercel.com) is a popular hosting platform for Next.js applications that supports this feature.\n2. If you still need to use `next export`, make sure to remove any paths that use API routes from your `exportPathMap` in your `next.config.js` file.\n3. Consider [incrementally adopting the App Router](/docs/app/building-your-application/upgrading/app-router-migration), which supports [Route Handlers](/docs/app/building-your-application/routing/route-handlers). These \"API Routes\" can be used to create endpoints that can be statically exported in your application.\n\n## Useful Links\n\n- [Static HTML export](/docs/pages/building-your-application/deploying/static-exports) - Learn more about how you can create a static HTML export of your Next.js application.\n- [Route Handlers](/docs/app/building-your-application/routing/route-handlers) - Learn more about how you can use Route Handlers to create endpoints that can be statically exported in your application.\n"},{"path":"errors/prerender-error.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/prerender-error.mdx","prodUrl":"https://nextjs.org/docs/messages/prerender-error","sha":"02f4106dfc7624e19ad7ff19e8fb0e95c734e1aa","size":1434,"content":"---\ntitle: Prerender Error\n---\n\n## Why This Error Occurred\n\nWhile prerendering a page an error occurred. This can occur for many reasons from adding non-pages e.g. `components` to your `pages` folder or expecting props to be populated which are not.\n\n## Possible Ways to Fix It\n\n- Use Next.js 13 (or higher) and the [App Router](/docs#app-router-vs-pages-router), which allows [colocation](/docs/app/building-your-application/routing#colocation) of pages and other files (e.g. components, styles, tests, etc)\n- Make sure to move any non-pages out of the `pages` folder\n- Check for any code that assumes a prop is available, even when it might not be\n- Set default values for all dynamic pages' props (avoid `undefined`, use `null` instead so it can be serialized)\n- Check for any out of date modules that you might be relying on\n- Make sure your component handles `fallback` if it is enabled in `getStaticPaths`. [Fallback docs](/docs/pages/api-reference/functions/get-static-paths#fallback-false)\n- Make sure you are not trying to export (`output: 'export'` or `next export`) pages that have server-side rendering enabled [`getServerSideProps`](/docs/pages/building-your-application/data-fetching/get-server-side-props)\n- If necessary, you can [disable server-side rendering](/docs/pages/building-your-application/optimizing/lazy-loading#with-no-ssr) for a specific component that may be attempting to use browser APIs like `window`\n"},{"path":"errors/no-img-element.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-img-element.mdx","prodUrl":"https://nextjs.org/docs/messages/no-img-element","sha":"5fc463344a6392887d1ef83d87a7ef84a98d2733","size":2182,"content":"---\ntitle: No img element\n---\n\n> Prevent usage of `<img>` element due to slower LCP and higher bandwidth.\n\n## Why This Error Occurred\n\nAn `<img>` element was used to display an image instead of `<Image />` from `next/image`.\n\n## Possible Ways to Fix It\n\nUse [`next/image`](/docs/pages/api-reference/components/image) to improve performance with automatic [Image Optimization](/docs/pages/building-your-application/optimizing/images).\n\n> Note: If deploying to a [managed hosting provider](/docs/pages/building-your-application/deploying), remember to check provider pricing since optimized images might be charged differently than the original images.\n>\n> Common image optimization platform pricing:\n>\n> - [Vercel pricing](https://vercel.com/pricing)\n> - [Cloudinary pricing](https://cloudinary.com/pricing)\n> - [imgix pricing](https://imgix.com/pricing)\n\n> Note: If self-hosting, remember to install [`sharp`](https://www.npmjs.com/package/sharp) and check if your server has enough storage to cache the optimized images.\n\n```jsx filename=\"pages/index.js\"\nimport Image from 'next/image'\n\nfunction Home() {\n  return (\n    <Image\n      src=\"https://example.com/hero.jpg\"\n      alt=\"Landscape picture\"\n      width={800}\n      height={500}\n    />\n  )\n}\n\nexport default Home\n```\n\nIf you would like to use `next/image` features such as blur-up placeholders but disable Image Optimization, you can do so using [unoptimized](/docs/pages/api-reference/components/image#unoptimized).\n\nOr, use a `<picture>` element with the nested `<img>` element:\n\n```jsx filename=\"pages/index.js\"\nfunction Home() {\n  return (\n    <picture>\n      <source srcSet=\"https://example.com/hero.avif\" type=\"image/avif\" />\n      <source srcSet=\"https://example.com/hero.webp\" type=\"image/webp\" />\n      <img\n        src=\"https://example.com/hero.jpg\"\n        alt=\"Landscape picture\"\n        width={800}\n        height={500}\n      />\n    </picture>\n  )\n}\n```\n\n## Useful Links\n\n- [Image Component and Image Optimization](/docs/pages/building-your-application/optimizing/images)\n- [next/image API Reference](/docs/pages/api-reference/components/image)\n- [Largest Contentful Paint (LCP)](/learn/seo/web-performance/lcp)\n"},{"path":"errors/dynamic-server-error.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/dynamic-server-error.mdx","prodUrl":"https://nextjs.org/docs/messages/dynamic-server-error","sha":"398ffc03fc75bd208b76549b1a8ad9e15239a265","size":2824,"content":"---\ntitle: DynamicServerError - Dynamic Server Usage\n---\n\n#### Why This Message Occurred\n\nYou attempted to use a Next.js function that depends on Async Context (such as `headers` or `cookies` from `next/headers`) but it was not bound to the same call stack as the function that ran it (e.g., calling `cookies()` inside of a `setTimeout` or `setInterval`).\n\nWhile generating static pages, Next.js will throw a `DynamicServerError` if it detects usage of a dynamic function, and catch it to automatically opt the page into dynamic rendering. However, when it's uncaught, it will result in this build-time error.\n\n## What is Async Context?\n\n[Async Context](https://github.com/tc39/proposal-async-context) is a way to pass data within the same call stack, even through asynchronous operations. This is very useful in Next.js, where functions like cookies or headers might be called from anywhere within a React component tree or other functions during React rendering.\n\n## Scenarios that can cause this to happen\n\n- The function was called inside of a `setTimeout` or `setInterval`, causing the value to be read outside of the call stack that the context was bound to.\n- The function was called after an async operation, but the promise wasn't awaited. This can cause the function to be called after the async operation has completed, resulting in a new execution context and loss of the original async context.\n\n### Example of Incorrect Usage\n\n```jsx filename=\"app/page.js\"\nimport { cookies } from 'next/headers'\n\nasync function getCookieData() {\n  return new Promise((resolve) =>\n    setTimeout(() => {\n      // cookies will be called outside of the async context, causing a build-time error\n      resolve(cookies().getAll())\n    }, 1000)\n  )\n}\n\nexport default async function Page() {\n  const cookieData = await getCookieData()\n  return <div>Hello World</div>\n}\n```\n\n## Possible Ways to Fix It\n\n**Manage Execution Contexts Correctly:** JavaScript operations like `setTimeout`, `setInterval`, event handlers, and Promises create new execution contexts. You need to maintain the async context when using these operations. Some strategies include:\n\n- Invoke the function that depends on the async context outside of the function that creates a new execution context.\n- Ensure that you await Promises that invoke a function that depends on async context, otherwise the function may be called after the async operation has completed.\n\n### Example of Correct Usage\n\n```jsx filename=\"app/page.js\"\nimport { cookies } from 'next/headers'\n\nasync function getCookieData() {\n  const cookieData = cookies().getAll()\n  return new Promise((resolve) =>\n    setTimeout(() => {\n      resolve(cookieData)\n    }, 1000)\n  )\n}\n\nexport default async function Page() {\n  const cookieData = await getCookieData()\n  return <div>Hello World</div>\n}\n```\n"},{"path":"errors/improper-devtool.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/improper-devtool.mdx","prodUrl":"https://nextjs.org/docs/messages/improper-devtool","sha":"50015aac0a3f651e732b1cfad599a780de7d303a","size":625,"content":"---\ntitle: 'Improper webpack `devtool` used in development mode'\n---\n\n## Why This Error Occurred\n\nNext.js chooses the most optimal `devtool` for use with webpack. Changing the `devtool` in development mode will cause severe performance regressions with your application.\n\n## Possible Ways to Fix It\n\nPlease remove the custom `devtool` override or only apply it to production builds in your `next.config.js`.\n\n```js filename=\"next.config.js\"\nmodule.exports = {\n  webpack: (config, options) => {\n    if (!options.dev) {\n      config.devtool = options.isServer ? false : 'your-custom-devtool'\n    }\n    return config\n  },\n}\n```\n"},{"path":"errors/head-build-id.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/head-build-id.mdx","prodUrl":"https://nextjs.org/docs/messages/head-build-id","sha":"c96a1388168bb11e16f1f6daf8e6d287f4ff4450","size":364,"content":"---\ntitle: 'Failed to load `BUILD_ID` from Server'\n---\n\n## Why This Error Occurred\n\nThe deployment was generated incorrectly or the server was overloaded at the time of the request.\n\n## Possible Ways to Fix It\n\nPlease make sure you are using the latest version of the `@vercel/next` builder in your `vercel.json`.\nIf this error persists, please file a bug report.\n"},{"path":"errors/module-not-found.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/module-not-found.mdx","prodUrl":"https://nextjs.org/docs/messages/module-not-found","sha":"c28e25607c6fc92720057d2b50f0333aab57c5b0","size":4340,"content":"---\ntitle: Module Not Found\n---\n\n## Why This Error Occurred\n\nA module not found error can occur for many different reasons:\n\n- The module you're trying to import is not installed in your dependencies\n- The module you're trying to import is in a different directory\n- The module you're trying to import has a different casing\n- The module you're trying to import uses Node.js specific modules, for example `dns`, outside of `getStaticProps` / `getStaticPaths` / `getServerSideProps`\n\n## Possible Ways to Fix It\n\n##### The module you're trying to import is not installed in your dependencies\n\nWhen importing a module from [npm](https://npmjs.com) this module has to be installed locally.\n\nFor example when importing the `swr` package:\n\n```js filename=\"example.js\"\nimport useSWR from 'swr'\n```\n\nThe `swr` module has to be installed using a package manager.\n\n- When using `npm`: `npm install swr`\n- When using `yarn`: `yarn add swr`\n\n##### The module you're trying to import is in a different directory\n\nMake sure that the path you're importing refers to the right directory and file.\n\n##### The module you're trying to import has a different casing\n\nMake sure the casing of the file is correct.\n\nExample:\n\n```js filename=\"components/MyComponent.js\"\nexport default function MyComponent() {\n  return <h1>Hello</h1>\n}\n```\n\n```jsx filename=\"pages/index.js\"\n// Note how `components/MyComponent` exists but `Mycomponent` without the capital `c` is imported\nimport MyComponent from '../components/Mycomponent'\n```\n\nIncorrect casing will lead to build failures on case-sensitive environments like most Linux-based continuous integration and can cause issues with Fast Refresh.\n\n##### The module you're trying to import uses Node.js specific modules\n\n`getStaticProps`, `getStaticPaths`, and `getServerSideProps` allow for using modules that can only run in the Node.js environment. This allows you to do direct database queries or reading data from Redis to name a few examples.\n\nThe tree shaking only runs on top level pages, so it can't be relied on in separate React components.\n\nYou can verify the tree shaking on [next-code-elimination.vercel.app](https://next-code-elimination.vercel.app/).\n\nExample of correctly tree-shaken code:\n\n```js filename=\"lib/redis.js\"\nimport Redis from 'ioredis'\n\nconst redis = new Redis(process.env.REDIS_URL)\n\nexport default redis\n```\n\n```jsx filename=\"pages/index.js\"\nimport redis from '../lib/redis'\n\nexport async function getStaticProps() {\n  const message = await redis.get('message')\n  return {\n    message,\n  }\n}\n\nexport default function Home({ message }) {\n  return <h1>{message}</h1>\n}\n```\n\nExample of code that would break:\n\n```js filename=\"lib/redis.js\"\nimport Redis from 'ioredis'\n\nconst redis = new Redis(process.env.REDIS_URL)\n\nexport default redis\n```\n\n```jsx filename=\"pages/index.js\"\n// Redis is a Node.js specific library that can't run in the browser\n// Trying to use it in code that runs on both Node.js and the browser will result in a module not found error for modules that ioredis relies on\n// If you run into such an error it's recommended to move the code to `getStaticProps` or `getServerSideProps` as those methods guarantee that the code is only run in Node.js.\nimport redis from '../lib/redis'\nimport { useEffect, useState } from 'react'\n\nexport default function Home() {\n  const [message, setMessage] = useState()\n  useEffect(() => {\n    redis.get('message').then((result) => {\n      setMessage(result)\n    })\n  }, [])\n  return <h1>{message}</h1>\n}\n```\n\nExample of code that would break:\n\n```js filename=\"lib/redis.js\"\nimport Redis from 'ioredis'\n\n// Modules that hold Node.js-only code can't also export React components\n// Tree shaking of getStaticProps/getStaticPaths/getServerSideProps is ran only on page files\nconst redis = new Redis(process.env.REDIS_URL)\n\nexport function MyComponent() {\n  return <h1>Hello</h1>\n}\n\nexport default redis\n```\n\n```jsx filename=\"pages/index.js\"\n// In practice you'll want to refactor the `MyComponent` to be a separate file so that tree shaking ensures that specific import is not included for the browser compilation\nimport redis, { MyComponent } from '../lib/redis'\n\nexport async function getStaticProps() {\n  const message = await redis.get('message')\n  return {\n    message,\n  }\n}\n\nexport default function Home() {\n  return <MyComponent />\n}\n```\n"},{"path":"errors/static-dir-deprecated.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/static-dir-deprecated.mdx","prodUrl":"https://nextjs.org/docs/messages/static-dir-deprecated","sha":"0fe81d6a193a76173665e735f3db32f594420862","size":857,"content":"---\ntitle: Static directory is deprecated\n---\n\n## Why This Error Occurred\n\nIn versions prior to 9.0.6 the `static` directory was used to serve static assets in a Next.js application. This has been deprecated in favor of a `public` directory.\n\nThe reason we want to support a `public` directory instead is to not require the `/static` prefix for assets anymore and there is no reason to maintain both paths.\n\n## Possible Ways to Fix It\n\nYou can move your `static` directory inside of the `public` directory and all URLs will stay the same as they were before.\n\n**Before**\n\n```\nstatic/\n  my-image.jpg\npages/\n  index.js\ncomponents/\n  my-image.js\n```\n\n**After**\n\n```\npublic/\n  static/\n    my-image.jpg\npages/\n  index.js\ncomponents/\n  my-image.js\n```\n\n## Useful Links\n\n- [Static file serving docs](/docs/pages/building-your-application/optimizing/static-assets)\n"},{"path":"errors/public-next-folder-conflict.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/public-next-folder-conflict.mdx","prodUrl":"https://nextjs.org/docs/messages/public-next-folder-conflict","sha":"c71123a99cb66c981d46f0d8e526a48e08f074f2","size":381,"content":"---\ntitle: 'Public `_next` folder Conflict'\n---\n\n## Why This Error Occurred\n\nIn your `./public` folder you added a `_next` folder which conflicts with the internal usage of `_next`. Due to this conflicting this folder name is not allowed inside of your `public` folder.\n\n## Possible Ways to Fix It\n\nRename the `_next` folder in your `public` folder to something else or remove it.\n"},{"path":"errors/opening-an-issue.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/opening-an-issue.mdx","prodUrl":"https://nextjs.org/docs/messages/opening-an-issue","sha":"f84778816c0387254ba8fddf9cf52733cfbb3705","size":1344,"content":"---\ntitle: Opening a new Issue\n---\n\n#### Why This Message Occurred\n\nWhen `next info` was run, Next.js detected that it was not on the newest canary release.\n\n`next@canary` is the canary version of Next.js that ships daily. It includes all features and fixes that have not been released to the stable version yet. Think of canary as a public beta.\n\nSome issues may already be fixed in the canary version, so please verify that your issue reproduces before opening a new issue.\n\nRun the following in the codebase:\n\n```bash filename=\"Terminal\"\nnpm install next@canary\n```\n\nor\n\n```bash filename=\"Terminal\"\nyarn add next@canary\n```\n\nAnd go through the prepared reproduction steps once again, and check if the issue still exists.\n\n## Useful Links\n\n- [Video: How to Contribute to Open Source (Next.js)](https://www.youtube.com/watch?v=cuoNzXFLitc)\n- [Contributing to Next.js](https://github.com/vercel/next.js/blob/canary/contributing.md)\n- [Triaging issues](https://github.com/vercel/next.js/blob/canary/contributing/repository/triaging.md)\n- [Verifying canary](https://github.com/vercel/next.js/blob/canary/.github/verify-canary.md)\n- [Adding a reproduction](https://github.com/vercel/next.js/blob/canary/.github/invalid-reproduction.md)\n- [Simplifying a reproduction](https://github.com/vercel/next.js/blob/canary/.github/simplify-reproduction.md)\n"},{"path":"errors/no-title-in-document-head.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-title-in-document-head.mdx","prodUrl":"https://nextjs.org/docs/messages/no-title-in-document-head","sha":"edfc9f0b449552682d11631fbe0143f11cfda4c4","size":848,"content":"---\ntitle: No Title in Document Head\n---\n\n> Prevent usage of `<title>` with `Head` component from `next/document`.\n\n## Why This Error Occurred\n\nA `<title>` element was defined within the `Head` component imported from `next/document`, which should only be used for any `<head>` code that is common for all pages. Title tags should be defined at the page-level using `next/head` instead.\n\n## Possible Ways to Fix It\n\nWithin a page or component, import and use `next/head` to define a page title:\n\n```jsx filename=\"pages/index.js\"\nimport Head from 'next/head'\n\nexport function Home() {\n  return (\n    <div>\n      <Head>\n        <title>My page title</title>\n      </Head>\n    </div>\n  )\n}\n```\n\n## Useful Links\n\n- [next/head](/docs/pages/api-reference/components/head)\n- [Custom Document](/docs/pages/building-your-application/routing/custom-document)\n"},{"path":"errors/large-page-data.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/large-page-data.mdx","prodUrl":"https://nextjs.org/docs/messages/large-page-data","sha":"a3c91e07585989c990b5816339f1be9146715458","size":877,"content":"---\ntitle: Large Page Data\n---\n\n## Why This Error Occurred\n\nOne of your pages includes a large amount of page data (>= 128kB). This can negatively impact performance since page data must be parsed by the client before the page is hydrated.\n\n## Possible Ways to Fix It\n\nReduce the amount of data returned from `getStaticProps`, `getServerSideProps`, or `getInitialProps` to only the essential data to render the page. The default threshold of 128kB can be configured in `largePageDataBytes` if absolutely necessary and the performance implications are understood.\n\nTo inspect the props passed to your page, you can inspect the below element's content in your browser devtools:\n\n```bash filename=\"Terminal\"\nJSON.parse(document.getElementById(\"__NEXT_DATA__\").textContent)\n```\n\n## Useful Links\n\n- [Data Fetching Documentation](/docs/pages/building-your-application/data-fetching)\n"},{"path":"errors/next-image-unconfigured-host.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/next-image-unconfigured-host.mdx","prodUrl":"https://nextjs.org/docs/messages/next-image-unconfigured-host","sha":"ea0496b71fbbd6b43de3c72456e77296e3c75142","size":1140,"content":"---\ntitle: '`next/image` Un-configured Host'\n---\n\n## Why This Error Occurred\n\nOne of your pages that leverages the `next/image` component, passed a `src` value that uses a hostname in the URL that isn't defined in the `images.remotePatterns` in `next.config.js`.\n\n## Possible Ways to Fix It\n\nAdd the protocol, hostname, port, and pathname to the `images.remotePatterns` config in `next.config.js`:\n\n```js filename=\"next.config.js\"\nmodule.exports = {\n  images: {\n    remotePatterns: [\n      {\n        protocol: 'https',\n        hostname: 'assets.example.com',\n        port: '',\n        pathname: '/account123/**',\n      },\n    ],\n  },\n}\n```\n\n#### Fixing older versions of Next.js\n\n<details>\n  <summary>Using Next.js prior to 12.3.0?</summary>\n  \nOlder versions of Next.js can configure `images.domains` instead:\n\n```js filename=\"next.config.js\"\nmodule.exports = {\n  images: {\n    domains: ['assets.example.com'],\n  },\n}\n```\n\n</details>\n\n## Useful Links\n\n- [Image Optimization Documentation](/docs/pages/building-your-application/optimizing/images)\n- [Remote Patterns Documentation](/docs/pages/api-reference/components/image#remotepatterns)\n"},{"path":"errors/no-html-link-for-pages.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-html-link-for-pages.mdx","prodUrl":"https://nextjs.org/docs/messages/no-html-link-for-pages","sha":"16e87fa397ee2c670da5dd510b92ebe855117846","size":1585,"content":"---\ntitle: No HTML link for pages\n---\n\n> Prevent usage of `<a>` elements to navigate to internal Next.js pages.\n\n## Why This Error Occurred\n\nAn `<a>` element was used to navigate to a page route without using the `next/link` component, causing unnecessary full-page refreshes.\n\nThe `Link` component is required to enable client-side route transitions between pages and provide a single-page app experience.\n\n## Possible Ways to Fix It\n\nMake sure to import the `Link` component and wrap anchor elements that route to different page routes.\n\n**Before:**\n\n```jsx filename=\"pages/index.js\"\nfunction Home() {\n  return (\n    <div>\n      <a href=\"/about\">About Us</a>\n    </div>\n  )\n}\n```\n\n**After:**\n\n```jsx filename=\"pages/index.js\"\nimport Link from 'next/link'\n\nfunction Home() {\n  return (\n    <div>\n      <Link href=\"/about\">About Us</Link>\n    </div>\n  )\n}\n\nexport default Home\n```\n\n### Options\n\n#### `pagesDir`\n\nThis rule can normally locate your `pages` directory automatically.\n\nIf you're working in a monorepo, we recommend configuring the [`rootDir`](/docs/pages/building-your-application/configuring/eslint#rootdir) setting in `eslint-plugin-next`, which `pagesDir` will use to locate your `pages` directory.\n\nIn some cases, you may also need to configure this rule directly by providing a `pages` directory. This can be a path or an array of paths.\n\n```json filename=\"eslint.config.json\"\n{\n  \"rules\": {\n    \"@next/next/no-html-link-for-pages\": [\"error\", \"packages/my-app/pages/\"]\n  }\n}\n```\n\n## Useful Links\n\n- [next/link API Reference](/docs/pages/api-reference/components/link)\n"},{"path":"errors/middleware-relative-urls.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/middleware-relative-urls.mdx","prodUrl":"https://nextjs.org/docs/messages/middleware-relative-urls","sha":"8912217f5679b3437094ac0479d28294d9375665","size":1669,"content":"---\ntitle: Middleware Relative URLs\n---\n\n## Why This Error Occurred\n\nYou are using a Middleware function that uses `Response.redirect(url)`, `NextResponse.redirect(url)` or `NextResponse.rewrite(url)` where `url` is a relative or an invalid URL. Prior to Next.js 12.1, we allowed passing relative URLs. However, constructing a request with `new Request(url)` or running `fetch(url)` when `url` is a relative URL **does not** work. For this reason and to bring consistency to Next.js Middleware, this behavior has been deprecated and now removed.\n\n## Possible Ways to Fix It\n\nTo fix this error you must always pass absolute URL for redirecting and rewriting. There are several ways to get the absolute URL but the recommended way is to clone `NextURL` and mutate it:\n\n```ts filename=\"middleware.ts\"\nimport type { NextRequest } from 'next/server'\nimport { NextResponse } from 'next/server'\n\nexport function middleware(request: NextRequest) {\n  const url = request.nextUrl.clone()\n  url.pathname = '/dest'\n  return NextResponse.rewrite(url)\n}\n```\n\nAnother way to fix this error could be to use the original URL as the base but this will not consider configuration like `basePath` or `locale`:\n\n```ts filename=\"middleware.ts\"\nimport type { NextRequest } from 'next/server'\nimport { NextResponse } from 'next/server'\n\nexport function middleware(request: NextRequest) {\n  return NextResponse.rewrite(new URL('/dest', request.url))\n}\n```\n\nYou can also pass directly a string containing a valid absolute URL.\n\n## Useful Links\n\n- [URL Documentation](https://developer.mozilla.org/docs/Web/API/URL)\n- [Response Documentation](https://developer.mozilla.org/docs/Web/API/Response)\n"},{"path":"errors/invalid-project-dir-casing.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-project-dir-casing.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-project-dir-casing","sha":"bdfedbd9774fb84b7252f7a3be2573d122725222","size":769,"content":"---\ntitle: Invalid Project Directory Casing\n---\n\n## Why This Error Occurred\n\nWhen starting Next.js, the current directory is a different casing than the actual directory on your filesystem. This can cause files to resolve inconsistently.\n\nThis can occur when using a case-insensitive filesystem. For example, opening PowerShell on Windows navigating to `cd path/to/myproject` instead of `cd path/to/MyProject`.\n\n## Possible Ways to Fix It\n\nEnsure the casing for the current working directory matches the actual case of the real directory. Use a terminal that enforces case-sensitivity.\n\n## Useful Links\n\n- [Next.js CLI documentation](/docs/pages/api-reference/next-cli)\n- [Case sensitivity in filesystems](https://en.wikipedia.org/wiki/Case_sensitivity#In_filesystems)\n"},{"path":"errors/no-script-component-in-head.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-script-component-in-head.mdx","prodUrl":"https://nextjs.org/docs/messages/no-script-component-in-head","sha":"5d0709fa81ebf2aad062e9400eca03c9c33bbb67","size":972,"content":"---\ntitle: No Script Component in Head\n---\n\n> Prevent usage of `next/script` in `next/head` component.\n\n## Why This Error Occurred\n\nThe `next/script` component should not be used in a `next/head` component.\n\n## Possible Ways to Fix It\n\nMove the `<Script />` component outside of `<Head>` instead.\n\n**Before**\n\n```jsx filename=\"pages/index.js\"\nimport Script from 'next/script'\nimport Head from 'next/head'\n\nexport default function Index() {\n  return (\n    <Head>\n      <title>Next.js</title>\n      <Script src=\"/my-script.js\" />\n    </Head>\n  )\n}\n```\n\n**After**\n\n```jsx filename=\"pages/index.js\"\nimport Script from 'next/script'\nimport Head from 'next/head'\n\nexport default function Index() {\n  return (\n    <>\n      <Head>\n        <title>Next.js</title>\n      </Head>\n      <Script src=\"/my-script.js\" />\n    </>\n  )\n}\n```\n\n## Useful Links\n\n- [next/head](/docs/pages/api-reference/components/head)\n- [next/script](/docs/pages/building-your-application/optimizing/scripts)\n"},{"path":"errors/gsp-redirect-during-prerender.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/gsp-redirect-during-prerender.mdx","prodUrl":"https://nextjs.org/docs/messages/gsp-redirect-during-prerender","sha":"2b54b97250218373a93a5cac2b7021779d7b8816","size":484,"content":"---\ntitle: Redirect During getStaticProps Prerendering\n---\n\n## Why This Error Occurred\n\nThe `redirect` value was returned from `getStaticProps` during prerendering which is invalid.\n\n## Possible Ways to Fix It\n\nRemove any paths that result in a redirect from being prerendered in `getStaticPaths` and enable `fallback: true` to handle redirecting for these pages.\n\n## Useful Links\n\n- [Data Fetching Documentation](/docs/pages/building-your-application/data-fetching/get-static-props)\n"},{"path":"errors/import-next.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/import-next.mdx","prodUrl":"https://nextjs.org/docs/messages/import-next","sha":"8c864f39855b75709f723a31f408bd67f5134ada","size":667,"content":"---\ntitle: 'Invalid `next` Import'\n---\n\n## Why This Error Occurred\n\nSomewhere in your application, you imported `next` directly which is only meant to be used with legacy custom servers.\n\nYou should not import `next` inside of pages or components.\n\n## Possible Ways to Fix It\n\nEnsure any usage of `import next from \"next\"` is specific to custom server usage and isn't included in your pages or components.\n\nAlso ensure any type imports are kept inside of TypeScript files e.g. ensure `import { PageConfig } from 'next'` isn't used in JavaScript files.\n\n## Useful Links\n\n- [Custom Server Documentation](/docs/pages/building-your-application/configuring/custom-server)\n"},{"path":"errors/no-unwanted-polyfillio.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-unwanted-polyfillio.mdx","prodUrl":"https://nextjs.org/docs/messages/no-unwanted-polyfillio","sha":"a373b5739e6a3d8845a47a98678d592f0354f452","size":624,"content":"---\ntitle: No Unwanted Polyfill.io\n---\n\n> Prevent duplicate polyfills from Polyfill.io.\n\n## Why This Error Occurred\n\nYou are using polyfills from Polyfill.io and including polyfills already shipped with Next.js. This unnecessarily increases page weight which can affect loading performance.\n\n## Possible Ways to Fix It\n\nRemove all duplicate polyfills. If you need to add polyfills but are not sure if Next.js already includes it, take a look at the list of [supported browsers and features](/docs/architecture/supported-browsers).\n\n## Useful Links\n\n- [Supported Browsers and Features](/docs/architecture/supported-browsers)\n"},{"path":"errors/threw-undefined.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/threw-undefined.mdx","prodUrl":"https://nextjs.org/docs/messages/threw-undefined","sha":"bb0ac1a2f4069406bfc2924e18e7ebd6b4fabc0b","size":577,"content":"---\ntitle: 'Threw `undefined` / `null`'\n---\n\n## Why This Error Occurred\n\nSomewhere in your code you `throw` an `undefined` or `null` value. Since this isn't a valid error there isn't a stack trace. We show this error instead to let you know what to look for.\n\n```js filename=\"pages/index.js\"\nfunction getData() {\n  let error\n  throw error\n}\n\nfunction Page() {\n  const error = data?.error || null\n  throw error\n}\n```\n\n## Possible Ways to Fix It\n\nLook in your pages and find where an error could be throwing `undefined` or `null` values and ensure `new Error()` is used instead.\n"},{"path":"errors/no-assign-module-variable.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-assign-module-variable.mdx","prodUrl":"https://nextjs.org/docs/messages/no-assign-module-variable","sha":"a90c9255bcd01c121800600d7d3b9903f545037c","size":397,"content":"---\ntitle: No assign module variable\n---\n\n> Prevent assignment to the `module` variable.\n\n## Why This Error Occurred\n\nA value is being assigned to the `module` variable. The `module` variable is already used and it is highly likely that assigning to this variable will cause errors.\n\n## Possible Ways to Fix It\n\nUse a different variable name:\n\n```js filename=\"example.js\"\nlet myModule = {...}\n```\n"},{"path":"errors/invalid-dynamic-options-type.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-dynamic-options-type.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-dynamic-options-type","sha":"f6fe20caaafe01788414015f1052fbda9e0e806f","size":736,"content":"---\ntitle: 'Invalid options type in a `next/dynamic` call'\n---\n\n## Why This Error Occurred\n\nYou have an invalid options type in a `next/dynamic` call. The options must be an object literal.\n\n## Possible Ways to Fix It\n\n**Before**\n\n```jsx filename=\"example.js\"\nimport dynamic from 'next/dynamic'\n\nconst options = { loading: () => <p>...</p>, ssr: false }\nconst DynamicComponent = dynamic(() => import('../components/hello'), options)\n```\n\n**After**\n\n```jsx filename=\"example.js\"\nimport dynamic from 'next/dynamic'\n\nconst DynamicComponent = dynamic(() => import('../components/hello'), {\n  loading: () => <p>...</p>,\n  ssr: false,\n})\n```\n\n## Useful Links\n\n- [Dynamic Import](/docs/pages/building-your-application/optimizing/lazy-loading)\n"},{"path":"errors/placeholder-blur-data-url.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/placeholder-blur-data-url.mdx","prodUrl":"https://nextjs.org/docs/messages/placeholder-blur-data-url","sha":"3737dfae7026987d112169604bb08da287b208e8","size":993,"content":"---\ntitle: '`placeholder=blur` without `blurDataURL`'\n---\n\n## Why This Error Occurred\n\nYou are attempting use the `next/image` component with `placeholder=blur` property but no `blurDataURL` property.\n\nThe `blurDataURL` might be missing because you're using a string for `src` instead of a static import.\n\nOr `blurDataURL` might be missing because the static import is an unsupported image format. Only jpg, png, webp, and avif are supported at this time, though animated images are not supported.\n\n## Possible Ways to Fix It\n\n- Add a [`blurDataURL`](/docs/pages/api-reference/components/image#blurdataurl) property, the contents should be a small Data URL to represent the image\n- Change the [`src`](/docs/pages/api-reference/components/image#src) property to a static import with one of the supported file types: jpg, png, webp, or avif (animated images not supported)\n- Remove the [`placeholder`](/docs/pages/api-reference/components/image#placeholder) property, effectively no blur effect\n"},{"path":"errors/invalid-getserversideprops-value.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-getserversideprops-value.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-getserversideprops-value","sha":"8240445809b68ae8bcdd223a842f3985198cbf8d","size":533,"content":"---\ntitle: 'Invalid `getServerSideProps` Return Value'\n---\n\n## Why This Error Occurred\n\nIn one of the page's `getServerSideProps` the return value had the incorrect shape.\n\n## Possible Ways to Fix It\n\nMake sure to return the following shape from `getServerSideProps`:\n\n```ts filename=\"pages/example.js\"\nexport async function getServerSideProps(ctx: GetServerSidePropsContext) {\n  return {\n    props: { [key: string]: any }\n  }\n}\n```\n\n## Useful Links\n\n- [getServerSideProps](/docs/pages/api-reference/functions/get-server-side-props)\n"},{"path":"errors/middleware-parse-user-agent.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/middleware-parse-user-agent.mdx","prodUrl":"https://nextjs.org/docs/messages/middleware-parse-user-agent","sha":"569903bc236b2c209bf6ae76c6667d5c251477cd","size":1032,"content":"---\ntitle: Removed parsed User Agent from Middleware API\n---\n\n## Why This Error Occurred\n\nYour application is interacting with `req.ua` which has been deprecated.\n\n```ts filename=\"middleware.ts\"\nimport { NextRequest, NextResponse } from 'next/server'\n\nexport function middleware(request: NextRequest) {\n  const viewport = request.ua.device.type === 'mobile' ? 'mobile' : 'desktop'\n\n  request.nextUrl.searchParams.set('viewport', viewport)\n  return NextResponse.rewrites(request.nextUrl)\n}\n```\n\n## Possible Ways to Fix It\n\nThe internal logic has been moved into a separate `userAgent` function that you can import from `next/server` and wrap your request instead.\n\n```ts filename=\"middleware.ts\"\nimport { NextRequest, NextResponse, userAgent } from 'next/server'\n\nexport function middleware(request: NextRequest) {\n  const { device } = userAgent(request)\n  const viewport = device.type === 'mobile' ? 'mobile' : 'desktop'\n\n  request.nextUrl.searchParams.set('viewport', viewport)\n  return NextResponse.rewrite(request.nextUrl)\n}\n```\n"},{"path":"errors/no-head-import-in-document.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-head-import-in-document.mdx","prodUrl":"https://nextjs.org/docs/messages/no-head-import-in-document","sha":"0104e829b5a4d46f45affe85643da51170ca0841","size":941,"content":"---\ntitle: No Head Import in Document\n---\n\n> Prevent usage of `next/head` in `pages/_document.js`.\n\n## Why This Error Occurred\n\n`next/head` was imported in `pages/_document.js`. This can cause unexpected issues in your application.\n\n## Possible Ways to Fix It\n\nOnly import and use `next/document` within `pages/_document.js` to override the default `Document` component. If you are importing `next/head` to use the `Head` component, import it from `next/document` instead in order to modify `<head>` code across all pages:\n\n```jsx filename=\"pages/_document.js\"\nimport Document, { Html, Head, Main, NextScript } from 'next/document'\n\nclass MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    //...\n  }\n\n  render() {\n    return (\n      <Html>\n        <Head></Head>\n      </Html>\n    )\n  }\n}\n\nexport default MyDocument\n```\n\n## Useful Links\n\n- [Custom Document](/docs/pages/building-your-application/routing/custom-document)\n"},{"path":"errors/invalid-href-passed.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-href-passed.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-href-passed","sha":"240d1578316b0cc1fa5ffa93ef668bbe8b6ea52e","size":1066,"content":"---\ntitle: 'Invalid `href` passed to router'\n---\n\n## Why This Error Occurred\n\nNext.js provides a router which can be utilized via a component imported via `next/link`, a wrapper `withRouter(Component)`, and now a hook `useRouter()`.\nWhen using any of these, it is expected they are only used for internal navigation, i.e. navigating between pages in the same Next.js application.\n\nEither you passed a non-internal `href` to a `next/link` component or you called `Router#push` or `Router#replace` with one.\n\nInvalid `href`s include external sites (https://google.com) and `mailto:` links. In the past, usage of these invalid `href`s could have gone unnoticed, but since they can cause unexpected behavior we now show a warning in development for them.\n\n## Possible Ways to Fix It\n\nLook for any usage of `next/link` or `next/router` that is being passed a non-internal `href` and replace them with either an anchor tag (`<a>`) or `window.location.href = YOUR_HREF`.\n\n## Useful Links\n\n- [Routing section in Documentation](/docs/pages/building-your-application/routing)\n"},{"path":"errors/link-multiple-children.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/link-multiple-children.mdx","prodUrl":"https://nextjs.org/docs/messages/link-multiple-children","sha":"20a93edcc1eb1770856be2ac4ede61c76a3cd5d5","size":909,"content":"---\ntitle: 'Multiple children were passed to `<Link>`'\n---\n\n## Why This Error Occurred\n\nIn your application code multiple children were passed to `next/link` but only one child is supported:\n\nFor example:\n\n```js filename=\"example.js\"\nimport Link from 'next/link'\n\nexport default function Home() {\n  return (\n    <Link href=\"/about\">\n      <a>To About</a>\n      <a>Second To About</a>\n    </Link>\n  )\n}\n```\n\n## Possible Ways to Fix It\n\nMake sure only one child is used when using `<Link>`:\n\n```js filename=\"example.js\"\nimport Link from 'next/link'\n\nexport default function Home() {\n  return (\n    <Link href=\"/about\">\n      <a>To About</a>\n    </Link>\n  )\n}\n```\n\n> **Good to know:**\n>\n> - As on Next.js 13.0, `<Link>` no longer requires a child `<a>` tag. A [codemod](/docs/app/building-your-application/upgrading/codemods#remove-a-tags-from-link-components) is provided to automatically update your codebase.\n"},{"path":"errors/env-key-not-allowed.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/env-key-not-allowed.mdx","prodUrl":"https://nextjs.org/docs/messages/env-key-not-allowed","sha":"0a5e4348fdaeed34bf251c482d1edc8d56e224a5","size":487,"content":"---\ntitle: 'The key \"<your key>\" under \"env\" in `next.config.js` is not allowed.'\n---\n\n## Why This Error Occurred\n\nNext.js configures internal variables for replacement itself. `NEXT_RUNTIME` along with variables starting with `__` or `NODE_` are currently internal, for this reason they are not allowed as values for `env` in `next.config.js`\n\n## Possible Ways to Fix It\n\nRename the specified key so that it does not start with `__` or `NODE_`, or pick another name for `NEXT_RUNTIME`.\n"},{"path":"errors/page-without-valid-component.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/page-without-valid-component.mdx","prodUrl":"https://nextjs.org/docs/messages/page-without-valid-component","sha":"85932420d0fce0602be030d83e447c3346cdb6b3","size":1081,"content":"---\ntitle: Page Without Valid React Component\n---\n\n## Why This Error Occurred\n\nA page that does not export a valid React Component was found while analyzing the build output.\n\nThis is a hard error because the page would error when rendered, and causes poor build performance.\n\n## Possible Ways to Fix It\n\nInvestigate the list of page(s) specified in the error message.\nFor each, you'll want to check if the file is meant to be a page.\n\nIf the file is not meant to be a page, and instead, is a shared component or file, move the file to a different folder like `components` or `lib`.\n\nIf the file is meant to be a page, double check you have an `export default` with the React Component instead of an `export`. If you're already using `export default`, make sure the returned value is a valid React Component.\n\nIf you need to support a different file extension for a page component (such as `.mdx`) or would like to include non-page files in the `pages` directory, configure [Custom Page Extensions](/docs/pages/api-reference/next-config-js/pageExtensions) in the `next.config.js`.\n"},{"path":"errors/nonce-contained-invalid-characters.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/nonce-contained-invalid-characters.mdx","prodUrl":"https://nextjs.org/docs/messages/nonce-contained-invalid-characters","sha":"298dd00e3e038054df9331c7da0057960e7afa4e","size":800,"content":"---\ntitle: nonce contained invalid characters\n---\n\n## Why This Error Occurred\n\nA request to your Next.js application contained a `Content-Security-Policy`\nheader with a `script-src` directive and `nonce` that contains\ninvalid characters (any one of `<>&` characters). For example:\n\n- `'nonce-<script />'`: not allowed\n- `'nonce-/>script<>'`: not allowed\n- `'nonce-PHNjcmlwdCAvPg=='`: allowed\n- `'nonce-Lz5zY3JpcHQ8Pg=='`: allowed\n\n## Possible Ways to Fix It\n\nWe recommend using a randomly generated UUID for your nonce.\n\nLearn more about how to use nonces with Next.js in our [Content Security Policy](/docs/app/building-your-application/configuring/content-security-policy) docs.\n\n## Useful Links\n\n- [Content Security Policy](/docs/app/building-your-application/configuring/content-security-policy)\n"},{"path":"errors/invalid-new-link-with-extra-anchor.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-new-link-with-extra-anchor.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor","sha":"edf06564f3d5175af0808ebc939de2fa5ec56cc1","size":653,"content":"---\ntitle: 'Invalid `<Link>` with `<a>` child'\n---\n\n## Why This Error Occurred\n\nStarting with Next.js 13, `<Link>` renders as `<a>`, so attempting to use `<a>` as a child is invalid.\n\n## Possible Ways to Fix It\n\nRun the `new-link` codemod to automatically upgrade previous versions of Next.js to the new `<Link>` usage:\n\n```bash filename=\"Terminal\"\nnpx @next/codemod new-link .\n```\n\nThis will change `<Link><a id=\"link\">Home</a></Link>` to `<Link id=\"link\">Home</Link>`.\n\nAlternatively, you can add the `legacyBehavior` prop `<Link legacyBehavior><a id=\"link\">Home</a></Link>`.\n\n## Useful Links\n\n- [next/link](/docs/pages/api-reference/components/link)\n"},{"path":"errors/reserved-page-prop.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/reserved-page-prop.mdx","prodUrl":"https://nextjs.org/docs/messages/reserved-page-prop","sha":"52420ba7a6fdbba8293c5ee110ef72bab02c5808","size":298,"content":"---\ntitle: Reserved Page Prop\n---\n\n## Why This Error Occurred\n\nIn a page's `getInitialProps` a reserved prop was returned. Currently the only reserved page prop is `url` for legacy reasons.\n\n## Possible Ways to Fix It\n\nChange the name of the prop returned from `getInitialProps` to any other name.\n"},{"path":"errors/ssg-fallback-true-export.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/ssg-fallback-true-export.mdx","prodUrl":"https://nextjs.org/docs/messages/ssg-fallback-true-export","sha":"5d98fc8b9559b16fd3470c3561642c1022411be2","size":769,"content":"---\ntitle: 'SSG `fallback: true` Export Error'\n---\n\n## Why This Error Occurred\n\nYou attempted to export a page with a `fallback: true` return value from `getStaticPaths` which is invalid. `fallback: true` is meant for building pages on-demand after a build has occurred, exporting disables this functionality\n\n## Possible Ways to Fix It\n\nIf you would like the `fallback: true` behavior, you must remove `output: 'export'` and remove `next export` in favor of a different [deployment solution](/docs/pages/building-your-application/deploying).\n\n## Useful Links\n\n- [deployment documentation](/docs/pages/building-your-application/deploying#managed-nextjs-with-vercel)\n- [`fallback: true` documentation](/docs/pages/api-reference/functions/get-static-paths#fallback-true)\n"},{"path":"errors/invalid-multi-match.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-multi-match.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-multi-match","sha":"528a7765c3987fc5ade46bded8ad522ceb9f8257","size":506,"content":"---\ntitle: Invalid Multi-match\n---\n\n## Why This Error Occurred\n\nIn one of your custom-routes you specified a multi-match `/:path*` and used it in your `destination` without adding the `*` in your `destination` e.g. `destination: '/another/:path'`\n\n## Possible Ways to Fix It\n\nAdd `*` to your usage of the multi-match param in your `destination`.\n\n**Before**\n\n```js\n{\n  source: '/:path*',\n  destination: '/another/:path'\n}\n```\n\n**After**\n\n```js\n{\n  source: '/:path*',\n  destination: '/another/:path*'\n}\n```\n"},{"path":"errors/popstate-state-empty.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/popstate-state-empty.mdx","prodUrl":"https://nextjs.org/docs/messages/popstate-state-empty","sha":"ac1428208e265194348170df65c97dc35c00ffaa","size":643,"content":"---\ntitle: '`popstate` called with empty state'\n---\n\n## Why This Error Occurred\n\nWhen using the browser back button the popstate event is triggered. Next.js sees a\n`popstate` event being triggered but `event.state` did not have `url` or `as`, causing a route change failure.\n\n## Possible Ways to Fix It\n\nThe only known cause of this issue is manually manipulating `window.history` instead of using `next/router`. Starting from version 9.5, Next.js will ignore `popstate` events that contain `event.state` not created by its own router.\n\n## Useful Links\n\n- [The issue this was reported in: #4994](https://github.com/vercel/next.js/issues/4994)\n"},{"path":"errors/invalid-getstaticpaths-value.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-getstaticpaths-value.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-getstaticpaths-value","sha":"6bf4c3ece3847244f3c0b0cdf677ba3c5429dd3b","size":2373,"content":"---\ntitle: 'Invalid `getStaticPaths` Return Value'\n---\n\n## Why This Error Occurred\n\nIn one of the page's `getStaticPaths` the return value had the incorrect shape.\n\n## Possible Ways to Fix It\n\nMake sure to return the following shape from `getStaticPaths`:\n\n```js filename=\"pages/blog/[slug].js\"\nexport async function getStaticPaths() {\n  return {\n    paths: Array<string | { params: { [key: string]: string } }>,\n    fallback: boolean\n  }\n}\n```\n\nThere are two required properties:\n\n### `paths`\n\nThis property is an [Array](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array) of URLs (\"paths\") that should be statically generated at build-time. The returned paths must match the dynamic route shape.\n\n- You may return a [String](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String) or an [Object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object) that explicitly defines all URL `params`.\n\n  ```js filename=\"pages/blog/[slug].js\"\n  export async function getStaticPaths() {\n    return {\n      paths: [\n        // String variant:\n        '/blog/first-post',\n        // Object variant:\n        { params: { slug: 'second-post' } },\n      ],\n      fallback: true,\n    }\n  }\n  ```\n\n### `fallback`\n\nThis property can be a [Boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean), specifying whether or not a fallback version of this page should be generated, or a string `'blocking'` to wait for the generation:\n\n- Enabling `fallback` (via `true`) allows you to return a subset of all the possible paths that should be statically generated. At runtime, Next.js will statically generate the remaining paths the **first time they are requested**. Consecutive calls to the path will be served as-if it was statically generated at build-time. This reduces build times when dealing with thousands or millions of pages.\n- Disabling `fallback` (via `false`) requires you return the full collection of paths you would like to statically generate at build-time. At runtime, any path that was not generated at build-time **will 404**.\n- If `fallback` is `'blocking'`, new paths not returned by getStaticPaths will wait for the HTML to be generated, identical to SSR (hence why blocking), and then be cached for future requests so it only happens once per path.\n"},{"path":"errors/nested-reserved-page.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/nested-reserved-page.mdx","prodUrl":"https://nextjs.org/docs/messages/nested-reserved-page","sha":"3f3acd23822785bd0bad68f12ba7b87333c7ff7f","size":683,"content":"---\ntitle: Nested Reserved Page\n---\n\n## Why This Error Occurred\n\nIn your pages folder you nested a reserved page e.g. `_app`, `_error`, or `_document` which causes the page to not be used since they must be located directly under the pages folder.\n\n## Possible Ways to Fix It\n\nMove the reserved pages directly under your pages folder so that they are picked up and used correctly.\n\n## Useful Links\n\n- [Custom `_app` Documentation](/docs/pages/building-your-application/routing/custom-app)\n- [Custom `_error` Documentation](/docs/pages/building-your-application/routing/custom-error)\n- [Custom `_document` Documentation](/docs/pages/building-your-application/routing/custom-document)\n"},{"path":"errors/version-staleness.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/version-staleness.mdx","prodUrl":"https://nextjs.org/docs/messages/version-staleness","sha":"2acd425cc5beaaa8f7be2f905aded52eb460ec11","size":1836,"content":"---\ntitle: Version Staleness\n---\n\n## Why This Error Occurred\n\nIn the error overlay, a message was shown that the detected Next.js version was out-of-date.\n\nTo get the newest features and bug fixes, it is recommended to stay up to date.\n\n## Possible Ways to Fix It\n\nIf you are testing out a canary release, upgrade Next.js with one of the following:\n\n```bash filename=\"Terminal\"\nnpm i next@canary\n```\n\n```bash filename=\"Terminal\"\nyarn add next@canary\n```\n\n```bash filename=\"Terminal\"\npnpm add next@canary\n```\n\n```bash filename=\"Terminal\"\nbun add next@canary\n```\n\nIf you are using a stable release, upgrade Next.js with one of the following:\n\n```bash filename=\"Terminal\"\nnpm i next@latest\n```\n\n```bash filename=\"Terminal\"\nyarn add next@latest\n```\n\n```bash filename=\"Terminal\"\npnpm add next@latest\n```\n\n```bash filename=\"Terminal\"\nbun add next@latest\n```\n\nIf you are coming from an older major version, check out our [upgrade guides](/docs/pages/building-your-application/upgrading).\n\n### Note\n\nIf you want to report a bug on GitHub, you should upgrade to the newest canary release of Next.js first, to see if the bug has already been fixed in canary.\n\n## Useful Links\n\n- [Upgrade guide](/docs/pages/building-your-application/upgrading)\n- [Video: How to Contribute to Open Source (Next.js)](https://www.youtube.com/watch?v=cuoNzXFLitc)\n- [Contributing to Next.js](https://github.com/vercel/next.js/blob/canary/contributing.md)\n- [Triaging issues](https://github.com/vercel/next.js/blob/canary/contributing/repository/triaging.md)\n- [Verifying canary](https://github.com/vercel/next.js/blob/canary/.github/verify-canary.md)\n- [Adding a reproduction](https://github.com/vercel/next.js/blob/canary/.github/invalid-reproduction.md)\n- [Simplifying a reproduction](https://github.com/vercel/next.js/blob/canary/.github/simplify-reproduction.md)\n"},{"path":"errors/gssp-component-member.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/gssp-component-member.mdx","prodUrl":"https://nextjs.org/docs/messages/gssp-component-member","sha":"e4d1279112c262a0550315bf5649ad1753ba8c4a","size":958,"content":"---\ntitle: '`getStaticProps` / `getServerSideProps` can not be attached to the page component'\n---\n\n## Why This Error Occurred\n\nOn one of your page's components you attached either `getStaticProps`, `getStaticPaths`, or `getServerSideProps` as a member instead of as a separate export.\n\nThese methods can not be attached in the same way as `getInitialProps` and must be their own export\n\n## Possible Ways to Fix It\n\nMove the method to it's own export from your page.\n\n**Before**\n\n```jsx filename=\"pages/index.js\"\nfunction Page(props) {\n  return <p>hello world</p>\n}\n\nPage.getStaticProps = () => ({\n  props: {\n    hello: 'world',\n  },\n})\n\nexport default Page\n```\n\n**After**\n\n```jsx filename=\"pages/index.js\"\nfunction Page(props) {\n  return <p>hello world</p>\n}\n\nexport default Page\n\nexport const getStaticProps = () => ({\n  props: {\n    hello: 'world',\n  },\n})\n```\n\n## Useful Links\n\n- [Data Fetching Docs](/docs/pages/building-your-application/data-fetching)\n"},{"path":"errors/no-async-client-component.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-async-client-component.mdx","prodUrl":"https://nextjs.org/docs/messages/no-async-client-component","sha":"399f375392e0ad8facfa41b3614ace3f5bdfe9c5","size":645,"content":"---\ntitle: No async client component\n---\n\n> Client components cannot be async functions.\n\n## Why This Error Occurred\n\nAs per the [React Server Component RFC on promise support](https://github.com/acdlite/rfcs/blob/first-class-promises/text/0000-first-class-support-for-promises.md), [client components cannot be async functions](https://github.com/acdlite/rfcs/blob/first-class-promises/text/0000-first-class-support-for-promises.md#why-cant-client-components-be-async-functions).\n\n## Possible Ways to Fix It\n\n1. Remove the `async` keyword from the client component function declaration, or\n2. Convert the client component to a server component\n"},{"path":"errors/invalid-use-server-value.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-use-server-value.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-use-server-value","sha":"a3a0a9786da32959797f629496f9be39c49580a3","size":1422,"content":"---\ntitle: 'Invalid \"use server\" Value'\n---\n\n## Why This Error Occurred\n\nThis error occurs when a `\"use server\"` file exports a value that is not an async function. It might happen when you unintentionally export something like a configuration object, an arbitrary value, or missed the `async` keyword in the exported function declaration.\n\nThese functions are required to be defined as async, because `\"use server\"` marks them as [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations) and they can be invoked directly from the client through a network request.\n\nExamples of incorrect code:\n\n```js\n'use server'\n\n// ❌ This is incorrect: only async functions are allowed.\nexport const value = 1\n\n// ❌ This is incorrect: missed the `async` keyword.\nexport function getServerData() {\n  return '...'\n}\n```\n\nCorrect code:\n\n```js\n'use server'\n\n// ✅ This is correct: an async function is exported.\nexport async function getServerData() {\n  return '...'\n}\n```\n\n## Possible Ways to Fix It\n\nCheck all exported values in the `\"use server\"` file (including `export *`) and make sure that they are all defined as async functions.\n\n## Useful Links\n\n- [Server Actions and Mutations - Next.js](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations)\n- ['use server' directive - React](https://react.dev/reference/react/use-server)\n"},{"path":"errors/static-page-generation-timeout.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/static-page-generation-timeout.mdx","prodUrl":"https://nextjs.org/docs/messages/static-page-generation-timeout","sha":"00fc666a45dde28419f16846d771f17758fa74ae","size":924,"content":"---\ntitle: Static page generation timed out after multiple attempts\n---\n\n## Why This Error Occurred\n\nNext.js tries to restart the worker pool of the static page generation when no progress happens for a while, to avoid hanging builds.\n\nWhen restarted it will retry all uncompleted jobs, but if a job was unsuccessfully attempted multiple times, this will lead to an error.\n\n## Possible Ways to Fix It\n\n- Make sure that there is no infinite loop during execution.\n- Make sure all Promises in `getStaticPaths`/`getStaticProps` `resolve` or `reject` correctly.\n- Avoid very long timeouts for network requests.\n- Increase the timeout by changing the `staticPageGenerationTimeout` configuration option (default `60` in seconds).\n\n## Useful Links\n\n- [`getStaticPaths`](/docs/pages/building-your-application/data-fetching/get-static-paths)\n- [`getStaticProps`](/docs/pages/building-your-application/data-fetching/get-static-props)\n"},{"path":"errors/invalid-relative-url-external-as.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-relative-url-external-as.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-relative-url-external-as","sha":"eaecd6f3f6f2a2ce18df18f7780d8dc72a72f06d","size":1260,"content":"---\ntitle: 'Invalid relative `href` and external `as` values'\n---\n\n## Why This Error Occurred\n\nSomewhere you are utilizing the `next/link` component, `Router#push`, or `Router#replace` with a relative route in your `href` that has an external `as` value. The `as` value must be relative also or only `href` should be used with an external URL.\n\nNote: this error will only show when the `next/link` component is clicked not when only rendered.\n\n**Incompatible `href` and `as`**\n\n```jsx filename=\"pages/example.js\"\nimport Link from 'next/link'\n\nexport default function Page(props) {\n  return (\n    <>\n      <Link href=\"/invalid\" as=\"mailto:john@example.com\">\n        <a>Invalid link</a>\n      </Link>\n    </>\n  )\n}\n```\n\n**Compatible `href` and `as`**\n\n```jsx filename=\"pages/example.js\"\nimport Link from 'next/link'\n\nexport default function Page(props) {\n  return (\n    <>\n      <Link href=\"mailto:john@example.com\">\n        <a>Invalid link</a>\n      </Link>\n    </>\n  )\n}\n```\n\n## Possible Ways to Fix It\n\nLook for any usage of the `next/link` component, `Router#push`, or `Router#replace` and make sure that the provided `href` and `as` values are compatible\n\n## Useful Links\n\n- [Routing section in Documentation](/docs/pages/building-your-application/routing)\n"},{"path":"errors/swc-minify-enabled.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/swc-minify-enabled.mdx","prodUrl":"https://nextjs.org/docs/messages/swc-minify-enabled","sha":"f2f1bbec2b0041ae31bc0b25d2f4f18011e5ab5c","size":521,"content":"---\ntitle: SWC minify enabled\n---\n\n#### Why This Message Occurred\n\nThe application has enabled `swcMinify` in `next.config.js`. By opting in minification will happen using the [SWC](https://swc.rs) minifier instead of Terser. This new minifier is 7x faster than Terser with comparable output. We're actively working on optimizing the output size and minification speed further.\n\nIf you have feedback about the minification, please provide it on [the feedback thread](https://github.com/vercel/next.js/discussions/30237).\n"},{"path":"errors/export-no-i18n.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/export-no-i18n.mdx","prodUrl":"https://nextjs.org/docs/messages/export-no-i18n","sha":"bd79044f9c08d421326d969f159bfe10e5b21b62","size":732,"content":"---\ntitle: Export Internationalization (i18n)\n---\n\n## Why This Error Occurred\n\nIn your `next.config.js` you defined `i18n`, along with `output: 'export'` (or you ran `next export`).\n\n## Possible Ways to Fix It\n\n- Remove `i18n` from your `next.config.js` to disable Internationalization or\n- Remove `output: 'export'` (or `next export`) in favor of [`next start`](/docs/pages/api-reference/next-cli#production) to run a production server\n\n## Useful Links\n\n- [Deployment Documentation](/docs/pages/building-your-application/deploying)\n- [`output: 'export'` Documentation](/docs/pages/building-your-application/deploying/static-exports)\n- [Internationalized Routing](/docs/pages/building-your-application/routing/internationalization)\n"},{"path":"errors/no-document-viewport-meta.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-document-viewport-meta.mdx","prodUrl":"https://nextjs.org/docs/messages/no-document-viewport-meta","sha":"cb511c9c39fb12992d721d3886862ee6a476c7dd","size":804,"content":"---\ntitle: 'Viewport `meta` tags should not be used in `_document.js` `<Head>`'\n---\n\n## Why This Error Occurred\n\nAdding `<meta name=\"viewport\" ...>` in `pages/_document.js` will lead to unexpected results since it cannot be deduped.\nThe viewport tag should be handled by `next/head` in `pages/_app.js`.\n\n## Possible Ways to Fix It\n\nSet your viewport `meta` tag in `pages/_app.js` instead:\n\n```tsx filename=\"pages/_app.js\"\nimport Head from 'next/head'\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <>\n      <Head>\n        <meta name=\"viewport\" content=\"viewport-fit=cover\" />\n      </Head>\n      <Component {...pageProps} />\n    </>\n  )\n}\n\nexport default MyApp\n```\n\n## Useful Links\n\n- [Issue #13230](https://github.com/vercel/next.js/issues/13230), which led to the creation of this warning.\n"},{"path":"errors/deprecated-analyticsid.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/deprecated-analyticsid.mdx","prodUrl":"https://nextjs.org/docs/messages/deprecated-analyticsid","sha":"728de3b5792d12652f0695dc6b3378ba64ebf3bc","size":893,"content":"---\ntitle: config.analytics is deprecated\n---\n\n## Why This Error Occurred\n\nThe Core Web Vitals of your Next.js application could be tracked and sent to any backend of your choice.\n\nEarlier version of Next.js enable tracking by specifying `analyticsId` into your `next.config.js` file.\n\nThis configuration mechanism will be removed in nextjs@15, as it could be elegantly replaced with `useReportWebVitals` built-in hook.\n\n## Possible Ways to Fix It\n\nTo remove this warning, you must remove `analyticsId` from your `next.config.js` file.\n\nTo keep tracking your Core Web Vitals, you could:\n\n- use `useReportWebVitals` hook as explained [here](https://nextjs.org/docs/app/api-reference/functions/use-report-web-vitals) and send the metrics to any backend of your choice.\n- [install and use](https://vercel.com/docs/speed-insights/quickstart) `@vercel/speed-insights` package into your application\n"},{"path":"errors/invalid-dynamic-suspense.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-dynamic-suspense.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-dynamic-suspense","sha":"0785dc7356245c953e2c5fd2d1646da512593e10","size":1421,"content":"---\ntitle: 'Invalid Usage of `suspense` Option of `next/dynamic`'\n---\n\n## Why This Error Occurred\n\n- You are using `{ suspense: true }` with React version older than 18.\n- You are using `{ suspense: true, ssr: false }`.\n- You are using `{ suspense: true, loading }`.\n\n## Possible Ways to Fix It\n\n**If you are using `{ suspense: true }` with React version older than 18**\n\n- You can try upgrading to React 18 or newer\n- If upgrading React is not an option, remove `{ suspense: true }` from `next/dynamic` usages.\n\n**If you are using `{ suspense: true, ssr: false }`**\n\nNext.js will use `React.lazy` when `suspense` is set to true. React 18 or newer will always try to resolve the Suspense boundary on the server. This behavior can not be disabled, thus the `ssr: false` is ignored with `suspense: true`.\n\n- You should write code that works in both client-side and server-side.\n- If rewriting the code is not an option, remove `{ suspense: true }` from `next/dynamic` usages.\n\n**If you are using `{ suspense: true, loading }`**\n\nNext.js will use `React.lazy` when `suspense` is set to true, when your dynamic-imported component is loading, React will use the closest suspense boundary's fallback.\n\nYou should remove `loading` from `next/dynamic` usages, and use `<Suspense />`'s `fallback` prop.\n\n## Useful Links\n\n- [Dynamic Import Suspense Usage](/docs/pages/building-your-application/optimizing/lazy-loading#nextdynamic)\n"},{"path":"errors/conflicting-ssg-paths.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/conflicting-ssg-paths.mdx","prodUrl":"https://nextjs.org/docs/messages/conflicting-ssg-paths","sha":"f6a1b7ff58dcd0783ab7858d53afd999649ae2ba","size":1570,"content":"---\ntitle: Conflicting SSG Paths\n---\n\n## Why This Error Occurred\n\nYou returned **conflicting paths** in your `getStaticPaths` function for one of your pages. All page paths must be unique and duplicates are not allowed.\n\n## Possible Ways to Fix It\n\nRemove any conflicting paths shown in the error message and only return them from one `getStaticPaths`.\n\nExample conflicting paths:\n\n```jsx filename=\"pages/hello/world.js\"\nexport default function Hello() {\n  return 'hello world!'\n}\n```\n\n```jsx filename=\"pages/[...catchAll].js\"\nexport const getStaticProps = () => ({ props: {} })\n\nexport const getStaticPaths = () => ({\n  paths: [\n    '/hello/world', // <-- this conflicts with the /hello/world.js page, remove to resolve error\n    '/another',\n  ],\n  fallback: false,\n})\n\nexport default function CatchAllPage() {\n  return 'Catch-all page'\n}\n```\n\nExample conflicting paths:\n\n```jsx filename=\"pages/blog/[slug].js\"\nexport const getStaticPaths = () => ({\n  paths: ['/blog/conflicting', '/blog/another'],\n  fallback: false,\n})\n\nexport default function Blog() {\n  return 'Blog!'\n}\n```\n\n```jsx filename=\"pages/[...catchAll].js\"\nexport const getStaticProps = () => ({ props: {} })\n\nexport const getStaticPaths = () => ({\n  paths: [\n    // this conflicts with the /blog/conflicting path above, remove to resolve error\n    '/blog/conflicting',\n    '/another',\n  ],\n  fallback: false,\n})\n\nexport default function CatchAll() {\n  return 'Catch-all page'\n}\n```\n\n## Useful Links\n\n- [`getStaticPaths` Documentation](/docs/pages/building-your-application/data-fetching/get-static-paths)\n"},{"path":"errors/missing-suspense-with-csr-bailout.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/missing-suspense-with-csr-bailout.mdx","prodUrl":"https://nextjs.org/docs/messages/missing-suspense-with-csr-bailout","sha":"14bd7fdd70fbb2fcc3dd74581d993710c2f749a2","size":1936,"content":"---\ntitle: Missing Suspense boundary with useSearchParams\n---\n\n#### Why This Error Occurred\n\nReading search parameters through `useSearchParams()` without a Suspense boundary will opt the entire page into client-side rendering. This could cause your page to be blank until the client-side JavaScript has loaded.\n\n#### Possible Ways to Fix It\n\nEnsure that calls to `useSearchParams()` are wrapped in a Suspense boundary.\n\n```tsx filename=\"app/search.tsx\" switcher\n'use client'\n\nimport { useSearchParams } from 'next/navigation'\nimport { Suspense } from 'react'\n\nfunction Search() {\n  const searchParams = useSearchParams()\n\n  return <input placeholder=\"Search...\" />\n}\n\nexport function Searchbar() {\n  return (\n    // You could have a loading skeleton as the `fallback` too\n    <Suspense>\n      <Search />\n    </Suspense>\n  )\n}\n```\n\n```jsx filename=\"app/search.js\" switcher\n'use client'\n\nimport { useSearchParams } from 'next/navigation'\nimport { Suspense } from 'react'\n\nfunction Search() {\n  const searchParams = useSearchParams()\n\n  return <input placeholder=\"Search...\" />\n}\n\nexport function Searchbar() {\n  return (\n    // You could have a loading skeleton as the `fallback` too\n    <Suspense>\n      <Search />\n    </Suspense>\n  )\n}\n```\n\nThis will ensure the page does not de-opt to client-side rendering.\n\n#### Disabling\n\n> Note: This is only available with Next.js version 14.x. If you're in versions above 15 please fix it with the approach above.\n\nWe don't recommend disabling this rule. However, if you need to, you can disable it by setting the `missingSuspenseWithCSRBailout` option to `false` in your `next.config.js`:\n\n```js filename=\"next.config.js\"\nmodule.exports = {\n  experimental: {\n    missingSuspenseWithCSRBailout: false,\n  },\n}\n```\n\nThis configuration option will be removed in a future major version.\n\n### Useful Links\n\n- [`useSearchParams`](https://nextjs.org/docs/app/api-reference/functions/use-search-params)\n"},{"path":"errors/multi-tabs.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/multi-tabs.mdx","prodUrl":"https://nextjs.org/docs/messages/multi-tabs","sha":"bf66896d44a74a6bcf8d4b6ccc069b31853e82d8","size":788,"content":"---\ntitle: Multiple Tabs\n---\n\n## Why This Error Occurred\n\nIn development mode Next.js creates 2 persistent connections to the server to receive hot updates and to keep pages active. Each browser has their own limit for the number of concurrent connections to a specific server a site is allowed to have so if you open the same Next.js site in multiple tabs of the same browser you could exceed your browser's limit.\n\nMore info here: https://tools.ietf.org/html/rfc6202#section-5.1\n\n## Possible Ways to Fix It\n\n- Don't have too many tabs open to the same Next.js site open in development in the same browser at the same time.\n- If using Firefox you can increase this limit by navigating to `about:config` and setting `network.http.max-persistent-connections-per-server` to a higher number\n"},{"path":"errors/nested-styled-jsx-tags.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/nested-styled-jsx-tags.mdx","prodUrl":"https://nextjs.org/docs/messages/nested-styled-jsx-tags","sha":"ac03af9f524835cbd28e976fb7c9faeefb735264","size":951,"content":"---\ntitle: 'Nested `<style jsx>` tags'\n---\n\n## Why This Error Occurred\n\nYou have nested `<style jsx>` tags in a component. `<style jsx>` tags must be at the root of a `styled-jsx` scope.\n\n## Possible Ways to Fix It\n\n**Before**\n\n```jsx filename=\"example.js\"\nconst Component = () => (\n  <div>\n    <p>\n      Hello world\n      <style jsx>{`\n        p {\n          color: white;\n        }\n      `}</style>\n    </p>\n    <style global jsx>{`\n      body {\n        background: black;\n      }\n    `}</style>\n  </div>\n)\n```\n\n**After**\n\n```jsx filename=\"example.js\"\nconst Component = () => (\n  <div>\n    <p>Hello world</p>\n    <style jsx>{`\n      p {\n        color: white;\n      }\n    `}</style>\n    <style global jsx>{`\n      body {\n        background: black;\n      }\n    `}</style>\n  </div>\n)\n```\n\n## Useful Links\n\n- [Built-In CSS-in-JS](/docs/pages/building-your-application/styling/css-in-js)\n- [styled-jsx documentation](https://github.com/vercel/styled-jsx)\n"},{"path":"errors/undefined-webpack-config.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/undefined-webpack-config.mdx","prodUrl":"https://nextjs.org/docs/messages/undefined-webpack-config","sha":"a4c9487650ceb9eba6c530d0227888d88d4f7ad1","size":854,"content":"---\ntitle: Missing webpack config\n---\n\n## Why This Error Occurred\n\nThe value returned from the custom `webpack` function in your `next.config.js` was undefined. This can occur from the initial config value not being returned.\n\n## Possible Ways to Fix It\n\nMake sure to return the `webpack` config from your custom `webpack` function in your `next.config.js`\n\n```js filename=\"next.config.js\"\nmodule.exports = {\n  webpack: (config, { buildId, dev, isServer, defaultLoaders, webpack }) => {\n    // Note: we provide webpack above so you should not `require` it\n    // Perform customizations to webpack config\n    config.plugins.push(new webpack.IgnorePlugin(/\\/__tests__\\//))\n\n    // Important: return the modified config\n    return config\n  },\n}\n```\n\n## Useful Links\n\n- [Custom webpack config Documentation](/docs/pages/api-reference/next-config-js/webpack)\n"},{"path":"errors/export-all-in-page.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/export-all-in-page.mdx","prodUrl":"https://nextjs.org/docs/messages/export-all-in-page","sha":"618f2c03bb0e889ab39ddec1f1c9ec2cf93c4e66","size":1230,"content":"---\ntitle: Re-exporting all exports from a page is disallowed\n---\n\n## Why This Error Occurred\n\nThe following export can potentially break Next.js' compilation of pages:\n\n```jsx filename=\"pages/example.js\"\nexport * from '...'\n```\n\nThis is because Node.js code may be leaked to the browser build, causing an error. For example, the following two pages:\n\n```jsx filename=\"pages/example-a.js\"\nimport fs from 'fs'\n\nexport default function A() {\n  return <main />\n}\n\nexport function getStaticProps() {\n  fs\n  return { props: {} }\n}\n```\n\n```jsx filename=\"pages/example-b.js\"\nexport * from './example-a'\n```\n\nWould cause the following error:\n\n```txt\nModule not found: Can't resolve 'fs' in './pages/example-b.js'\n```\n\n## Possible Ways to Fix It\n\nUpdate your page to re-export the default component only:\n\n```jsx filename=\"pages/example-a.js\"\nexport { default } from './example-b'\n```\n\nIf the other page uses `getServerSideProps` or `getStaticProps`, you can re-export those individually too:\n\n```jsx filename=\"pages/example-a.js\"\nexport { default, getServerSideProps } from './example-b'\n// or\nexport { default, getStaticProps } from './example-b'\n// or\nexport { default, getStaticProps, getStaticPaths } from './example-b/[dynamic]'\n```\n"},{"path":"errors/non-dynamic-getstaticpaths-usage.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/non-dynamic-getstaticpaths-usage.mdx","prodUrl":"https://nextjs.org/docs/messages/non-dynamic-getstaticpaths-usage","sha":"baae86f4a458266076498f94c4218cb7c8aa2cdb","size":571,"content":"---\ntitle: '`getStaticPaths` Used on Non-Dynamic Page'\n---\n\n## Why This Error Occurred\n\nOn a non-dynamic SSG page `getStaticPaths` was incorrectly exported as this can only be used on dynamic pages to return the paths to prerender.\n\n## Possible Ways to Fix It\n\nRemove the `getStaticPaths` export on the non-dynamic page or rename the page to be a dynamic page.\n\n## Useful Links\n\n- [Dynamic Routes Documentation](/docs/pages/building-your-application/routing/dynamic-routes)\n- [`getStaticPaths` Documentation](/docs/pages/building-your-application/routing/dynamic-routes)\n"},{"path":"errors/invalid-server-options.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-server-options.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-server-options","sha":"8801aa697668ca714f7b47b37d8ba0fa0223bad8","size":909,"content":"---\ntitle: It looks like the next instance is being instantiated incorrectly.\n---\n\n## Why This Error Occurred\n\nYou have passed a null or undefined parameter to the `next()` call.\n\n## Possible Ways to Fix It\n\nMake sure you are passing the variables properly:\n\n```js filename=\"server.js\"\nconst app = next()\n```\n\nAnd make sure you're passing dev as shown in the examples below:\n\n```js filename=\"server.js\"\nconst app = next({ dev: boolean })\n```\n\n## Useful Links\n\n- [custom-server-express](https://github.com/vercel/next.js/blob/6ca00bfe312c8d3fc5c20d25a9cd8d2741a29332/examples/custom-server-express/server.js#L6)\n- [custom-server](https://github.com/vercel/next.js/blob/6ca00bfe312c8d3fc5c20d25a9cd8d2741a29332/examples/custom-server/server.js#L6)\n- [custom-server-typescript](https://github.com/vercel/next.js/blob/6ca00bfe312c8d3fc5c20d25a9cd8d2741a29332/examples/custom-server-typescript/server/index.ts#L7)\n"},{"path":"errors/gssp-export.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/gssp-export.mdx","prodUrl":"https://nextjs.org/docs/messages/gssp-export","sha":"57e3617af8c12552cbe120579e26b13f18e97b2d","size":1722,"content":"---\ntitle: '`getServerSideProps` Export Error'\n---\n\n## Why This Error Occurred\n\nYou attempted to statically export your application via `output: 'export'` or `next export`, however, one or more of your pages uses `getServerSideProps`.\n\nIt is not possible to use `getServerSideProps` without a server, so you'll need to use `next start` when self hosting or deploy to a provider like [Vercel](https://vercel.com).\n\n## Possible Ways to Fix It\n\n1. If you'd like to keep your application static, you can use `getStaticProps` instead of `getServerSideProps`.\n\n2. If you want to use server-side rendering, update your build command and remove `output: 'export'` and remove `next export`. For example, in your `package.json`:\n\n   ```diff\n   --- a/package.json\n   +++ b/package.json\n   @@ -1,7 +1,7 @@\n   {\n     \"scripts\": {\n       \"dev\": \"next dev\",\n   -    \"build\": \"next build && next export\",\n   +    \"build\": \"next build\",\n       \"start\": \"next start\"\n     }\n   }\n   ```\n\n   ```diff\n   --- a/next.config.js\n   +++ b/next.config.js\n   @@ -1,4 +1,4 @@\n   {\n     module.exports = {\n       reactStrictMode: true,\n   -    output: \"export\",\n     }\n   }\n   ```\n\n> **Note**: Removing export does not mean your entire application is no longer static.\n> Pages that use `getStaticProps` or [no lifecycle](/docs/pages/building-your-application/rendering/automatic-static-optimization) **will still be static**!\n\n## Useful Links\n\n- [Automatic Static Optimization](/docs/pages/building-your-application/rendering/automatic-static-optimization)\n- [`getStaticProps` documentation](/docs/pages/building-your-application/data-fetching/get-static-props)\n- [`exportPathMap` documentation](/docs/pages/api-reference/next-config-js/exportPathMap)\n"},{"path":"errors/react-hydration-error.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/react-hydration-error.mdx","prodUrl":"https://nextjs.org/docs/messages/react-hydration-error","sha":"ccd61ede34bd008add3c3bb83844a7279e156b88","size":3538,"content":"---\ntitle: Text content does not match server-rendered HTML\n---\n\n## Why This Error Occurred\n\nWhile rendering your application, there was a difference between the React tree that was pre-rendered from the server and the React tree that was rendered during the first render in the browser (hydration).\n\n[Hydration](https://react.dev/reference/react-dom/client/hydrateRoot) is when React converts the pre-rendered HTML from the server into a fully interactive application by attaching event handlers.\n\n### Common Causes\n\nHydration errors can occur from:\n\n1. Incorrect nesting of HTML tags\n   1. `<p>` nested in another `<p>` tag\n   2. `<div>` nested in a `<p>` tag\n   3. `<ul>` or `<ol>` nested in a `<p>` tag\n   4. [Interactive Content](https://html.spec.whatwg.org/#interactive-content-2) cannot be nested (`<a>` nested in a `<a>` tag, `<button>` nested in a `<button>` tag, etc.)\n2. Using checks like `typeof window !== 'undefined'` in your rendering logic\n3. Using browser-only APIs like `window` or `localStorage` in your rendering logic\n4. Using time-dependent APIs such as the `Date()` constructor in your rendering logic\n5. [Browser extensions](https://github.com/facebook/react/issues/24430) modifying the HTML\n6. Incorrectly configured [CSS-in-JS libraries](https://nextjs.org/docs/app/building-your-application/styling/css-in-js)\n   1. Ensure your code is following [our official examples](https://github.com/vercel/next.js/tree/canary/examples)\n7. Incorrectly configured Edge/CDN that attempts to modify the html response, such as Cloudflare [Auto Minify](https://developers.cloudflare.com/speed/optimization/content/auto-minify/)\n\n## Possible Ways to Fix It\n\nThe following strategies can help address this error:\n\n### Solution 1: Using `useEffect` to run on the client only\n\nEnsure that the component renders the same content server-side as it does during the initial client-side render to prevent a hydration mismatch. You can intentionally render different content on the client with the `useEffect` hook.\n\n```jsx\nimport { useState, useEffect } from 'react'\n\nexport default function App() {\n  const [isClient, setIsClient] = useState(false)\n\n  useEffect(() => {\n    setIsClient(true)\n  }, [])\n\n  return <h1>{isClient ? 'This is never prerendered' : 'Prerendered'}</h1>\n}\n```\n\nDuring React hydration, `useEffect` is called. This means browser APIs like `window` are available to use without hydration mismatches.\n\n### Solution 2: Disabling SSR on specific components\n\nNext.js allows you to [disable prerendering](https://nextjs.org/docs/app/building-your-application/optimizing/lazy-loading#skipping-ssr) on specific components, which can prevent hydration mismatches.\n\n```jsx\nimport dynamic from 'next/dynamic'\n\nconst NoSSR = dynamic(() => import('../components/no-ssr'), { ssr: false })\n\nexport default function Page() {\n  return (\n    <div>\n      <NoSSR />\n    </div>\n  )\n}\n```\n\n### Solution 3: Using `suppressHydrationWarning`\n\nSometimes content will inevitably differ between the server and client, such as a timestamp. You can silence the hydration mismatch warning by adding `suppressHydrationWarning={true}` to the element.\n\n```jsx\n<time datetime=\"2016-10-25\" suppressHydrationWarning />\n```\n\n## Common iOS issues\n\niOS attempts to detect phone numbers, email addresses, and other data in text content and convert them into links, leading to hydration mismatches.\n\nThis can be disabled with the following `meta` tag:\n\n```jsx\n<meta\n  name=\"format-detection\"\n  content=\"telephone=no, date=no, email=no, address=no\"\n/>\n```\n"},{"path":"errors/url-deprecated.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/url-deprecated.mdx","prodUrl":"https://nextjs.org/docs/messages/url-deprecated","sha":"17eae82e0318148cb10f5a54e905829a451bbb81","size":1442,"content":"---\ntitle: '`url` is deprecated'\n---\n\n## Why This Error Occurred\n\nIn versions prior to 6.x the `url` property got magically injected into every `Page` component (every page inside the `pages` directory).\n\nThe reason this is going away is that we want to make things very predictable and explicit. Having a magical url property coming out of nowhere doesn't aid that goal.\n\n> ⚠️ In some cases using React Dev Tools may trigger this warning even if you do not reference `url` anywhere in your code. Try temporarily disabling the extension and see if the warning persists.\n\n## Possible Ways to Fix It\n\n/docs/advanced-features/codemods#url-to-withrouter\n\nSince Next 5 we provide a way to explicitly inject the Next.js router object into pages and all their descending components.\nThe `router` property that is injected will hold the same values as `url`, like `pathname`, `asPath`, and `query`.\n\nHere's an example of using `withRouter`:\n\n```js filename=\"pages/index.js\"\nimport { withRouter } from 'next/router'\n\nclass Page extends React.Component {\n  render() {\n    const { router } = this.props\n    console.log(router)\n    return <div>{router.pathname}</div>\n  }\n}\n\nexport default withRouter(Page)\n```\n\nWe provide a codemod (a code to code transformation) to automatically change the `url` property usages to `withRouter`.\n\nYou can find this codemod and instructions on how to run it here: /docs/advanced-features/codemods#url-to-withrouter\n"},{"path":"errors/invalid-assetprefix.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-assetprefix.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-assetprefix","sha":"9fa793d73b0bc2d7f88959d6c3bc41f6520aba3c","size":317,"content":"---\ntitle: 'Invalid `assetPrefix`'\n---\n\n## Why This Error Occurred\n\nThe value of `assetPrefix` in `next.config.js` is set to something that is not a `string`.\n\n## Possible Ways to Fix It\n\nEnsure that `assetPrefix` is a `string`.\n\nExample:\n\n```js filename=\"next.config.js\"\nmodule.exports = {\n  assetPrefix: '/',\n}\n```\n"},{"path":"errors/middleware-request-page.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/middleware-request-page.mdx","prodUrl":"https://nextjs.org/docs/messages/middleware-request-page","sha":"80d7b93ddac55cc4a8894fa1f5ad46808e09bae7","size":1545,"content":"---\ntitle: Removed page from Middleware API\n---\n\n## Why This Error Occurred\n\nYour application is interacting with `request.page` which has been deprecated.\n\n```ts filename=\"middleware.ts\"\nimport { NextRequest, NextResponse } from 'next/server'\n\nexport function middleware(request: NextRequest) {\n  const { params } = event.request.page\n  const { locale, slug } = params\n\n  if (locale && slug) {\n    const { search, protocol, host } = request.nextUrl\n    const url = new URL(`${protocol}//${locale}.${host}/${slug}${search}`)\n    return NextResponse.redirect(url)\n  }\n}\n```\n\n## Possible Ways to Fix It\n\nYou can use [URLPattern](https://developer.mozilla.org/docs/Web/API/URLPattern) instead to have the same behavior:\n\n```ts filename=\"middleware.ts\"\nimport { NextRequest, NextResponse } from 'next/server'\n\nconst PATTERNS = [\n  [\n    new URLPattern({ pathname: '/:locale/:slug' }),\n    ({ pathname }) => pathname.groups,\n  ],\n]\n\nconst params = (url) => {\n  const input = url.split('?')[0]\n  let result = {}\n\n  for (const [pattern, handler] of PATTERNS) {\n    const patternResult = pattern.exec(input)\n    if (patternResult !== null && 'pathname' in patternResult) {\n      result = handler(patternResult)\n      break\n    }\n  }\n  return result\n}\n\nexport function middleware(request: NextRequest) {\n  const { locale, slug } = params(request.url)\n\n  if (locale && slug) {\n    const { search, protocol, host } = request.nextUrl\n    const url = new URL(`${protocol}//${locale}.${host}/${slug}${search}`)\n    return NextResponse.redirect(url)\n  }\n}\n```\n"},{"path":"errors/experimental-jest-transformer.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/experimental-jest-transformer.mdx","prodUrl":"https://nextjs.org/docs/messages/experimental-jest-transformer","sha":"339310d35c2987587796ad5b73aa1f59df6e8b05","size":363,"content":"---\ntitle: '`next/jest` Experimental'\n---\n\n#### Why This Message Occurred\n\nYou are using `next/jest` which is currently an experimental feature of Next.js. In a future version of Next.js `next/jest` will be marked as stable.\n\nIf you have any feedback about the transformer you can share it on this discussion: https://github.com/vercel/next.js/discussions/31152.\n"},{"path":"errors/invalid-getstaticprops-value.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-getstaticprops-value.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-getstaticprops-value","sha":"01e0b0a1981a7704f23e4cfe88d9782550294b65","size":595,"content":"---\ntitle: 'Invalid `getStaticProps` Return Value'\n---\n\n## Why This Error Occurred\n\nIn one of the page's `getStaticProps` the return value had the incorrect shape.\n\n## Possible Ways to Fix It\n\nMake sure to return the following shape from `getStaticProps`:\n\n```tsx filename=\"pages/example.tsx\"\nexport async function getStaticProps(ctx: {\n    params?: ParsedUrlQuery;\n    preview?: boolean;\n    previewData?: PreviewData;\n}) {\n    return {\n        props: { [key: string]: any }\n    }\n}\n```\n\n## Useful Links\n\n- [`getStaticProps` Documentation](/docs/pages/api-reference/functions/get-static-props)\n"},{"path":"errors/no-styled-jsx-in-document.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-styled-jsx-in-document.mdx","prodUrl":"https://nextjs.org/docs/messages/no-styled-jsx-in-document","sha":"7f11470f249f4e0a8414e419c8cebb0483933577","size":1510,"content":"---\ntitle: 'No `styled-jsx` in `_document`'\n---\n\n> Prevent usage of `styled-jsx` in `pages/_document.js`.\n\n## Why This Error Occurred\n\nCustom CSS like `styled-jsx` is not allowed in a [Custom Document](/docs/pages/building-your-application/routing/custom-document).\n\n## Possible Ways to Fix It\n\nIf you need shared CSS for all of your pages, take a look at the [Custom `App`](/docs/pages/building-your-application/routing/custom-app) file or define a custom layout.\n\nFor example, consider the following stylesheet named `styles.css`:\n\n```css filename=\"styles.css\"\nbody {\n  font-family: 'SF Pro Text', 'SF Pro Icons', 'Helvetica Neue', 'Helvetica',\n    'Arial', sans-serif;\n  padding: 20px 20px 60px;\n  max-width: 680px;\n  margin: 0 auto;\n}\n```\n\nCreate a `pages/_app.{js,tsx}` file if not already present. Then, import the `styles.css` file.\n\n```jsx filename=\"pages/_app.js\"\nimport '../styles.css'\n\n// This default export is required in a new `pages/_app.js` file.\nexport default function MyApp({ Component, pageProps }) {\n  return <Component {...pageProps} />\n}\n```\n\nThese styles (`styles.css`) will apply to all pages and components in your application.\n\n## Useful Links\n\n- [Custom Document Caveats](/docs/pages/building-your-application/routing/custom-document#caveats)\n- [Layouts](/docs/pages/building-your-application/routing/pages-and-layouts#layout-pattern)\n- [Built in CSS Support](/docs/pages/building-your-application/styling)\n- [Custom `App`](/docs/pages/building-your-application/routing/custom-app)\n"},{"path":"errors/no-css-tags.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-css-tags.mdx","prodUrl":"https://nextjs.org/docs/messages/no-css-tags","sha":"92823b6405b32a2baa3d2f289050ac032b90f7e0","size":1039,"content":"---\ntitle: No CSS Tags\n---\n\n> Prevent manual stylesheet tags.\n\n## Why This Error Occurred\n\nA `link` element was used to link to an external stylesheet. This can negatively affect CSS resource loading on your webpage.\n\n## Possible Ways to Fix It\n\nThere are multiple ways to include styles using Next.js' built-in CSS support, including the option to use `@import` within the root stylesheet that is imported in `pages/_app.js`:\n\n```css filename=\"styles.css\"\n/* Root stylesheet */\n@import 'extra.css';\n\nbody {\n  /* ... */\n}\n```\n\nAnother option is to use CSS Modules to import the CSS file scoped specifically to the component.\n\n```jsx filename=\"pages/index.js\"\nimport styles from './extra.module.css'\n\nexport class Home {\n  render() {\n    return (\n      <div>\n        <button type=\"button\" className={styles.active}>\n          Open\n        </button>\n      </div>\n    )\n  }\n}\n```\n\nRefer to the [Built-In CSS Support](/docs/pages/building-your-application/styling) documentation to learn about all the ways to include CSS to your application.\n"},{"path":"errors/google-font-display.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/google-font-display.mdx","prodUrl":"https://nextjs.org/docs/messages/google-font-display","sha":"0abc261bd163db939408614430d57ef4bc36e6dd","size":1301,"content":"---\ntitle: Google Font Display\n---\n\n> Enforce font-display behavior with Google Fonts.\n\n## Why This Error Occurred\n\nFor a Google Font, the font-display descriptor was either missing or set to `auto`, `block`, or `fallback`, which are not recommended.\n\n## Possible Ways to Fix It\n\nFor most cases, the best font display strategy for custom fonts is `optional`.\n\n```jsx filename=\"pages/index.js\"\nimport Head from 'next/head'\n\nexport default function IndexPage() {\n  return (\n    <div>\n      <Head>\n        <link\n          href=\"https://fonts.googleapis.com/css2?family=Krona+One&display=optional\"\n          rel=\"stylesheet\"\n        />\n      </Head>\n    </div>\n  )\n}\n```\n\nSpecifying `display=optional` minimizes the risk of invisible text or layout shift. If swapping to the custom font after it has loaded is important to you, then use `display=swap` instead.\n\n### When Not To Use It\n\nIf you want to specifically display a font using an `auto`, `block`, or `fallback` strategy, then you can disable this rule.\n\n## Useful Links\n\n- [Controlling Font Performance with font-display](https://developer.chrome.com/blog/font-display/)\n- [Google Fonts API Docs](https://developers.google.com/fonts/docs/css2#use_font-display)\n- [CSS `font-display` property](https://www.w3.org/TR/css-fonts-4/#font-display-desc)\n"},{"path":"errors/no-server-import-in-page.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-server-import-in-page.mdx","prodUrl":"https://nextjs.org/docs/messages/no-server-import-in-page","sha":"2ab06b024d5727569d709eb26d1642ae536c9918","size":628,"content":"---\ntitle: No Server Import In Page\n---\n\n> Prevent usage of `next/server` outside of `middleware.js`.\n\n## Why This Error Occurred\n\n`next/server` was imported outside of `middleware.{js,ts}`.\n\n## Possible Ways to Fix It\n\nOnly import and use `next/server` in a file located within the project root directory: `middleware.{js,ts}`.\n\n```ts filename=\"middleware.ts\"\nimport type { NextFetchEvent, NextRequest } from 'next/server'\n\nexport function middleware(req: NextRequest, ev: NextFetchEvent) {\n  return new Response('Hello, world!')\n}\n```\n\n## Useful Links\n\n- [Middleware](/docs/pages/building-your-application/routing/middleware)\n"},{"path":"errors/env-loading-disabled.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/env-loading-disabled.mdx","prodUrl":"https://nextjs.org/docs/messages/env-loading-disabled","sha":"04853dbddaf46dc5adfb4e747eb57eac52a3f690","size":943,"content":"---\ntitle: Env Loading Disabled\n---\n\n## Why This Error Occurred\n\nIn your project you have `dotenv` listed as a `dependency` or a `devDependency` which opts-out of Next.js' automatic loading to prevent creating a conflict with any existing `dotenv` behavior in your project.\n\nThis is also disabled if a `package.json` isn't able to found in your project somehow.\n\n## Possible Ways to Fix It\n\nUpdate to the latest version of Next.js (>= v9.4.1) where this support is enabled regardless of `dotenv` being installed.\n\nRemove `dotenv` from your `devDependencies` or `dependencies` and allow Next.js to load your `dotenv` files for you.\n\n## Useful Links\n\n- [dotenv](https://npmjs.com/package/dotenv)\n- [dotenv-expand](https://npmjs.com/package/dotenv-expand)\n- [Environment Variables](https://en.wikipedia.org/wiki/Environment_variable)\n- [Next.js Environment Variables Docs](/docs/pages/building-your-application/configuring/environment-variables)\n"},{"path":"errors/webpack5.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/webpack5.mdx","prodUrl":"https://nextjs.org/docs/messages/webpack5","sha":"ed040d7052b0a7a80b94b2172a46c12f58f6bef2","size":2892,"content":"---\ntitle: Webpack 5 Adoption\n---\n\n#### Why This Message Occurred\n\nNext.js has adopted webpack 5 as the default for compilation. We've spent a lot of effort into ensuring the transition from webpack 4 to 5 will be as smooth as possible.\n\nYour application currently has webpack 5 disabled using the `webpack5: false` flag which has been removed in Next.js 12:\n\n```js filename=\"next.config.js\"\nmodule.exports = {\n  // Webpack 5 is enabled by default\n  // You can still use webpack 4 while upgrading to the latest version of Next.js by adding the \"webpack5: false\" flag\n  webpack5: false,\n}\n```\n\nUsing webpack 5 in your application has many benefits, notably:\n\n- Improved Disk Caching: `next build` is significantly faster on subsequent builds\n- Improved Fast Refresh: Fast Refresh work is prioritized\n- Improved Long Term Caching of Assets: Deterministic code output that is less likely to change between builds\n- Improved Tree Shaking\n- Support for assets using `new URL(\"file.png\", import.meta.url)`\n- Support for web workers using `new Worker(new URL(\"worker.js\", import.meta.url))`\n- Support for `exports`/`imports` field in `package.json`\n\nIn the past releases we have gradually rolled out webpack 5 to Next.js applications:\n\n- In Next.js 10.2 we automatically opted-in applications without custom webpack configuration in `next.config.js`\n- In Next.js 10.2 we automatically opted-in applications that do not have a `next.config.js`\n- In Next.js 11 webpack 5 was enabled by default for all applications. You could still opt-out and use webpack 4 to help with backwards compatibility using `webpack5: false` in `next.config.js`\n- In Next.js 12 webpack 4 support was removed.\n\n#### Custom webpack configuration\n\nIn case you do have custom webpack configuration, either through custom plugins or your own modifications you'll have to take a few steps to ensure your applications works with webpack 5.\n\n- When using `next-transpile-modules` make sure you use the latest version which includes [this patch](https://github.com/martpie/next-transpile-modules/pull/179)\n- When using `@zeit/next-css` / `@zeit/next-sass` make sure you use the [built-in CSS/Sass support](/docs/pages/building-your-application/styling) instead\n- When using `@zeit/next-preact` use [this example](https://github.com/vercel/next.js/tree/canary/examples/using-preact) instead\n- When using `@zeit/next-source-maps` use the [built-in production Source Map support](/docs/pages/api-reference/next-config-js/productionBrowserSourceMaps)\n- When using webpack plugins make sure they're upgraded to the latest version, in most cases the latest version will include webpack 5 support. In some cases these upgraded webpack plugins will only support webpack 5.\n\n## Useful Links\n\nIn case you're running into issues you can connect with the community in [this help discussion](https://github.com/vercel/next.js/discussions/23498).\n"},{"path":"errors/invalid-script.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-script.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-script","sha":"18806b1fa6b194024948d67190534a764fc896b7","size":916,"content":"---\ntitle: Invalid Script\n---\n\n## Why This Error Occurred\n\nSomewhere in your application, you are using the `next/script` component without including an inline script or `src` attribute.\n\n## Possible Ways to Fix It\n\nLook for any usage of the `next/script` component and make sure that `src` is provided or an inline script is used.\n\n**Compatible `src` attribute**\n\n```jsx\n<Script src=\"https://example.com/analytics.js\" />\n```\n\n**Compatible inline script with curly braces**\n\n```jsx\n<Script id=\"show-banner\">\n  {`document.getElementById('banner').classList.remove('hidden')`}\n</Script>\n```\n\n**Compatible inline script with `dangerouslySetInnerHtml`**\n\n```jsx\n<Script\n  id=\"show-banner\"\n  dangerouslySetInnerHTML={{\n    __html: `document.getElementById('banner').classList.remove('hidden')`,\n  }}\n/>\n```\n\n## Useful Links\n\n- [Script Component in Documentation](/docs/pages/building-your-application/optimizing/scripts)\n"},{"path":"errors/no-document-title.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-document-title.mdx","prodUrl":"https://nextjs.org/docs/messages/no-document-title","sha":"c08dbc92b6678f7c98b3b0cffe552d17a914268e","size":723,"content":"---\ntitle: '`<title>` should not be used in _document.js `<Head>`'\n---\n\n## Why This Error Occurred\n\nAdding `<title>` in `pages/_document.js` will lead to unexpected results with `next/head` since `_document.js` is only rendered on the initial pre-render.\n\n## Possible Ways to Fix It\n\nSet `<title>` in `pages/_app.js` instead:\n\n```js filename=\"pages/_app.js\"\nimport React from 'react'\nimport Head from 'next/head'\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <>\n      <Head>\n        <title>My new cool app</title>\n      </Head>\n      <Component {...pageProps} />\n    </>\n  )\n}\n\nexport default MyApp\n```\n\n## Useful Links\n\n- [The issue this was reported in: #4596](https://github.com/vercel/next.js/issues/4596)\n"},{"path":"errors/next-dynamic-modules.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/next-dynamic-modules.mdx","prodUrl":"https://nextjs.org/docs/messages/next-dynamic-modules","sha":"04499720cf6fd374a08648340c005f08ef2f7475","size":1527,"content":"---\ntitle: '`next/dynamic` has deprecated loading multiple modules at once'\n---\n\n## Why This Error Occurred\n\nThe ability to load multiple modules at once has been deprecated in `next/dynamic` to be closer to React's implementation (`React.lazy` and `Suspense`).\n\nUpdating code that relies on this behavior is relatively straightforward! We've provided an example of a before/after to help you migrate your application:\n\n## Possible Ways to Fix It\n\nMigrate to using separate dynamic calls for each module.\n\n**Before**\n\n```js filename=\"example.js\"\nimport dynamic from 'next/dynamic'\n\nconst HelloBundle = dynamic({\n  modules: () => {\n    const components = {\n      Hello1: () => import('../components/hello1').then((m) => m.default),\n      Hello2: () => import('../components/hello2').then((m) => m.default),\n    }\n\n    return components\n  },\n  render: (props, { Hello1, Hello2 }) => (\n    <div>\n      <h1>{props.title}</h1>\n      <Hello1 />\n      <Hello2 />\n    </div>\n  ),\n})\n\nfunction DynamicBundle() {\n  return <HelloBundle title=\"Dynamic Bundle\" />\n}\n\nexport default DynamicBundle\n```\n\n**After**\n\n```js filename=\"example.js\"\nimport dynamic from 'next/dynamic'\n\nconst Hello1 = dynamic(() => import('../components/hello1'))\nconst Hello2 = dynamic(() => import('../components/hello2'))\n\nfunction HelloBundle({ title }) {\n  return (\n    <div>\n      <h1>{title}</h1>\n      <Hello1 />\n      <Hello2 />\n    </div>\n  )\n}\n\nfunction DynamicBundle() {\n  return <HelloBundle title=\"Dynamic Bundle\" />\n}\n\nexport default DynamicBundle\n```\n"},{"path":"errors/prefetch-true-deprecated.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/prefetch-true-deprecated.mdx","prodUrl":"https://nextjs.org/docs/messages/prefetch-true-deprecated","sha":"f925e617954c52db5130518cd6bb8662d2f2935a","size":1057,"content":"---\ntitle: '`prefetch={true}` is deprecated'\n---\n\n## Why This Error Occurred\n\nIn [Nextjs 9](/blog/next-9#prefetching-in-viewport-links), the behavior of the `<Link prefetch>` attribute was changed from opt in to opt out. This means that the `<Linkg prefetch={true}>` is **no longer required**.\n\n`<Link>` will automatically prefetch pages in the background as they appear in the view. If certain pages are rarely visited you can manually set prefetch to false, here's how:\n\nThis feature improves the responsiveness of your application by making navigations to new pages quicker.\n\nNext.js uses an Intersection Observer to prefetch the assets necessary in the background.\n\nThese requests have low-priority and yield to `fetch()` or XHR requests. Next.js will avoid automatically prefetching if the user has data-saver enabled.\n\n## Possible Ways to Fix It\n\n`<Link prefetch={true}>` is now the default behavior and setting it is no longer required. You can safely remove the `prefetch` attribute.\n\nYou can opt out of prefetching using `<Link prefetch={false}>`.\n"},{"path":"errors/gssp-no-mutating-res.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/gssp-no-mutating-res.mdx","prodUrl":"https://nextjs.org/docs/messages/gssp-no-mutating-res","sha":"b44efb6ce4e5260a0da98286bc6993fca9052729","size":1106,"content":"---\ntitle: 'Must not access ServerResponse after `getServerSideProps` resolves'\n---\n\n## Why This Error Occurred\n\n`getServerSideProps()` surfaces a `ServerResponse` object through the `res` property of its `context` arg. This object is not intended to be accessed or changed after `getServerSideProps()` resolves.\n\nThis is because the framework tries to optimize when items like headers or status codes are flushed to the browser. If they are changed after `getServerSideProps()` completes, we can't guarantee that the changes will work.\n\nFor this reason, accessing the object after this time is disallowed.\n\n## Possible Ways to Fix It\n\nYou can fix this error by moving any access of the `res` object into `getServerSideProps()` itself or any functions that run before `getServerSideProps()` returns.\n\nIf you’re using a custom server and running into this problem due to session middleware like `next-session` or `express-session`, try installing the middleware in the server instead of `getServerSideProps()`.\n\n## Useful Links\n\n- [Data Fetching Docs](/docs/pages/building-your-application/data-fetching)\n"},{"path":"errors/get-initial-props-as-an-instance-method.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/get-initial-props-as-an-instance-method.mdx","prodUrl":"https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method","sha":"75a4cee359c7a3a53efac13d6a6f5ab5109b05ab","size":727,"content":"---\ntitle: '`getInitialProps` was defined as an instance method'\n---\n\n## Why This Error Occurred\n\n`getInitialProps` must be a static method in order to be called by next.js.\n\n## Possible Ways to Fix It\n\nUse the static keyword.\n\n```js filename=\"pages/example.js\"\nexport default class YourEntryComponent extends React.Component {\n  static getInitialProps() {\n    return {}\n  }\n\n  render() {\n    return 'foo'\n  }\n}\n```\n\nor\n\n```js filename=\"pages/example.js\"\nconst YourEntryComponent = function () {\n  return 'foo'\n}\n\nYourEntryComponent.getInitialProps = () => {\n  return {}\n}\n\nexport default YourEntryComponent\n```\n\n## Useful Links\n\n- [Fetching data and component lifecycle](/docs/pages/api-reference/functions/get-initial-props)\n"},{"path":"errors/conflicting-public-file-page.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/conflicting-public-file-page.mdx","prodUrl":"https://nextjs.org/docs/messages/conflicting-public-file-page","sha":"301f663b0ae1b3f0c3439f83a263d12a230313a7","size":721,"content":"---\ntitle: Conflicting Public File and Page File\n---\n\n## Why This Error Occurred\n\nOne of your public files has the same path as a page file which is not supported. Since only one resource can reside at the URL both public files and page files must be unique.\n\n## Possible Ways to Fix It\n\nRename either the public file or page file that is causing the conflict.\n\nExample conflict between public file and page file\n\n```bash filename=\"Folder structure\"\npublic/\n  hello\npages/\n  hello.js\n```\n\nNon-conflicting public file and page file\n\n```bash filename=\"Folder structure\"\npublic/\n  hello.txt\npages/\n  hello.js\n```\n\n## Useful Links\n\n- [Static file serving docs](/docs/pages/building-your-application/optimizing/static-assets)\n"},{"path":"errors/edge-dynamic-code-evaluation.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/edge-dynamic-code-evaluation.mdx","prodUrl":"https://nextjs.org/docs/messages/edge-dynamic-code-evaluation","sha":"68d60f62a3752c369a9939ddc3951a787dd74932","size":1806,"content":"---\ntitle: Dynamic code evaluation is not available in Middleware\n---\n\n## Why This Error Occurred\n\n`eval()`, `new Function()` or compiling WASM binaries dynamically is not allowed in Middleware.\nSpecifically, the following APIs are not supported:\n\n- `eval()`\n- `new Function()`\n- `WebAssembly.compile`\n- `WebAssembly.instantiate` with [a buffer parameter](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/instantiate#primary_overload_%E2%80%94_taking_wasm_binary_code)\n\n## Possible Ways to Fix It\n\nYou can bundle your WASM binaries using `import`:\n\n```ts filename=\"middleware.ts\"\nimport { NextResponse } from 'next/server'\nimport squareWasm from './square.wasm?module'\n\nexport default async function middleware() {\n  const m = await WebAssembly.instantiate(squareWasm)\n  const answer = m.exports.square(9)\n\n  const response = NextResponse.next()\n  response.headers.set('x-square', answer.toString())\n  return response\n}\n```\n\nIn rare cases, your code could contain (or import) some dynamic code evaluation statements which _can not be reached at runtime_ and which can not be removed by tree-shaking.\nYou can relax the check to allow specific files with your Middleware [configuration](/docs/pages/api-reference/edge#unsupported-apis):\n\n```tsx filename=\"pages/api/example.ts\"\nexport const config = {\n  unstable_allowDynamic: [\n    '/lib/utilities.js', // allows a single file\n    '/node_modules/function-bind/**', // use a glob to allow anything in the function-bind 3rd party module\n  ],\n}\n```\n\n`unstable_allowDynamic` is a glob, or an array of globs, ignoring dynamic code evaluation for specific files. The globs are relative to your application root folder.\n\nBe warned that if these statements are executed on the Edge, _they will throw and cause a runtime error_.\n"},{"path":"errors/webpack-build-worker-opt-out.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/webpack-build-worker-opt-out.mdx","prodUrl":"https://nextjs.org/docs/messages/webpack-build-worker-opt-out","sha":"a9ee59c605cf21d4defa1966670895d2daa1eb93","size":535,"content":"---\ntitle: Webpack Build Worker automatic opt-out\n---\n\n## Webpack Build Worker Opt-out\n\n#### Why This Error Occurred\n\nThe Next.js config contains custom webpack configuration, as a result, the webpack build worker optimization was disabled.\n\nThe webpack build worker optimization helps alleviate memory stress during builds and reduce out-of-memory errors although some custom configurations may not be compatible.\n\n#### Possible Ways to Fix It\n\nUpgrade Next.js to latest (>= 14.1.0) to remove this warning.\n\n```\nnpm i next@latest\n```\n"},{"path":"errors/opt-out-auto-static-optimization.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/opt-out-auto-static-optimization.mdx","prodUrl":"https://nextjs.org/docs/messages/opt-out-auto-static-optimization","sha":"576d1ff555ec47804989dea079f29187d0340ae5","size":1470,"content":"---\ntitle: Opt-out of Automatic Static Optimization\n---\n\n#### Why This Warning Occurred\n\nYou are using `getInitialProps` in your [Custom `<App>`](/docs/pages/building-your-application/routing/custom-app) file.\n\nThis causes **all pages** that do not use [`getStaticProps`](/docs/pages/building-your-application/data-fetching/get-static-props) into Server-side Rendering (at runtime) and disables [Automatic Static Optimization](/docs/pages/building-your-application/rendering/automatic-static-optimization).\n\n## Possible Ways to Fix It\n\nVerify if you need to use `getInitialProps` in `pages/_app`. There are some valid use cases for this, but it's often better to use `getInitialProps` in individual pages.\n\n- Check for any [higher-order components](https://reactjs.org/docs/higher-order-components.html) that may have added `getInitialProps` to your [Custom `<App>`](/docs/pages/building-your-application/routing/custom-app).\n- If you previously copied the [Custom `<App>`](/docs/pages/building-your-application/routing/custom-app) example from the old docs, you can remove `getInitialProps`.\n\nThe following `getInitialProps` can be removed:\n\n```js filename=\"pages/_app.js\"\nclass MyApp extends App {\n  // Remove me, I do nothing!\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {}\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    return { pageProps }\n  }\n\n  render() {\n    // ...\n  }\n}\n```\n"},{"path":"errors/invalid-segment-export.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-segment-export.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-segment-export","sha":"67fa40fcc644030f3285cf37c5be202b7fa012e4","size":786,"content":"---\ntitle: Invalid Layout or Page Export\n---\n\n## Why This Error Occurred\n\nYour [layout](/docs/app/api-reference/file-conventions/layout) or [page](/docs/app/api-reference/file-conventions/page) inside the app directory exports an invalid field. In these files, you're only allowed to export a default React component, or [Segment Configuration Options](/docs/app/api-reference/file-conventions/route-segment-config) for layout and pages, such as `revalidate`, `generateStaticParams`, etc.\n\nOther custom exports are not allowed to catch misspelt configuration options and prevent conflicts with future options.\n\n## Possible Ways to Fix It\n\nYou can create a new file and co-locate it with the page or layout. In the new file, you can export any custom fields and import it from anywhere.\n"},{"path":"errors/next-script-for-ga.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/next-script-for-ga.mdx","prodUrl":"https://nextjs.org/docs/messages/next-script-for-ga","sha":"75d1009dd1bf287e0bd5dcbaa91c43302109f17e","size":3163,"content":"---\ntitle: Using Google Analytics with Next.js (through `next/script`)\n---\n\n> Prefer `next/script` component when using the inline script for Google Analytics.\n\n## Why This Error Occurred\n\nAn inline script was used for Google Analytics which might impact your webpage's performance. Instead, we recommend using `next/script` through the `@next/third-parties` library.\n\n## Possible Ways to Fix It\n\n#### Use `@next/third-parties` to add Google Analytics\n\n**`@next/third-parties`** is a library that provides a collection of components and utilities that improve the performance and developer experience of loading popular third-party libraries in your Next.js application. It is available with Next.js 14 (install `next@latest`).\n\nThe `GoogleAnalytics` component can be used to include [Google Analytics\n4](https://developers.google.com/analytics/devguides/collection/ga4) to your page via the Google tag (`gtag.js`). By default, it fetches the original scripts after hydration occurs on the page.\n\n> **Recommendation**: If Google Tag Manager is already included in your application, you can\n> configure Google Analytics directly using it, rather than including Google Analytics as a separate component. Refer to the [documentation](https://developers.google.com/analytics/devguides/collection/ga4/tag-options#what-is-gtm)\n> to learn more about the differences between Tag Manager and `gtag.js`.\n\nTo load Google Analytics for all routes, include the component directly in your root layout and pass in your measurement ID:\n\n```tsx filename=\"app/layout.tsx\" switcher\nimport { GoogleAnalytics } from '@next/third-parties/google'\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  return (\n    <html lang=\"en\">\n      <body>{children}</body>\n      <GoogleAnalytics gaId=\"G-XYZ\" />\n    </html>\n  )\n}\n```\n\n```jsx filename=\"app/layout.js\" switcher\nimport { GoogleAnalytics } from '@next/third-parties/google'\n\nexport default function RootLayout({ children }) {\n  return (\n    <html lang=\"en\">\n      <body>{children}</body>\n      <GoogleAnalytics gaId=\"G-XYZ\" />\n    </html>\n  )\n}\n```\n\nTo load Google Analytics for a single route, include the component in your page file:\n\n```jsx filename=\"app/page.js\"\nimport { GoogleAnalytics } from '@next/third-parties/google'\n\nexport default function Page() {\n  return <GoogleAnalytics gaId=\"G-XYZ\" />\n}\n```\n\n> **Good to know:**\n>\n> - If you are using the Pages Router, please refer to the [`pages/` documentation](/docs/pages/building-your-application/optimizing/third-party-libraries).\n> - `@next/third-parties` also supports [Google Tag Manager](/docs/app/building-your-application/optimizing/third-party-libraries#google-tag-manager) and other third parties.\n> - Using `@next/third-parties` is not required. You can also use the `next/script` component directly. Refer to the [`next/script` documentation](/docs/app/building-your-application/optimizing/scripts) to learn more.\n\n## Useful Links\n\n- [`@next/third-parties` Documentation](/docs/app/building-your-application/optimizing/third-party-libraries)\n- [`next/script` Documentation](/docs/app/building-your-application/optimizing/scripts)\n"},{"path":"errors/export-image-api.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/export-image-api.mdx","prodUrl":"https://nextjs.org/docs/messages/export-image-api","sha":"b2682cd43b2d75456d042e9c7025404f76214c15","size":1364,"content":"---\ntitle: Export with Image Optimization API\n---\n\n## Why This Error Occurred\n\nYou configured `output: 'export'` (or ran `next export`) while importing the `next/image` component using the default `loader` configuration.\n\nHowever, the default `loader` relies on the Image Optimization API which is not available for exported applications.\n\nThis is because Next.js optimizes images on-demand, as users request them (not at build time).\n\n## Possible Ways to Fix It\n\n- Use [`next start`](/docs/pages/api-reference/next-cli#production) to run a server, which includes the Image Optimization API.\n- Use any provider which supports Image Optimization (such as [Vercel](https://vercel.com)).\n- [Configure `loader`](/docs/pages/api-reference/components/image#loader) in `next.config.js`.\n- [Configure `unoptimized`](/docs/pages/api-reference/components/image#unoptimized) in `next.config.js`.\n\n## Useful Links\n\n- [Deployment Documentation](/docs/pages/building-your-application/deploying#managed-nextjs-with-vercel)\n- [Image Optimization Documentation](/docs/pages/building-your-application/optimizing/images)\n- [`output: 'export'` Documentation](/docs/pages/building-your-application/deploying/static-exports)\n- [`next/image` Documentation](/docs/pages/api-reference/components/image)\n- [Vercel Documentation](https://vercel.com/docs/concepts/next.js/image-optimization)\n"},{"path":"errors/next-export-serverless.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/next-export-serverless.mdx","prodUrl":"https://nextjs.org/docs/messages/next-export-serverless","sha":"f84d73747e15d2d0fc2e7729eb9a4688773de397","size":421,"content":"---\ntitle: 'Using `next export` with `target` not set to `server`'\n---\n\n## Why This Error Occurred\n\nNext.js can only handle exporting when the `target` is set to `server` (this is the default value). A serverless build, for instance, has no handler for requests–this is usually implemented by a hosting provider.\n\n## Possible Ways to Fix It\n\nChange `target` to `server`, run `next build`, then run `next export` again.\n"},{"path":"errors/google-fonts-missing-subsets.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/google-fonts-missing-subsets.mdx","prodUrl":"https://nextjs.org/docs/messages/google-fonts-missing-subsets","sha":"a9501c078beb5436f6e2f63dcf442660c8458e8c","size":839,"content":"---\ntitle: 'Missing specified subset for a `next/font/google` font'\n---\n\n## Why This Error Occurred\n\nPreload is enabled for a font that is missing a specified subset.\n\n## Possible Ways to Fix It\n\n##### Specify which subsets to preload for that font.\n\n```js filename=\"example.js\"\nconst inter = Inter({ subsets: ['latin'] })\n```\n\nNote: previously it was possible to specify default subsets in your `next.config.js` with the `experimental.fontLoaders` option, but this is no longer supported.\n\n##### Disable preloading for that font\n\nIf it's not possible to preload your intended subset you can disable preloading.\n\n```js filename=\"example.js\"\nconst notoSansJapanese = Noto_Sans_JP({\n  weight: '400',\n  preload: false,\n})\n```\n\n## Useful Links\n\n[Specifying a subset](/docs/pages/building-your-application/optimizing/fonts#specifying-a-subset)\n"},{"path":"errors/no-before-interactive-script-outside-document.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-before-interactive-script-outside-document.mdx","prodUrl":"https://nextjs.org/docs/messages/no-before-interactive-script-outside-document","sha":"370a79262e738783465426e08b769284d671cf2b","size":1795,"content":"---\ntitle: No Before Interactive Script Outside Document\n---\n\n> Prevent usage of `next/script`'s `beforeInteractive` strategy outside of `app/layout.jsx` or `pages/_document.js`.\n\n## Why This Error Occurred\n\nYou cannot use the `next/script` component with the `beforeInteractive` strategy outside `app/layout.jsx` or `pages/_document.js`. That's because `beforeInteractive` strategy only works inside **`app/layout.jsx`** or **`pages/_document.js`** and is designed to load scripts that are needed by the entire site (i.e. the script will load when any page in the application has been loaded server-side).\n\n## Possible Ways to Fix It\n\n### App Router\n\nIf you want a global script, and you are using the App Router, move the script inside `app/layout.jsx`.\n\n```jsx filename=\"app/layout.jsx\"\nimport Script from 'next/script'\n\nexport default function RootLayout({ children }) {\n  return (\n    <html lang=\"en\">\n      <body>{children}</body>\n      <Script\n        src=\"https://example.com/script.js\"\n        strategy=\"beforeInteractive\"\n      />\n    </html>\n  )\n}\n```\n\n### Pages Router\n\nIf you want a global script, and you are using the Pages Router, move the script inside `pages/_document.js`.\n\n```jsx filename=\"pages/_document.js\"\nimport { Html, Head, Main, NextScript } from 'next/document'\nimport Script from 'next/script'\n\nexport default function Document() {\n  return (\n    <Html>\n      <Head />\n      <body>\n        <Main />\n        <NextScript />\n        <Script\n          src=\"https://example.com/script.js\"\n          strategy=\"beforeInteractive\"\n        ></Script>\n      </body>\n    </Html>\n  )\n}\n```\n\n- [App Router Script Optimization](/docs/app/building-your-application/optimizing/scripts)\n- [Pages Router Script Optimization](/docs/pages/building-your-application/optimizing/scripts)\n"},{"path":"errors/no-sync-scripts.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-sync-scripts.mdx","prodUrl":"https://nextjs.org/docs/messages/no-sync-scripts","sha":"3464d6f1685189408997c13d46ee0de19cba17a8","size":752,"content":"---\ntitle: No Sync Scripts\n---\n\n> Prevent synchronous scripts.\n\n## Why This Error Occurred\n\nA synchronous script was used which can impact your webpage performance.\n\n## Possible Ways to Fix It\n\n#### Script component (recommended)\n\n```jsx filename=\"pages/index.js\"\nimport Script from 'next/script'\n\nfunction Home() {\n  return (\n    <div class=\"container\">\n      <Script src=\"https://third-party-script.js\"></Script>\n      <div>Home Page</div>\n    </div>\n  )\n}\n\nexport default Home\n```\n\n#### Use `async` or `defer`\n\n```html\n<script src=\"https://third-party-script.js\" async />\n<script src=\"https://third-party-script.js\" defer />\n```\n\n## Useful Links\n\n- [Efficiently load third-party JavaScript](https://web.dev/efficiently-load-third-party-javascript/)\n"},{"path":"errors/export-path-mismatch.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/export-path-mismatch.mdx","prodUrl":"https://nextjs.org/docs/messages/export-path-mismatch","sha":"aa5c46420052b2784640ed873580db515b76b6ec","size":778,"content":"---\ntitle: The provided export path doesn't match the page.\n---\n\n## Why This Error Occurred\n\nAn `exportPathMap` path was improperly matched to a dynamically routed page.\nThis would result in the page missing its URL parameters.\n\n## Possible Ways to Fix It\n\nChange your `exportPathMap` function in `next.config.js` to have a path that matches the dynamically routed page.\n\n```js filename=\"next.config.js\"\nmodule.exports = {\n  exportPathMap: function () {\n    return {\n      '/': { page: '/' },\n      // '/blog/nextjs': { page: '/blog/[post]/comment/[id]' },        // wrong\n      '/blog/nextjs/comment/1': { page: '/blog/[post]/comment/[id]' }, // correct\n    }\n  },\n}\n```\n\n## Useful Links\n\n- [exportPathMap](/docs/pages/api-reference/next-config-js/exportPathMap) documentation\n"},{"path":"errors/production-start-no-build-id.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/production-start-no-build-id.mdx","prodUrl":"https://nextjs.org/docs/messages/production-start-no-build-id","sha":"0ddf7e4b6437f2acb6af7349fe5ab9c19a31c45f","size":368,"content":"---\ntitle: Could not find a production build\n---\n\n## Why This Error Occurred\n\nWhen running `next start` or a custom server in production mode a production build is needed.\n\n## Possible Ways to Fix It\n\n- Run `next build` to create a production build before booting up the production server.\n- If your intention was to run the development server run `next dev` instead.\n"},{"path":"errors/next-response-next-in-app-route-handler.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/next-response-next-in-app-route-handler.mdx","prodUrl":"https://nextjs.org/docs/messages/next-response-next-in-app-route-handler","sha":"87d77c6fd36cc842636d3f3a51192f45ab6d7106","size":640,"content":"---\ntitle: '`NextResponse.next()` used in a Route Handler in the App Router'\n---\n\n## Why This Error Occurred\n\nRoute Handlers in the Next.js App Router do not support using the `NextResponse.next()` method to forward to the next Middleware.\n\nThe Route Handler is considered the end of the middleware \"chain\". Handlers must always return a `Response` object instead.\n\n## Possible Ways to Fix It\n\nRemove the `NextResponse.next()` and replace it with a correct response handler.\n\n## Useful Links\n\n- [Route Handlers](/docs/app/building-your-application/routing/route-handlers)\n- [`NextResponse`](/docs/app/api-reference/functions/next-response)\n"},{"path":"errors/invalid-webpack-5-version.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-webpack-5-version.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-webpack-5-version","sha":"68e51f6e9bd3dd81d1fcc5d4aa61de91527e804f","size":635,"content":"---\ntitle: Invalid webpack 5 version\n---\n\n## Why This Error Occurred\n\nWhile leveraging webpack 5 support in Next.js the minimum required version of `v5.15.0` was not met. This version is needed while leveraging webpack 5 support with Next.js as early versions are missing patches that cause unexpected behavior.\n\n## Possible Ways to Fix It\n\nUpgrade the version of webpack 5 being used with Next.js to at least `v5.15.0` by updating your resolutions field for `webpack` in your `package.json`.\n\n## Useful Links\n\n- [Yarn Selective Dependency Resolutions Documentation](https://classic.yarnpkg.com/en/docs/selective-version-resolutions/)\n"},{"path":"errors/invalid-next-config.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-next-config.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-next-config","sha":"07c698d45663e6dbeddd675d3e24c66217cb72e5","size":969,"content":"---\ntitle: 'Invalid `next.config.js`'\n---\n\n## Why This Error Occurred\n\nIn your `next.config.js` file you passed invalid options that either are the incorrect type or an unknown field. This warning is shown to help catch typos that cause expected configs to not be applied.\n\n## Possible Ways to Fix It\n\nFixing the listed config errors will remove this warning. You can also leverage the `NextConfig` type by importing from `next` to help ensure your config is correct.\n\n```js filename=\"next.config.js\"\n/**\n * @type {import('next').NextConfig}\n */\nconst nextConfig = {\n  /* config options here */\n}\n\nmodule.exports = nextConfig\n```\n\nFor example for the below warning, there is a typo and `rewritess` needs to be renamed to `rewrites` to resolve the issue.\n\n```bash filename=\"Terminal\"\nThe root value has an unexpected property, rewritess, which is not in the list of allowed properties\n```\n\n## Useful Links\n\n- [`next.config.js`](/docs/pages/api-reference/next-config-js)\n"},{"path":"errors/invalid-images-config.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-images-config.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-images-config","sha":"9c60478972bc3e71378172f7cb94cd217b62185f","size":1767,"content":"---\ntitle: 'Invalid `images` config'\n---\n\n## Why This Error Occurred\n\nIn your `next.config.js` file, you provided an invalid config for the `images` field.\n\n## Possible Ways to Fix It\n\nMake sure your `images` field follows the allowed config shape and values:\n\n```js filename=\"next.config.js\"\nmodule.exports = {\n  images: {\n    // limit of 25 deviceSizes values\n    deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],\n    // limit of 25 imageSizes values\n    imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],\n    // limit of 50 domains values (deprecated)\n    domains: [],\n    // path prefix for Image Optimization API, useful with `loader`\n    path: '/_next/image',\n    // loader can be 'default', 'imgix', 'cloudinary', 'akamai', or 'custom'\n    loader: 'default',\n    // file with `export default function loader({src, width, quality})`\n    loaderFile: '',\n    // disable static imports for image files\n    disableStaticImages: false,\n    // minimumCacheTTL is in seconds, must be integer 0 or more\n    minimumCacheTTL: 60,\n    // ordered list of acceptable optimized image formats (mime types)\n    formats: ['image/webp'],\n    // enable dangerous use of SVG images\n    dangerouslyAllowSVG: false,\n    // set the Content-Security-Policy header\n    contentSecurityPolicy: \"default-src 'self'; script-src 'none'; sandbox;\",\n    // sets the Content-Disposition header ('inline' or 'attachment')\n    contentDispositionType: 'attachment',\n    // limit of 50 objects\n    remotePatterns: [],\n    // when true, every image will be unoptimized\n    unoptimized: false,\n  },\n}\n```\n\n## Useful Links\n\n- [Image Optimization Documentation](/docs/pages/building-your-application/optimizing/images)\n- [`next/image` Documentation](/docs/pages/api-reference/components/image)\n"},{"path":"errors/experimental-app-dir-config.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/experimental-app-dir-config.mdx","prodUrl":"https://nextjs.org/docs/messages/experimental-app-dir-config","sha":"3f8361f5fe32327ae0c23dd877764f647f8d06af","size":837,"content":"---\ntitle: 'Experimental `appDir: true`'\n---\n\n## Why This Error Occurred\n\nYour project contains a directory named `app/`. Since Next.js 13, this is a [reserved name](/blog/next-13#new-app-directory-beta).\n\n## Possible Ways to Fix It\n\nTo use the new app directory and its features, please add `appDir: true` to your configuration in `next.config.js` under `experimental`.\n\n```js filename=\"next.config.js\"\n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  experimental: {\n    appDir: true,\n  },\n}\n\nmodule.exports = nextConfig\n```\n\nIf you do not want to use the new `app/` directory features yet, but have a directory named `app/`, rename the directory to something else.\n\n## Useful Links\n\n- [Next.js 13 App directory](/blog/next-13#new-app-directory-beta)\n- [App directory documentation](/docs/app/building-your-application)\n"},{"path":"errors/ppr-caught-error.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/ppr-caught-error.mdx","prodUrl":"https://nextjs.org/docs/messages/ppr-caught-error","sha":"9f61ec20937a5875066c67f46683425a76699e40","size":1128,"content":"---\ntitle: Static Bail Out Caught\n---\n\n## Why This Error Occurred\n\nWhen Partial Prerendering (PPR) is enabled, using APIs that opt into Dynamic Rendering like `cookies`, `headers`, or `fetch` (such as with `cache: 'no-store'` or `revalidate: 0`) will cause React to throw a special error object to know which part of the page cannot be statically generated - while still letting the rest of it be partially static. If you catch this error, it is not safe for us to generate any static data, and your build will fail.\n\n## Possible Ways to Fix It\n\n- Ensure that you are not wrapping Next.js APIs that opt into dynamic rendering in a `try/catch` block.\n- If you do wrap these APIs in a try/catch, make sure you re-throw the original error so it can be caught by Next.js.\n- Alternatively, insert [`unstable_noStore()`](docs/app/api-reference/functions/unstable_noStore) before the try/catch.\n\n```js\nimport { unstable_noStore } from 'next/cache'\n\nasync function fetchData() {\n  unstable_noStore() // opt out before we even get to the try/catch\n  try {\n    const response = await fetch(url);\n    ...\n  } catch (x) {\n    ...\n  }\n}\n```\n"},{"path":"errors/next-image-missing-loader.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/next-image-missing-loader.mdx","prodUrl":"https://nextjs.org/docs/messages/next-image-missing-loader","sha":"98435478b7d99764759d9b36c52130bfeb3f333e","size":797,"content":"---\ntitle: 'Missing `loader` Prop on `next/image`'\n---\n\n## Why This Error Occurred\n\nWhen using the `next/image` component with [`loader=\"custom\"`](/docs/app/api-reference/next-config-js/images) in `next.config.js`, you must provide the [`loader`](/docs/pages/api-reference/components/image#loader) prop to the component with your custom implementation.\n\n## Possible Ways to Fix It\n\n- Add the [`loader`](/docs/pages/api-reference/components/image#loader) prop to all usages of the `next/image` component.\n- Change the [`loader`](/docs/app/api-reference/next-config-js/images) configuration in `next.config.js`.\n\n## Useful Links\n\n- [Image Optimization Documentation](/docs/pages/building-your-application/optimizing/images)\n- [`next/image` Documentation](/docs/pages/api-reference/components/image)\n"},{"path":"errors/invalid-styled-jsx-children.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-styled-jsx-children.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-styled-jsx-children","sha":"7cf85c38325c557dd1ddc2558c757abad4ddf19b","size":632,"content":"---\ntitle: 'Invalid `styled-jsx` children'\n---\n\n## Why This Error Occurred\n\nYou have passed invalid children to a `<style jsx>` tag.\n\n## Possible Ways to Fix It\n\nMake sure to only pass one child to the `<style jsx>` tag, typically a template literal.\n\n```jsx filename=\"example.js\"\nconst Component = () => (\n  <div>\n    <p>Red paragraph</p>\n    <style jsx>{`\n      p {\n        color: red;\n      }\n    `}</style>\n  </div>\n)\n```\n\nPlease see the links for more examples.\n\n## Useful Links\n\n- [Built-In CSS-in-JS](/docs/pages/building-your-application/styling/css-in-js)\n- [styled-jsx documentation](https://github.com/vercel/styled-jsx)\n"},{"path":"errors/next-image-upgrade-to-13.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/next-image-upgrade-to-13.mdx","prodUrl":"https://nextjs.org/docs/messages/next-image-upgrade-to-13","sha":"92806be2903de2102bd0332ba8a8094b1d3a9ada","size":1958,"content":"---\ntitle: '`next/image` changed in version 13'\n---\n\n## Why This Error Occurred\n\nStarting in Next.js 13, the `next/image` component has undergone some major changes.\n\nCompared to the legacy component, the new `next/image` component has the following changes:\n\n- Removes `<span>` wrapper around `<img>` in favor of [native computed aspect ratio](https://caniuse.com/mdn-html_elements_img_aspect_ratio_computed_from_attributes)\n- Adds support for canonical `style` prop\n  - Removes `layout` prop in favor of `style` or `className`\n  - Removes `objectFit` prop in favor of `style` or `className`\n  - Removes `objectPosition` prop in favor of `style` or `className`\n- Removes `IntersectionObserver` implementation in favor of [native lazy loading](https://caniuse.com/loading-lazy-attr)\n  - Removes `lazyBoundary` prop since there is no native equivalent\n  - Removes `lazyRoot` prop since there is no native equivalent\n- Removes `loader` config in favor of [`loader`](/docs/app/api-reference/components/image#loader) prop\n- Changed `alt` prop from optional to required\n\n## Possible Ways to Fix It\n\nRun the [next-image-to-legacy-image](/docs/pages/building-your-application/upgrading/codemods#next-image-to-legacy-image) codemod to automatically change `next/image` imports to `next/legacy/image`, for example:\n\n```\nnpx @next/codemod next-image-to-legacy-image .\n```\n\nAfter running this codemod, you can optionally upgrade `next/legacy/image` to the new `next/image` with another codemod, for example:\n\n```\nnpx @next/codemod next-image-experimental .\n```\n\nPlease note this second codemod is experimental and only covers static usage (such as `<Image src={img} layout=\"responsive\" />`) but not dynamic usage (such as `<Image {...props} />`).\n\n## Useful Links\n\n- [Next.js 13 Blog Post](/blog/next-13)\n- [`next/image` Documentation](/docs/pages/api-reference/components/image)\n- [`next/legacy/image` Documentation](/docs/pages/api-reference/components/image-legacy)\n"},{"path":"errors/incompatible-href-as.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/incompatible-href-as.mdx","prodUrl":"https://nextjs.org/docs/messages/incompatible-href-as","sha":"2401378eec0d28a91f20eb17f884c200715ba760","size":1362,"content":"---\ntitle: 'Incompatible `href` and `as` values'\n---\n\n## Why This Error Occurred\n\nSomewhere you are utilizing the `next/link` component, `Router#push`, or `Router#replace` with a dynamic route in your `href` that has an incompatible `as` value. The `as` value is incompatible when the path doesn't provide only the expected parameters for the dynamic route.\n\nNote: this error will only show when the `next/link` component is clicked not when only rendered.\n\n**Incompatible `href` and `as`**\n\n```jsx filename=\"pages/blog.js\"\nimport Link from 'next/link'\n\nexport default function Page(props) {\n  return (\n    <>\n      <Link href=\"/[post]\" as=\"/post-1/comments\">\n        <a>Invalid link</a>\n      </Link>\n    </>\n  )\n}\n```\n\n**Compatible `href` and `as`**\n\n```jsx filename=\"pages/blog.js\"\nimport Link from 'next/link'\n\nexport default function Page(props) {\n  return (\n    <>\n      <Link href=\"/[post]\" as=\"/post-1\">\n        <a>Valid link</a>\n      </Link>\n    </>\n  )\n}\n```\n\n## Possible Ways to Fix It\n\nLook for any usage of the `next/link` component, `Router#push`, or `Router#replace` and make sure that the provided `href` and `as` values are compatible\n\n## Useful Links\n\n- [Routing section in Documentation](/docs/pages/building-your-application/routing)\n- [Dynamic routing section in Documentation](/docs/pages/building-your-application/routing/dynamic-routes)\n"},{"path":"errors/middleware-dynamic-wasm-compilation.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/middleware-dynamic-wasm-compilation.mdx","prodUrl":"https://nextjs.org/docs/messages/middleware-dynamic-wasm-compilation","sha":"72d9dcdc873f449ddcbfbc46e99022b17f454eab","size":897,"content":"---\ntitle: Dynamic WASM compilation is not available in Middlewares\n---\n\n## Why This Error Occurred\n\nCompiling WASM binaries dynamically is not allowed in Middlewares. Specifically,\nthe following APIs are not supported:\n\n- `WebAssembly.compile`\n- `WebAssembly.instantiate` with [a buffer parameter](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/instantiate#primary_overload_%E2%80%94_taking_wasm_binary_code)\n\n## Possible Ways to Fix It\n\nBundle your WASM binaries using `import`:\n\n```ts filename=\"middleware.ts\"\nimport { NextResponse } from 'next/server'\nimport squareWasm from './square.wasm?module'\n\nexport default async function middleware() {\n  const m = await WebAssembly.instantiate(squareWasm)\n  const answer = m.exports.square(9)\n  const response = NextResponse.next()\n\n  response.headers.set('x-square', answer.toString())\n  return response\n}\n```\n"},{"path":"errors/invalid-api-status-body.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-api-status-body.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-api-status-body","sha":"2454f150242d68c935be87dc96c5fcae05028dc7","size":869,"content":"---\ntitle: Invalid API Route Status/Body Response\n---\n\n## Why This Error Occurred\n\nIn one of your API routes a 204 or 304 status code was used as well as sending a response body.\n\nThis is invalid as a 204 or 304 status code dictates no response body should be present.\n\n## Possible Ways to Fix It\n\nSend an empty body when using a 204 or 304 status code or use a different status code while sending a response body.\n\nBefore\n\n```js filename=\"pages/api/example.js\"\nexport default function handler(req, res) {\n  res.status(204).send('invalid body')\n}\n```\n\nAfter\n\n```js filename=\"pages/api/example.js\"\nexport default function handler(req, res) {\n  res.status(204).end()\n}\n```\n\n## Useful Links\n\n- [204 status code documentation](https://developer.mozilla.org/docs/Web/HTTP/Status/204)\n- [304 status code documentation](https://developer.mozilla.org/docs/Web/HTTP/Status/304)\n"},{"path":"errors/postcss-function.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/postcss-function.mdx","prodUrl":"https://nextjs.org/docs/messages/postcss-function","sha":"fc12adaff09fb8d0deccafb1be47a50a67cce7d0","size":684,"content":"---\ntitle: PostCSS Configuration Is a Function\n---\n\n## Why This Error Occurred\n\nThe project's custom PostCSS configuration exports a function instead of an object.\n\n## Possible Ways to Fix It\n\nAdjust the custom PostCSS configuration to not export a function. Instead, return a plain object.\n\nIf you need environment information, read it from `process.env`.\n\n**Before**\n\n```js filename=\"postcss.config.js\"\nmodule.exports = ({ env }) => ({\n  plugins: {\n    'postcss-plugin': env === 'production' ? {} : false,\n  },\n})\n```\n\n**After**\n\n```js filename=\"postcss.config.js\"\nmodule.exports = {\n  plugins: {\n    'postcss-plugin': process.env.NODE_ENV === 'production' ? {} : false,\n  },\n}\n```\n"},{"path":"errors/no-cache.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-cache.mdx","prodUrl":"https://nextjs.org/docs/messages/no-cache","sha":"a220c3db4eb2698740d32c946efea1192d2ad6b9","size":670,"content":"---\ntitle: No Cache Detected\n---\n\n## Why This Error Occurred\n\nA Next.js build was triggered in a continuous integration environment, but no cache was detected.\n\nThis results in slower builds and can hurt Next.js' persistent caching of client-side bundles across builds.\n\n## Possible Ways to Fix It\n\n> **Note**: If this is a new project, or being built for the first time in your CI, you can ignore this error.\n> However, you'll want to make sure it doesn't continue to happen and fix it if it does!\n\nFollow the instructions in [CI Build Caching](/docs/pages/building-your-application/deploying/ci-build-caching) to ensure your Next.js cache is persisted between builds.\n"},{"path":"errors/missing-env-value.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/missing-env-value.mdx","prodUrl":"https://nextjs.org/docs/messages/missing-env-value","sha":"014fa0134b4913c94a0c8d40838ce5ea0f040ab8","size":884,"content":"---\ntitle: Missing Env Value\n---\n\n## Why This Error Occurred\n\nIn one of your pages you attempted to access an environment value that is not provided in the environment.\n\nWhen accessing environment variables on the client they must be prefixed with `NEXT_PUBLIC_` to signify they are safe to be inlined for the client.\n\nWhen accessing environment variables on the server in `getStaticProps`, `getServerSideProps`, or an API route the value must be provided in the environment at runtime.\n\n## Possible Ways to Fix It\n\nEither remove the code accessing the env value, populate it in your `.env` file, or manually populate it in your environment before running `next dev` or `next build`.\n\n## Useful Links\n\n- [dotenv](https://npmjs.com/package/dotenv)\n- [dotenv-expand](https://npmjs.com/package/dotenv-expand)\n- [Environment Variables](https://en.wikipedia.org/wiki/Environment_variable)\n"},{"path":"errors/invalid-i18n-config.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-i18n-config.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-i18n-config","sha":"f39f268717621f10bd9520ac7bc330f6eb32e734","size":1283,"content":"---\ntitle: Invalid i18n config\n---\n\n## Why This Error Occurred\n\nIn your `next.config.js` file, you provided an invalid config for the `i18n` field. This could mean the limit for 100 locale items was exceeded.\n\n## Possible Ways to Fix It\n\nMake sure your `i18n` field follows the allowed config shape, limits, and values:\n\n```js filename=\"next.config.js\"\nmodule.exports = {\n  i18n: {\n    // These are all the locales you want to support in\n    // your application\n    locales: ['en-US', 'es', 'fr', 'nl-NL'],\n    // This is the default locale you want to be used when visiting\n    // a non-locale prefixed path e.g. `/hello`\n    defaultLocale: 'en-US',\n    // This is a list of locale domains and the default locale they\n    // should handle (these are only required when setting up domain routing)\n    domains: [\n      {\n        domain: 'example.com',\n        defaultLocale: 'en-US',\n        // other locales that should be handled on this domain\n        locales: ['es'],\n      },\n      {\n        domain: 'example.nl',\n        defaultLocale: 'nl-NL',\n      },\n      {\n        domain: 'example.fr',\n        defaultLocale: 'fr',\n      },\n    ],\n  },\n}\n```\n\n## Useful Links\n\n- [Internationalized Routing Documentation](/docs/pages/building-your-application/routing/internationalization)\n"},{"path":"errors/non-standard-node-env.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/non-standard-node-env.mdx","prodUrl":"https://nextjs.org/docs/messages/non-standard-node-env","sha":"f889fec4f7e711f065bd575e9db41704d177e0cf","size":1198,"content":"---\ntitle: 'Non-Standard `NODE_ENV`'\n---\n\n## Why This Error Occurred\n\nYour environment has a non-standard `NODE_ENV` value configured.\n\nThis may be by accident, so if you're unaware where the value is coming from, check the following:\n\n- The `.env*` files in your project, if present\n- Your `~/.bash_profile`, if present\n- Your `~/.zshrc`, if present\n\nThe greater React ecosystem treats `NODE_ENV` as a convention, only permitting three (3) values:\n\n- `production`: When your application is built with `next build`\n- `development`: When your application is run with `next dev`\n- `test`: When your application is being tested (e.g. `jest`)\n\nSetting a non-standard `NODE_ENV` value may cause dependencies to behave unexpectedly, or worse, **break dead code elimination**.\n\n## Possible Ways to Fix It\n\nTo fix this error, identify the source of the erroneous `NODE_ENV` value and get rid of it: Next.js automatically sets the correct value for you.\n\nIf you need the concept of different environments in your application, e.g. `staging`, you should use a different environment variable name like `APP_ENV`.\n\n## Useful Links\n\n- [Environment Variables](https://en.wikipedia.org/wiki/Environment_variable)\n"},{"path":"errors/postcss-ignored-plugin.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/postcss-ignored-plugin.mdx","prodUrl":"https://nextjs.org/docs/messages/postcss-ignored-plugin","sha":"a63e961a52c36cad73a4564282bc00ef7103233a","size":684,"content":"---\ntitle: Ignored PostCSS Plugin\n---\n\n## Why This Error Occurred\n\nThe project's custom PostCSS configuration attempts to configure unnecessary plugins:\n\n- postcss-modules-values\n- postcss-modules-scope\n- postcss-modules-extract-imports\n- postcss-modules-local-by-default\n- postcss-modules\n\n## Possible Ways to Fix It\n\nRemove the plugin specified in the error message from your custom PostCSS configuration.\n\n#### How do I configure CSS Modules?\n\nCSS Modules are supported in [Next.js' built-in CSS support](/docs/pages/building-your-application/configuring/post-css).\nYou can [read more about how to use CSS Modules here](/docs/pages/building-your-application/configuring/post-css).\n"},{"path":"errors/install-sass.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/install-sass.mdx","prodUrl":"https://nextjs.org/docs/messages/install-sass","sha":"274b584000746078ef61bc9a1409faccd5edbac3","size":478,"content":"---\ntitle: 'Install `sass` to Use Built-In Sass Support'\n---\n\n## Why This Error Occurred\n\nUsing Next.js' [built-in Sass support](/docs/pages/building-your-application/styling/sass) requires that you bring your own version of Sass.\n\n## Possible Ways to Fix It\n\nPlease install the `sass` package in your project.\n\n```bash filename=\"Terminal\"\nnpm i sass\n# or\nyarn add sass\n```\n\n## Useful Links\n\n- [Sass Support in Documentation](/docs/pages/building-your-application/styling/sass)\n"},{"path":"errors/no-stylesheets-in-head-component.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-stylesheets-in-head-component.mdx","prodUrl":"https://nextjs.org/docs/messages/no-stylesheets-in-head-component","sha":"e49c6762cfb9e4e4e50c4b512c534a1d00641a07","size":1270,"content":"---\ntitle: No Stylesheets In Head Component\n---\n\n## Why This Error Occurred\n\nA `<link rel=\"stylesheet\">` tag was added using the `next/head` component.\n\nWe don't recommend this pattern because it will potentially break when used with Suspense and/or streaming. In these contexts, `next/head` tags aren't:\n\n- guaranteed to be included in the initial SSR response, so loading could be delayed until client-side rendering, regressing performance.\n\n- loaded in any particular order. The order that the app's Suspense boundaries resolve will determine the loading order of your stylesheets.\n\n## Possible Ways to Fix It\n\n#### Document\n\nAdd the stylesheet in a custom `Document` component.\n\n```jsx filename=\"pages/_document.js\"\nimport { Html, Head, Main, NextScript } from 'next/document'\n\nexport default function Document() {\n  return (\n    <Html>\n      <Head>\n        <link rel=\"stylesheet\" href=\"...\" />\n      </Head>\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  )\n}\n```\n\nNote that the functional syntax for `Document` above is preferred over the `class` syntax, so that it will be compatible with React Server Components down the line.\n\n## Useful Links\n\n- [Custom Document](/docs/pages/building-your-application/routing/custom-document)\n"},{"path":"errors/swc-disabled.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/swc-disabled.mdx","prodUrl":"https://nextjs.org/docs/messages/swc-disabled","sha":"7f0091c8a2f37dc145a00a9d74ab9f69825ad7f3","size":1465,"content":"---\ntitle: SWC disabled\n---\n\n#### Why This Message Occurred\n\nNext.js now uses Rust-based compiler [SWC](https://swc.rs/) to compile JavaScript/TypeScript. This new compiler is up to 17x faster than Babel when compiling individual files and up to 5x faster Fast Refresh.\n\nNext.js provides full backwards compatibility with applications that have [custom Babel configuration](/docs/pages/building-your-application/configuring/babel). All transformations that Next.js handles by default like styled-jsx and tree-shaking of `getStaticProps` / `getStaticPaths` / `getServerSideProps` have been ported to Rust.\n\nWhen an application has custom Babel configuration Next.js will automatically opt-out of using SWC for compiling JavaScript/Typescript and will fall back to using Babel in the same way that it was used in Next.js 11.\n\nMany of the integrations with external libraries that currently require custom Babel transformations will be ported to Rust-based SWC transforms in the near future. These include but are not limited to:\n\n- Emotion\n\nIn order to prioritize transforms that will help you adopt SWC please provide your `.babelrc` on [the feedback thread](https://github.com/vercel/next.js/discussions/30174).\n\n## Possible Ways to Fix It\n\nIf you want to use SWC despite the presence of a `.babelrc` file you can force it in your `next.config.js` file.\n\n```js filename=\"next.config.js\"\nmodule.exports = {\n  experimental: {\n    forceSwcTransforms: true,\n  },\n}\n```\n"},{"path":"errors/google-font-preconnect.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/google-font-preconnect.mdx","prodUrl":"https://nextjs.org/docs/messages/google-font-preconnect","sha":"1d0326763aeb0e18c221f4a6baef18c6f483823a","size":1008,"content":"---\ntitle: Google Font Preconnect\n---\n\n> Next.js automatically adds `<link rel=\"preconnect\" />` after version `12.0.1`.\n\n> Ensure `preconnect` is used with Google Fonts.\n\n## Why This Error Occurred\n\nA preconnect resource hint was not used with a request to the Google Fonts domain. Adding `preconnect` is recommended to initiate an early connection to the origin.\n\n## Possible Ways to Fix It\n\nAdd `rel=\"preconnect\"` to the Google Font domain `<link>` tag:\n\n```jsx filename=\"pages/_document.js\"\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n```\n\nNote: a **separate** link with `dns-prefetch` can be used as a fallback for browsers that don't support `preconnect` although this is not required.\n\n## Useful Links\n\n- [Preconnect to required origins](https://web.dev/uses-rel-preconnect/)\n- [Preconnect and dns-prefetch](https://web.dev/preconnect-and-dns-prefetch/#resolve-domain-name-early-with-reldns-prefetch)\n- [Next.js Font Optimization](/docs/pages/building-your-application/optimizing/fonts)\n"},{"path":"errors/get-initial-props-export.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/get-initial-props-export.mdx","prodUrl":"https://nextjs.org/docs/messages/get-initial-props-export","sha":"0ba52a4d91ca98e7d83ca523a8c7c68f9017e14f","size":508,"content":"---\ntitle: '`getInitialProps` Export Warning'\n---\n\n#### Why This Warning Occurred\n\nYou attempted to statically export your application via `output: 'export'` or `next export`, however, one or more of your pages uses `getInitialProps`.\n\nNext.js discourages you to use `getInitialProps` in this scenario.\n\n## Possible Ways to Fix It\n\nUse `getStaticProps` instead for proper SSG support.\n\n## Useful Links\n\n- [`getStaticProps` Documentation](/docs/pages/building-your-application/data-fetching/get-static-props)\n"},{"path":"errors/no-script-tags-in-head-component.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-script-tags-in-head-component.mdx","prodUrl":"https://nextjs.org/docs/messages/no-script-tags-in-head-component","sha":"a384949b446ec8db80016bb93ce8e695e286fc93","size":1033,"content":"---\ntitle: No Script Tags In Head Component\n---\n\n## Why This Error Occurred\n\nA `<script>` tag was added using the `next/head` component.\n\nFor the best performance, we recommend using `next/script`. Using `next/script` also ensures compatibility with React Suspense and streaming server-rendering.\n\n## Possible Ways to Fix It\n\n#### Script Component\n\nThe **Script component**, [`next/script`](/docs/pages/api-reference/components/script), allows you to optimally load third-party scripts anywhere in your Next.js application. It is an extension of the HTML `<script>` element and enables you to choose between multiple loading strategies to fit your use case.\n\n```jsx filename=\"pages/dashboard.js\"\nimport Script from 'next/script'\n\nexport default function Dashboard() {\n  return (\n    <>\n      <Script src=\"https://example.com/script.js\" />\n    </>\n  )\n}\n```\n\n## Useful Links\n\n- [Optimizing Scripts](/docs/pages/building-your-application/optimizing/scripts)\n- [`next/script` API Reference](/docs/pages/api-reference/components/script)\n"},{"path":"errors/react-version.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/react-version.mdx","prodUrl":"https://nextjs.org/docs/messages/react-version","sha":"80603e43a2faf16da230480910237cc46db4eebe","size":1385,"content":"---\ntitle: Minimum React Version\n---\n\n## Why This Error Occurred\n\nYour project is using an old version of `react` or `react-dom` that does not\nmeet the suggested minimum version requirement.\n\nNext.js suggests using, at a minimum, `react@18.2.0` and `react-dom@18.2.0`.\nOlder versions of `react` and `react-dom` do work with Next.js, however, they do\nnot enable all of Next.js' features.\n\nFor example, the following features are not enabled with old React versions:\n\n- [Fast Refresh](/docs/architecture/fast-refresh): instantly\n  view edits to your app without losing component state\n- Component stack trace in development: see the component tree that lead up to\n  an error\n- Hydration mismatch warnings: trace down discrepancies in your React tree that\n  cause performance problems\n\nThis list is not exhaustive, but illustrative in the value of upgrading React!\n\n## Possible Ways to Fix It\n\n**Via npm**\n\n```bash filename=\"Terminal\"\nnpm upgrade react@latest react-dom@latest\n```\n\n**Via Yarn**\n\n```bash filename=\"Terminal\"\nyarn add react@latest react-dom@latest\n```\n\n**Manually** Open your `package.json` and upgrade `react` and `react-dom`:\n\n```json filename=\"package.json\"\n{\n  \"dependencies\": {\n    \"react\": \"^18.2.0\",\n    \"react-dom\": \"^18.2.0\"\n  }\n}\n```\n\n## Useful Links\n\n- [Fast Refresh blog post](/blog/next-9-4#fast-refresh)\n- [Fast Refresh docs](/docs/architecture/fast-refresh)\n"},{"path":"errors/link-no-children.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/link-no-children.mdx","prodUrl":"https://nextjs.org/docs/messages/link-no-children","sha":"99277f531ba43c4149395e012693b89a045275ab","size":751,"content":"---\ntitle: 'No children were passed to `<Link>`'\n---\n\n## Why This Error Occurred\n\nIn your application code, `next/link` was used without passing a child:\n\nFor example:\n\n```jsx filename=\"pages/index.js\"\nimport Link from 'next/link'\n\nexport default function Home() {\n  return (\n    <>\n      <Link href=\"/about\" legacyBehavior></Link>\n      // or\n      <Link href=\"/about\" legacyBehavior />\n    </>\n  )\n}\n```\n\n## Possible Ways to Fix It\n\nMake sure one child is used when using `<Link>`:\n\n```jsx filename=\"pages/index.js\"\nimport Link from 'next/link'\n\nexport default function Home() {\n  return (\n    <>\n      <Link href=\"/about\">To About</Link>\n      // or\n      <Link href=\"/about\" legacyBehavior>\n        <a>To About</a>\n      </Link>\n    </>\n  )\n}\n```\n"},{"path":"errors/no-page-custom-font.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-page-custom-font.mdx","prodUrl":"https://nextjs.org/docs/messages/no-page-custom-font","sha":"058ffb30ce2a7801b70f5475786b7eb7b661e3f7","size":1740,"content":"---\ntitle: No Page Custom Font\n---\n\n> Prevent page-only custom fonts.\n\n## Why This Error Occurred\n\n- The custom font you're adding was added to a page - this only adds the font to the specific page and not the entire application.\n- The custom font you're adding was added to a separate component within `pages/_document.js` - this disables automatic font optimization.\n\n## Possible Ways to Fix It\n\nCreate the file `./pages/_document.js` and add the font to a custom Document:\n\n```jsx filename=\"pages/_document.js\"\nimport Document, { Html, Head, Main, NextScript } from 'next/document'\n\nclass MyDocument extends Document {\n  render() {\n    return (\n      <Html>\n        <Head>\n          <link\n            href=\"https://fonts.googleapis.com/css2?family=Inter&display=optional\"\n            rel=\"stylesheet\"\n          />\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    )\n  }\n}\n\nexport default MyDocument\n```\n\nOr as a function component:\n\n```jsx filename=\"pages/_document.js\"\nimport { Html, Head, Main, NextScript } from 'next/document'\n\nexport default function Document() {\n  return (\n    <Html>\n      <Head>\n        <link\n          href=\"https://fonts.googleapis.com/css2?family=Inter&display=optional\"\n          rel=\"stylesheet\"\n        />\n      </Head>\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  )\n}\n```\n\n### When Not To Use It\n\nIf you have a reason to only load a font for a particular page or don't care about font optimization, then you can disable this rule.\n\n## Useful Links\n\n- [Custom Document](/docs/pages/building-your-application/routing/custom-document)\n- [Font Optimization](/docs/pages/building-your-application/optimizing/fonts)\n"},{"path":"errors/href-interpolation-failed.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/href-interpolation-failed.mdx","prodUrl":"https://nextjs.org/docs/messages/href-interpolation-failed","sha":"73e36fdb34d4d8b49c2f2934f2944615adad9b1c","size":1451,"content":"---\ntitle: '`href` Interpolation Failed'\n---\n\n## Why This Error Occurred\n\nSomewhere you are utilizing the `next/link` component, `Router#push`, or `Router#replace` with `href` interpolation to build dynamic routes but did not provide all of the needed dynamic route params to properly interpolate the `href`.\n\nNote: this error will only show when the `next/link` component is clicked not when only rendered.\n\n**Invalid `href` interpolation**\n\n```jsx filename=\"blog-link.js\"\nimport Link from 'next/link'\n\nexport default function BlogLink() {\n  return (\n    <Link\n      href={{\n        pathname: '/blog/[post]/[comment]',\n        query: { post: 'post-1' },\n      }}\n    >\n      <a>Invalid link</a>\n    </Link>\n  )\n}\n```\n\n**Valid `href` interpolation**\n\n```jsx filename=\"blog-link.js\"\nimport Link from 'next/link'\n\nexport default function BlogLink() {\n  return (\n    <Link\n      href={{\n        pathname: '/blog/[post]/[comment]',\n        query: { post: 'post-1', comment: 'comment-1' },\n      }}\n    >\n      <a>Valid link</a>\n    </Link>\n  )\n}\n```\n\n## Possible Ways to Fix It\n\nLook for any usage of the `next/link` component, `Router#push`, or `Router#replace` and make sure that the provided `href` has all needed dynamic params in the query.\n\n## Useful Links\n\n- [Routing section in Documentation](/docs/pages/building-your-application/routing)\n- [Dynamic routing section in Documentation](/docs/pages/building-your-application/routing/dynamic-routes)\n"},{"path":"errors/duplicate-sass.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/duplicate-sass.mdx","prodUrl":"https://nextjs.org/docs/messages/duplicate-sass","sha":"d339589a18720b37dcc8f545a92e05d81655aae6","size":849,"content":"---\ntitle: Duplicate Sass Dependencies\n---\n\n## Why This Error Occurred\n\nYour project has a direct dependency on both `sass` and `node-sass`, two\ndifferent packages that both compile Sass files!\n\nNext.js will only use one of these, so it is suggested that you remove one or the\nother.\n\n## Possible Ways to Fix It\n\nThe `sass` package is a modern implementation of Sass in JavaScript that\nsupports all the new features and does not require any native dependencies.\n\nSince `sass` is now the canonical implementation, we suggest removing the older\n`node-sass` package, which should speed up your builds and project install time.\n\n**Via npm**\n\n```bash filename=\"Terminal\"\nnpm uninstall node-sass\n```\n\n**Via Yarn**\n\n```bash filename=\"Terminal\"\nyarn remove node-sass\n```\n\n## Useful Links\n\n- [`sass` package documentation](https://github.com/sass/dart-sass)\n"},{"path":"errors/sharp-version-avif.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/sharp-version-avif.mdx","prodUrl":"https://nextjs.org/docs/messages/sharp-version-avif","sha":"ba77a84c7d7f5f457aff3c709715809ca1399acb","size":1420,"content":"---\ntitle: Sharp Version Does Not Support AVIF\n---\n\n## Why This Error Occurred\n\nThe `next/image` component's default loader uses [`sharp`](https://www.npmjs.com/package/sharp) if its installed.\n\nYou are seeing this error because you have an outdated version of [`sharp`](https://www.npmjs.com/package/sharp) installed that does not support the AVIF image format.\n\nAVIF support was added to [`sharp`](https://www.npmjs.com/package/sharp) in version 0.27.0 (December 2020) so your installed version is likely older.\n\n## Possible Ways to Fix It\n\n- Install the latest version of `sharp` by running `npm i sharp@latest` in your project directory\n- If you're using the `NEXT_SHARP_PATH` environment variable, then update the `sharp` install referenced in that path, for example `cd \"$NEXT_SHARP_PATH/../\" && npm i sharp@latest`\n- If you cannot upgrade `sharp`, you can instead disable AVIF by configuring [`formats`](/docs/pages/api-reference/components/image#formats) in your `next.config.js`\n\nAfter choosing an option above, reboot the server by running either `next dev` or `next start` for development or production respectively.\n\n> Note: This is not necessary for Vercel deployments, since `sharp` is installed automatically for you.\n\n## Useful Links\n\n- [Image Optimization Documentation](/docs/pages/building-your-application/optimizing/images)\n- [`next/image` Documentation](/docs/pages/api-reference/components/image)\n"},{"path":"errors/node-module-in-edge-runtime.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/node-module-in-edge-runtime.mdx","prodUrl":"https://nextjs.org/docs/messages/node-module-in-edge-runtime","sha":"8cacdd6771707cd99f962293c6828acd72f1a3f4","size":1087,"content":"---\ntitle: Using Node.js Modules in Edge Runtime\n---\n\n## Why This Error Occurred\n\nThe code in your [Middleware](/docs/pages/building-your-application/routing/middleware) or your [Edge API Routes](/docs/pages/building-your-application/routing/api-routes) is using a feature from Node.js runtime.\n\nHowever, the Edge Runtime does not support [Node.js APIs and globals](/docs/pages/api-reference/edge#unsupported-apis).\n\n## Possible Ways to Fix It\n\nWhen running Next.js locally with `next dev`, your application will show in the console, and in your browser, which file is importing and using an unsupported module. This module must be avoided: either by not importing it, or by replacing it with a polyfill.\n\nFor example, you might replace the Node.js `crypto` module with the [Web Crypto API](https://developer.mozilla.org/docs/Web/API/Web_Crypto_API).\n\n## Useful Links\n\n- [Edge Runtime Supported APIs](/docs/pages/api-reference/edge)\n- [Next.js Middleware](/docs/pages/building-your-application/routing/middleware)\n- [JWT Example](https://vercel.com/templates/next.js/jwt-authentication)\n"},{"path":"errors/react-client-hook-in-server-component.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/react-client-hook-in-server-component.mdx","prodUrl":"https://nextjs.org/docs/messages/react-client-hook-in-server-component","sha":"332045f01f12d151069ca2a0edff50bbe9a8000e","size":809,"content":"---\ntitle: React client hook in Server Component\n---\n\n## Why This Error Occurred\n\nYou are using a React client hook in a Server Component.\n\n## Possible Ways to Fix It\n\nMark the component using the hook as a Client Component by adding `'use client'` at the top of the file.\n\n##### Before\n\n```jsx filename=\"app/example.js\"\nimport { useEffect } from 'react'\n\nexport default function Example() {\n  useEffect(() => {\n    console.log('in useEffect')\n  })\n  return <p>Hello world</p>\n}\n```\n\n##### After\n\n```jsx filename=\"app/example.js\"\n'use client'\n\nimport { useEffect } from 'react'\n\nexport default function Example() {\n  useEffect(() => {\n    console.log('in useEffect')\n  })\n  return <p>Hello world</p>\n}\n```\n\n## Useful Links\n\n[Server Components](/docs/app/building-your-application/rendering/server-components)\n"},{"path":"errors/next-head-count-missing.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/next-head-count-missing.mdx","prodUrl":"https://nextjs.org/docs/messages/next-head-count-missing","sha":"bbed3038350dcff63d2e7571dae819a0816954bc","size":476,"content":"---\ntitle: '`next-head-count` is missing'\n---\n\n## Why This Error Occurred\n\nYou have a custom `pages/_document.js` that doesn't have the components required for Next.js to render correctly.\n\n## Possible Ways to Fix It\n\nEnsure that your `_document.js` is importing and rendering all of the [required components](/docs/pages/building-your-application/routing/custom-document).\n\nIn this case you are most likely not rendering the `<Head>` component imported from `next/document`.\n"},{"path":"errors/sharp-missing-in-production.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/sharp-missing-in-production.mdx","prodUrl":"https://nextjs.org/docs/messages/sharp-missing-in-production","sha":"41de0bafceb7c996e5d3bbce5600de4848e6210c","size":1914,"content":"---\ntitle: Sharp Missing In Production\n---\n\n## Why This Error Occurred\n\nThe `next/image` component's default loader uses [`squoosh`](https://www.npmjs.com/package/@squoosh/lib) because it is quick to install and suitable for a development environment.\n\n- For a production environment using `next start`, it is strongly recommended you install [`sharp`](https://www.npmjs.com/package/sharp).\n\nYou are seeing this error because Image Optimization in production mode (`next start`) was detected.\n\n- For a production environment using `output: \"standalone\"`, you must install [`sharp`](https://www.npmjs.com/package/sharp).\n\nYou are seeing this error because Image Optimization in standalone mode (`output: \"standalone\"`) was detected.\n\n## Possible Ways to Fix It\n\n- Install `sharp` by running one of the following commands in your project directory:\n\n```bash filename=\"Terminal\"\nnpm i sharp\n```\n\n```bash filename=\"Terminal\"\nyarn add sharp\n```\n\n```bash filename=\"Terminal\"\npnpm add sharp\n```\n\n```bash filename=\"Terminal\"\nbun add sharp\n```\n\nThen, build your project with `next build`. Finally, restart the server with either `next start` for production mode or `node .next/standalone/server.js` for standalone mode.\n\n- If `sharp` is already installed but can't be resolved, set the `NEXT_SHARP_PATH` environment variable such as `export NEXT_SHARP_PATH=/tmp/node_modules/sharp`. Then, build your project with `next build`. Finally, restart the server with either `next start` for production mode or `node .next/standalone/server.js` for standalone mode.\n\n> Note: This is not necessary for Vercel deployments, since `sharp` is installed automatically for you.\n\n## Useful Links\n\n- [Image Optimization Documentation](/docs/pages/building-your-application/optimizing/images)\n- [`next/image` Documentation](/docs/pages/api-reference/components/image)\n- [Output File Tracing](/docs/pages/api-reference/next-config-js/output)\n"},{"path":"errors/invalid-resolve-alias.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-resolve-alias.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-resolve-alias","sha":"c1286432eb0112530b2ccdb6529925ea277dbf0c","size":659,"content":"---\ntitle: 'Invalid `webpack` resolve alias'\n---\n\n## Why This Error Occurred\n\nWhen overriding `config.resolve.alias` incorrectly in `next.config.js` webpack will throw an error because private-next-pages is not defined.\n\n## Possible Ways to Fix It\n\nThis is not a bug in Next.js, it's related to the user adding a custom webpack(config) config to next.config.js and overriding internals by not applying Next.js' aliases. Solution would be:\n\n```js filename=\"next.config.js\"\nwebpack(config) {\n  config.resolve.alias = {\n    ...config.resolve.alias,\n    // your aliases\n  }\n}\n```\n\n## Useful Links\n\n- [Related issue](https://github.com/vercel/next.js/issues/6681)\n"},{"path":"errors/render-no-starting-slash.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/render-no-starting-slash.mdx","prodUrl":"https://nextjs.org/docs/messages/render-no-starting-slash","sha":"251e5ff541121e12cea339e6e2ff1136df35b9c8","size":333,"content":"---\ntitle: Rendering Without Starting Slash\n---\n\n## Why This Error Occurred\n\nWhen calling `app.render(req, res, path)` the `path` did not begin with a slash (`/`). This causes unexpected behavior and should be corrected.\n\n## Possible Ways to Fix It\n\nMake sure the `path` being passed to `app.render` always starts with a slash (`/`)\n"},{"path":"errors/middleware-user-agent.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/middleware-user-agent.mdx","prodUrl":"https://nextjs.org/docs/messages/middleware-user-agent","sha":"ec77b8ef395dd8e5b07a2e326599a96d582f7cd7","size":993,"content":"---\ntitle: Removed req.ua from Middleware API\n---\n\n## Why This Error Occurred\n\nYour middleware is interacting with `req.ua` and this feature needs to opt-in.\n\n```ts filename=\"middleware.ts\"\nimport { NextRequest, NextResponse } from 'next/server'\n\nexport function middleware(request: NextRequest) {\n  const url = request.nextUrl\n  const viewport = request.ua.device.type === 'mobile' ? 'mobile' : 'desktop'\n  url.searchParams.set('viewport', viewport)\n  return NextResponse.rewrite(url)\n}\n```\n\n## Possible Ways to Fix It\n\nTo parse the user agent, import `userAgent` function from `next/server` and give it your request:\n\n```ts filename=\"middleware.ts\"\nimport { NextRequest, NextResponse, userAgent } from 'next/server'\n\nexport function middleware(request: NextRequest) {\n  const url = request.nextUrl\n  const { device } = userAgent(request)\n  const viewport = device.type === 'mobile' ? 'mobile' : 'desktop'\n  url.searchParams.set('viewport', viewport)\n  return NextResponse.rewrite(url)\n}\n```\n"},{"path":"errors/no-on-app-updated-hook.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-on-app-updated-hook.mdx","prodUrl":"https://nextjs.org/docs/messages/no-on-app-updated-hook","sha":"788ce06ce93be5cadcdb0897d9fb16dbb0a2150e","size":1226,"content":"---\ntitle: '`Router.onAppUpdated` has been removed'\n---\n\nDue to [this bug fix](https://github.com/vercel/next.js/pull/3849), we had to remove the `Router.onAppUpdated` hook. But the default functionality of this feature is still in effect.\n\nWe use this hook to detect a new app deployment when switching pages and act accordingly.\n\nAlthough there are many things you can do in this hook, it's often used to navigate the page via the server as shown below:\n\n```js filename=\"example.js\"\nRouter.onAppUpdated = function (nextRoute) {\n  location.href = nextRoute\n}\n```\n\nIn this hook, you can't wait for a network request or a promise to get resolved. And you can't block the page navigation. So, the things you can do is limited.\n\nOne real use of this hook is to persist your application state to local-storage before the page navigation. For that, you can use the [`window.onbeforeunload`](https://developer.mozilla.org/docs/Web/API/WindowEventHandlers/onbeforeunload) hook instead.\n\nThis is code for that:\n\n```js filename=\"example.js\"\nwindow.onbeforeunload = function (e) {\n  // Get the application state (usually from a store like Redux)\n  const appState = {}\n  localStorage.setItem('app-state', JSON.stringify(appState))\n}\n```\n"},{"path":"errors/promise-in-next-config.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/promise-in-next-config.mdx","prodUrl":"https://nextjs.org/docs/messages/promise-in-next-config","sha":"b904a763906805dd128c135dce7785d6c4d321cf","size":592,"content":"---\ntitle: Promise In Next Config\n---\n\n## Why This Error Occurred\n\nThe webpack function in `next.config.js` returned a promise which is not supported in Next.js. For example, below is not supported:\n\n```js filename=\"next.config.js\"\nmodule.exports = {\n  webpack: async function (config) {\n    return config\n  },\n}\n```\n\n## Possible Ways to Fix It\n\nIn Next.js versions above `12.0.10`, `module.exports = async () =>` is supported.\n\nFor older versions, you can check your `next.config.js` for `async` or `return Promise`.\n\nPotentially a plugin is returning a `Promise` from the webpack function.\n"},{"path":"errors/postcss-shape.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/postcss-shape.mdx","prodUrl":"https://nextjs.org/docs/messages/postcss-shape","sha":"cbeeec5af935799c9dcc8583e229e434c8672cd6","size":2434,"content":"---\ntitle: Invalid PostCSS Configuration\n---\n\n## Why This Error Occurred\n\nPostCSS configuration was provided in an unsupported shape.\n\n## Possible Ways to Fix It\n\nPostCSS configuration must be defined in the following shape:\n\n```js filename=\"postcss.config.js\"\nmodule.exports = {\n  plugins: [\n    // A plugin that does not require configuration:\n    'simple-plugin-example',\n\n    // A plugin which needs a configuration object:\n    [\n      'plugin-with-configuration',\n      {\n        optionA: '...',\n      },\n    ],\n\n    // A plugin that is toggled on or off based on environment:\n    [\n      'plugin-toggled',\n      process.env.NODE_ENV === 'production'\n        ? {\n            optionA: '...',\n          }\n        : false,\n    ],\n\n    // Boolean expressions are also valid.\n    // `true` enables the plugin, `false` disables the plugin:\n    ['plugin-toggled-2', true /* a === b, etc */],\n  ],\n}\n```\n\nYou can [read more about configuring PostCSS in Next.js here](/docs/pages/building-your-application/configuring/post-css).\n\n#### Common Errors\n\n**Before: plugin is require()'d**\n\n```js filename=\"postcss.config.js\"\nconst pluginA = require('postcss-plugin-a')\nmodule.exports = {\n  plugins: [require('postcss-plugin'), pluginA],\n}\n```\n\n**After**\n\n```js filename=\"postcss.config.js\"\nmodule.exports = {\n  plugins: ['postcss-plugin', 'postcss-plugin-a'],\n}\n```\n\n---\n\n**Before: plugin is instantiated with configuration**\n\n```js filename=\"postcss.config.js\"\nmodule.exports = {\n  plugins: [\n    require('postcss-plugin')({\n      optionA: '...',\n    }),\n  ],\n}\n```\n\n**After**\n\n```js filename=\"postcss.config.js\"\nmodule.exports = {\n  plugins: [\n    // Pay attention to this nested array. The first index is the plugin name,\n    // the second index is the configuration.\n    [\n      'postcss-plugin',\n      {\n        optionA: '...',\n      },\n    ],\n  ],\n}\n```\n\n---\n\n**Before: plugin is missing configuration**\n\n```js filename=\"postcss.config.js\"\nmodule.exports = {\n  plugins: [\n    [\n      'postcss-plugin-1',\n      {\n        optionA: '...',\n      },\n    ],\n    // This single-entry array is detected as misconfigured because it's\n    // missing the second element. To fix, unwrap the value.\n    ['postcss-plugin-2'],\n  ],\n}\n```\n\n**After**\n\n```js filename=\"postcss.config.js\"\nmodule.exports = {\n  plugins: [\n    [\n      'postcss-plugin-1',\n      {\n        optionA: '...',\n      },\n    ],\n    // Only string:\n    'postcss-plugin-2',\n  ],\n}\n```\n"},{"path":"errors/export-no-custom-routes.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/export-no-custom-routes.mdx","prodUrl":"https://nextjs.org/docs/messages/export-no-custom-routes","sha":"7fc0d4c61624f2cb8b63aa7093bc45e25ac6d028","size":988,"content":"---\ntitle: Export Custom Routes\n---\n\n## Why This Error Occurred\n\nIn your `next.config.js` you defined `rewrites`, `redirects`, or `headers` along with `output: 'export'` (or you ran `next export`).\n\nThese configs do not apply when exporting your Next.js application manually.\n\n## Possible Ways to Fix It\n\n- Remove `rewrites`, `redirects`, and `headers` from your `next.config.js` to disable these features or\n- Remove `output: 'export'` (or `next export`) in favor of [`next start`](/docs/pages/api-reference/next-cli#production) to run a production server\n\n## Useful Links\n\n- [Deployment Documentation](/docs/pages/building-your-application/deploying)\n- [`output: 'export'` Documentation](/docs/pages/building-your-application/deploying/static-exports)\n- [Rewrites Documentation](/docs/pages/api-reference/next-config-js/rewrites)\n- [Redirects Documentation](/docs/pages/api-reference/next-config-js/redirects)\n- [Headers Documentation](/docs/pages/api-reference/next-config-js/headers)\n"},{"path":"errors/missing-root-layout-tags.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/missing-root-layout-tags.mdx","prodUrl":"https://nextjs.org/docs/messages/missing-root-layout-tags","sha":"82feae6993e59550c3b9f8f7ed34addfcea46745","size":650,"content":"---\ntitle: Missing Root Layout tags\n---\n\n## ``\n\n#### Why This Error Occurred\n\nYou forgot to define the `<html>` and/or `<body>` tags in your Root Layout.\n\n#### Possible Ways to Fix It\n\nTo fix this error, make sure that both `<html>` and `<body>` are present in your Root Layout.\n\n```diff filename=\"app/layout.tsx\"\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n-  return children\n+  return (\n+    <html>\n+      <body>\n+        {children}\n+      </body>\n+    </html>\n+  )\n}\n```\n\n### Useful Links\n\n- [Root Layout](https://nextjs.org/docs/app/building-your-application/routing/layouts-and-templates#root-layout-required)\n"},{"path":"errors/page-data-collection-timeout.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/page-data-collection-timeout.mdx","prodUrl":"https://nextjs.org/docs/messages/page-data-collection-timeout","sha":"44607ba4235d25f4915baedf540af5e8709f8837","size":910,"content":"---\ntitle: Collecting page data timed out after multiple attempts\n---\n\n## Why This Error Occurred\n\nNext.js tries to restart the worker pool of the page data collection when no progress happens for a while, to avoid hanging builds.\n\nWhen restarted it will retry all uncompleted jobs, but if a job was unsuccessfully attempted multiple times, this will lead to an error.\n\n## Possible Ways to Fix It\n\n- Make sure that there is no infinite loop during execution.\n- Make sure all Promises in `getStaticPaths` `resolve` or `reject` correctly.\n- Avoid very long timeouts for network requests.\n- Increase the timeout by changing the `config.staticPageGenerationTimeout` configuration option (default `60` in seconds).\n\n## Useful Links\n\n- [`getStaticPaths`](/docs/pages/building-your-application/data-fetching/get-static-paths)\n- [`getStaticProps`](/docs/pages/building-your-application/data-fetching/get-static-props)\n"},{"path":"errors/invalid-redirect-gssp.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/invalid-redirect-gssp.mdx","prodUrl":"https://nextjs.org/docs/messages/invalid-redirect-gssp","sha":"3b10ebb5a929bb50148bc68ca54b50be25c6f65e","size":1526,"content":"---\ntitle: 'Invalid Redirect `getStaticProps` / `getServerSideProps`'\n---\n\n## Why This Error Occurred\n\nThe `redirect` value returned from your `getStaticProps` or `getServerSideProps` function had invalid values.\n\n## Possible Ways to Fix It\n\nMake sure you return the proper values for the `redirect` value.\n\n```tsx filename=\"pages/index.tsx\" switcher\nimport type { InferGetStaticPropsType, GetStaticProps } from 'next'\n\ntype Repo = {\n  name: string\n  stargazers_count: number\n}\n\nexport const getStaticProps = (async (context) => {\n  const res = await fetch('https://api.github.com/repos/vercel/next.js')\n  const repo = await res.json()\n\n  if (!repo) {\n    return {\n      redirect: {\n        permanent: false, // or true\n        destination: '/404',\n      },\n    }\n  }\n\n  return { props: { repo } }\n}) satisfies GetStaticProps<{\n  repo: Repo\n}>\n\nexport default function Page({\n  repo,\n}: InferGetStaticPropsType<typeof getStaticProps>) {\n  return repo.stargazers_count\n}\n```\n\n```jsx filename=\"pages/index.js\" switcher\nexport async function getStaticPaths() {\n  const res = await fetch('https://api.github.com/repos/vercel/next.js')\n  const repo = await res.json()\n\n  if (!repo) {\n    return {\n      redirect: {\n        permanent: false, // or true\n        destination: '/404',\n      },\n    }\n  }\n\n  return { props: { repo } }\n}\n\nexport default function Page({ repo }) {\n  return repo.stargazers_count\n}\n```\n\n## Useful Links\n\n- [Data Fetching Documentation](/docs/pages/building-your-application/data-fetching/get-static-props)\n"},{"path":"errors/no-router-instance.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-router-instance.mdx","prodUrl":"https://nextjs.org/docs/messages/no-router-instance","sha":"ce63333ff61840080c3c114dba22248b48521220","size":463,"content":"---\ntitle: No Router Instance\n---\n\n## Why This Error Occurred\n\nDuring Pre-rendering (SSR or SSG) you tried to access a router method `push`, `replace`, `back`, which is not supported.\n\n## Possible Ways to Fix It\n\nIn a function Component you can move the code into the `useEffect` hook.\n\nIn a class Component, move any calls to router methods to the `componentDidMount` lifecycle method.\n\nThis way the calls to the router methods are only executed in the browser.\n"},{"path":"errors/missing-document-component.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/missing-document-component.mdx","prodUrl":"https://nextjs.org/docs/messages/missing-document-component","sha":"48f062a751e509547f9ce0196d97dc44b7090c4e","size":754,"content":"---\ntitle: Missing Document Components\n---\n\n## Why This Error Occurred\n\nIn your custom `pages/_document` an expected sub-component was not rendered.\n\n## Possible Ways to Fix It\n\nMake sure to import and render all of the expected `Document` components:\n\n- `<Html />`\n- `<Head />`\n- `<Main />`\n- `<NextScript />`\n\nFor example:\n\n```tsx filename=\"pages/_document.tsx\"\nimport Document, { Html, Head, Main, NextScript } from 'next/document'\n\nexport default class MyDocument extends Document {\n  render() {\n    return (\n      <Html>\n        <Head />\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    )\n  }\n}\n```\n\n## Useful Links\n\n- [Custom Document Docs](/docs/pages/building-your-application/routing/custom-document)\n"},{"path":"errors/next-dynamic-api-wrong-context.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/next-dynamic-api-wrong-context.mdx","prodUrl":"https://nextjs.org/docs/messages/next-dynamic-api-wrong-context","sha":"064baba8828e006b9f54177bb78d1a3cf348a6b1","size":1256,"content":"---\ntitle: Dynamic API was called outside request\n---\n\n#### Why This Error Occurred\n\nA Dynamic API was called outside a request scope. (Eg.: Global scope).\n\nNote that Dynamic APIs could have been called deep inside other modules/functions (eg.: third-party libraries) that are not immediately visible.\n\n#### Possible Ways to Fix It\n\nMake sure that all Dynamic API calls happen in a request scope.\n\nExample:\n\n```diff\n// app/page.ts\nimport { cookies } from 'next/headers'\n\n- const cookieStore  = cookies()\nexport default function Page() {\n+ const cookieStore = cookies()\n  return ...\n}\n```\n\n```diff\n// app/foo/route.ts\nimport { headers } from 'next/headers'\n\n- const headersList = headers()\nexport async function GET() {\n+ const headersList = headers()\n  return ...\n}\n```\n\n### Useful Links\n\n- [`headers()` function](https://nextjs.org/docs/app/api-reference/functions/headers)\n- [`cookies()` function](https://nextjs.org/docs/app/api-reference/functions/cookies)\n- [`draftMode()` function](https://nextjs.org/docs/app/api-reference/functions/draft-mode)\n- [`unstable_noStore()` function](https://nextjs.org/docs/app/api-reference/functions/unstable_noStore)\n- [`unstable_cache()` function](https://nextjs.org/docs/app/api-reference/functions/unstable_cache)\n"},{"path":"errors/middleware-upgrade-guide.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/middleware-upgrade-guide.mdx","prodUrl":"https://nextjs.org/docs/messages/middleware-upgrade-guide","sha":"47213611ec651a57b7ee2d32f811eb37d2cc8707","size":14817,"content":"---\ntitle: Middleware Upgrade Guide\n---\n\nAs we work on improving Middleware for General Availability (GA), we've made some changes to the Middleware APIs (and how you define Middleware in your application) based on your feedback.\n\nThis upgrade guide will help you understand the changes, why they were made, and how to migrate your existing Middleware to the new API. The guide is for Next.js developers who:\n\n- Currently use the beta Next.js Middleware features\n- Choose to upgrade to the next stable version of Next.js (`v12.2`)\n\nYou can start upgrading your Middleware usage today with the latest release (`npm i next@latest`).\n\n> **Note**: These changes described in this guide are included in Next.js `12.2`. You can keep your current site structure, including nested Middleware, until you move to `12.2` (or a `canary` build of Next.js).\n\nIf you have ESLint configured, you will need to run `npm i eslint-config-next@latest --save-dev` to upgrade your ESLint configuration to ensure the same version is being used as the Next.js version. You might also need to restart VSCode for the changes to take effect.\n\n## Using Next.js Middleware on Vercel\n\nIf you're using Next.js on Vercel, your existing deploys using Middleware will continue to work, and you can continue to deploy your site using Middleware. When you upgrade your site to the next stable version of Next.js (`v12.2`), you will need to follow this upgrade guide to update your Middleware.\n\n## Breaking changes\n\n1. [No Nested Middleware](#no-nested-middleware)\n2. [No Response Body](#no-response-body)\n3. [Cookies API Revamped](#cookies-api-revamped)\n4. [New User-Agent Helper](#new-user-agent-helper)\n5. [No More Page Match Data](#no-more-page-match-data)\n6. [Executing Middleware on Internal Next.js Requests](#executing-middleware-on-internal-nextjs-requests)\n\n## No Nested Middleware\n\n### Summary of changes\n\n- Define a single Middleware file next to your `pages` folder\n- No need to prefix the file with an underscore\n- A custom matcher can be used to define matching routes using an exported config object\n\n### Explanation\n\nPreviously, you could create a `_middleware.ts` file under the `pages` directory at any level. Middleware execution was based on the file path where it was created.\n\nBased on customer feedback, we have replaced this API with a single root Middleware, which provides the following improvements:\n\n- **Faster execution with lower latency**: With nested Middleware, a single request could invoke multiple Middleware functions. A single Middleware means a single function execution, which is more efficient.\n- **Less expensive**: Middleware usage is billed per invocation. Using nested Middleware, a single request could invoke multiple Middleware functions, meaning multiple Middleware charges per request. A single Middleware means a single invocation per request and is more cost effective.\n- **Middleware can conveniently filter on things besides routes**: With nested Middleware, the Middleware files were located in the `pages` directory and Middleware was executed based on request paths. By moving to a single root Middleware, you can still execute code based on request paths, but you can now more conveniently execute Middleware based on other conditions, like `cookies` or the presence of a request header.\n- **Deterministic execution ordering**: With nested Middleware, a single request could match multiple Middleware functions. For example, a request to `/dashboard/users/*` would invoke Middleware defined in both `/dashboard/users/_middleware.ts` and `/dashboard/_middleware.js`. However, the execution order is difficult to reason about. Moving to a single, root Middleware more explicitly defines execution order.\n- **Supports Next.js Layouts (RFC)**: Moving to a single, root Middleware helps support the new [Layouts (RFC) in Next.js](/blog/layouts-rfc).\n\n### How to upgrade\n\nYou should declare **one single Middleware file** in your application, which should be located next to the `pages` directory and named **without** an `_` prefix. Your Middleware file can still have either a `.ts` or `.js` extension.\n\nMiddleware will be invoked for **every route in the app**, and a custom matcher can be used to define matching filters. The following is an example for a Middleware that triggers for `/about/*` and `/dashboard/:path*`, the custom matcher is defined in an exported config object:\n\n```ts filename=\"middleware.ts\"\nimport { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\n\nexport function middleware(request: NextRequest) {\n  return NextResponse.rewrite(new URL('/about-2', request.url))\n}\n\n// Supports both a single string value or an array of matchers\nexport const config = {\n  matcher: ['/about/:path*', '/dashboard/:path*'],\n}\n```\n\nThe matcher config also allows full regex so matching like negative lookaheads or character matching is supported. An example of a negative lookahead to match all except specific paths can be seen here:\n\n```ts filename=\"middleware.ts\"\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - api (API routes)\n     * - _next/static (static files)\n     * - favicon.ico (favicon file)\n     */\n    '/((?!api|_next/static|favicon.ico).*)',\n  ],\n}\n```\n\nWhile the config option is preferred since it doesn't get invoked on every request, you can also use conditional statements to only run the Middleware when it matches specific paths. One advantage of using conditionals is defining explicit ordering for when Middleware executes. The following example shows how you can merge two previously nested Middleware:\n\n```ts filename=\"middleware.ts\"\nimport type { NextRequest } from 'next/server'\n\nexport function middleware(request: NextRequest) {\n  if (request.nextUrl.pathname.startsWith('/about')) {\n    // This logic is only applied to /about\n  }\n\n  if (request.nextUrl.pathname.startsWith('/dashboard')) {\n    // This logic is only applied to /dashboard\n  }\n}\n```\n\n## No Response Body\n\n### Summary of changes\n\n- Middleware can no longer produce a response body\n- If your Middleware _does_ respond with a body, a runtime error will be thrown\n- Migrate to using `rewrite`/`redirect` to pages/APIs handling a response\n\n### Explanation\n\nTo respect the differences in client-side and server-side navigation, and to help ensure that developers do not build insecure Middleware, we are removing the ability to send response bodies in Middleware. This ensures that Middleware is only used to `rewrite`, `redirect`, or modify the incoming request (e.g. [setting cookies](#cookies-api-revamped)).\n\nThe following patterns will no longer work:\n\n```js\nnew Response('a text value')\nnew Response(streamOrBuffer)\nnew Response(JSON.stringify(obj), { headers: 'application/json' })\nNextResponse.json()\n```\n\n### How to upgrade\n\nFor cases where Middleware is used to respond (such as authorization), you should migrate to use `rewrite`/`redirect` to pages that show an authorization error, login forms, or to an API Route.\n\n#### Before\n\n```ts filename=\"pages/_middleware.ts\"\nimport { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\nimport { isAuthValid } from './lib/auth'\n\nexport function middleware(request: NextRequest) {\n  // Example function to validate auth\n  if (isAuthValid(request)) {\n    return NextResponse.next()\n  }\n\n  return NextResponse.json({ message: 'Auth required' }, { status: 401 })\n}\n```\n\n#### After\n\n```ts filename=\"middleware.ts\"\nimport { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\nimport { isAuthValid } from './lib/auth'\n\nexport function middleware(request: NextRequest) {\n  // Example function to validate auth\n  if (isAuthValid(request)) {\n    return NextResponse.next()\n  }\n\n  const loginUrl = new URL('/login', request.url)\n  loginUrl.searchParams.set('from', request.nextUrl.pathname)\n\n  return NextResponse.redirect(loginUrl)\n}\n```\n\n#### Edge API Routes\n\nIf you were previously using Middleware to forward headers to an external API, you can now use [Edge API Routes](/docs/pages/building-your-application/routing/api-routes):\n\n```ts filename=\"pages/api/proxy.ts\"\nimport { type NextRequest } from 'next/server'\n\nexport const config = {\n  runtime: 'edge',\n}\n\nexport default async function handler(req: NextRequest) {\n  const authorization = req.cookies.get('authorization')\n  return fetch('https://backend-api.com/api/protected', {\n    method: req.method,\n    headers: {\n      authorization,\n    },\n    redirect: 'manual',\n  })\n}\n```\n\n## Cookies API Revamped\n\n### Summary of changes\n\n| Added                    | Removed       |\n| ------------------------ | ------------- |\n| `cookies.set`            | `cookie`      |\n| `cookies.delete`         | `clearCookie` |\n| `cookies.getWithOptions` | `cookies`     |\n\n### Explanation\n\nBased on beta feedback, we are changing the Cookies API in `NextRequest` and `NextResponse` to align more to a `get`/`set` model. The `Cookies` API extends Map, including methods like [entries](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Map/entries) and [values](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Map/entries).\n\n### How to upgrade\n\n`NextResponse` now has a `cookies` instance with:\n\n- `cookies.delete`\n- `cookies.set`\n- `cookies.getWithOptions`\n\nAs well as other extended methods from `Map`.\n\n#### Before\n\n```javascript\n// pages/_middleware.ts\nimport { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\n\nexport function middleware(request: NextRequest) {\n  // create an instance of the class to access the public methods. This uses `next()`,\n  // you could use `redirect()` or `rewrite()` as well\n  let response = NextResponse.next()\n  // get the cookies from the request\n  let cookieFromRequest = request.cookies['my-cookie']\n  // set the `cookie`\n  response.cookie('hello', 'world')\n  // set the `cookie` with options\n  const cookieWithOptions = response.cookie('hello', 'world', {\n    path: '/',\n    maxAge: 1000 * 60 * 60 * 24 * 7,\n    httpOnly: true,\n    sameSite: 'strict',\n    domain: 'example.com',\n  })\n  // clear the `cookie`\n  response.clearCookie('hello')\n\n  return response\n}\n```\n\n#### After\n\n```ts filename=\"middleware.ts\"\nexport function middleware() {\n  const response = new NextResponse()\n\n  // set a cookie\n  response.cookies.set('vercel', 'fast')\n\n  // set another cookie with options\n  response.cookies.set('nextjs', 'awesome', { path: '/test' })\n\n  // get all the details of a cookie\n  const { value, ...options } = response.cookies.getWithOptions('vercel')\n  console.log(value) // => 'fast'\n  console.log(options) // => { name: 'vercel', Path: '/test' }\n\n  // deleting a cookie will mark it as expired\n  response.cookies.delete('vercel')\n\n  return response\n}\n```\n\n## New User-Agent Helper\n\n### Summary of changes\n\n- Accessing the user agent is no longer available on the request object\n- We've added a new `userAgent` helper to reduce Middleware size by `17kb`\n\n### Explanation\n\nTo help reduce the size of your Middleware, we have extracted the user agent from the request object and created a new helper `userAgent`.\n\nThe helper is imported from `next/server` and allows you to opt in to using the user agent. The helper gives you access to the same properties that were available from the request object.\n\n### How to upgrade\n\n- Import the `userAgent` helper from `next/server`\n- Destructure the properties you need to work with\n\n#### Before\n\n```ts filename=\"pages/_middleware.ts\"\nimport { NextRequest, NextResponse } from 'next/server'\n\nexport function middleware(request: NextRequest) {\n  const url = request.nextUrl\n  const viewport = request.ua.device.type === 'mobile' ? 'mobile' : 'desktop'\n  url.searchParams.set('viewport', viewport)\n  return NextResponse.rewrite(url)\n}\n```\n\n#### After\n\n```ts filename=\"middleware.ts\"\nimport { NextRequest, NextResponse, userAgent } from 'next/server'\n\nexport function middleware(request: NextRequest) {\n  const url = request.nextUrl\n  const { device } = userAgent(request)\n  const viewport = device.type === 'mobile' ? 'mobile' : 'desktop'\n  url.searchParams.set('viewport', viewport)\n  return NextResponse.rewrite(url)\n}\n```\n\n## No More Page Match Data\n\n### Summary of changes\n\n- Use [`URLPattern`](https://developer.mozilla.org/docs/Web/API/URLPattern) to check if a Middleware is being invoked for a certain page match\n\n### Explanation\n\nCurrently, Middleware estimates whether you are serving an asset of a Page based on the Next.js routes manifest (internal configuration). This value is surfaced through `request.page`.\n\nTo make page and asset matching more accurate, we are now using the web standard `URLPattern` API.\n\n### How to upgrade\n\nUse [`URLPattern`](https://developer.mozilla.org/docs/Web/API/URLPattern) to check if a Middleware is being invoked for a certain page match.\n\n#### Before\n\n```ts filename=\"pages/_middleware.ts\"\nimport { NextResponse } from 'next/server'\nimport type { NextRequest, NextFetchEvent } from 'next/server'\n\nexport function middleware(request: NextRequest, event: NextFetchEvent) {\n  const { params } = event.request.page\n  const { locale, slug } = params\n\n  if (locale && slug) {\n    const { search, protocol, host } = request.nextUrl\n    const url = new URL(`${protocol}//${locale}.${host}/${slug}${search}`)\n    return NextResponse.redirect(url)\n  }\n}\n```\n\n#### After\n\n```ts filename=\"middleware.ts\"\nimport { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\n\nconst PATTERNS = [\n  [\n    new URLPattern({ pathname: '/:locale/:slug' }),\n    ({ pathname }) => pathname.groups,\n  ],\n]\n\nconst params = (url) => {\n  const input = url.split('?')[0]\n  let result = {}\n\n  for (const [pattern, handler] of PATTERNS) {\n    const patternResult = pattern.exec(input)\n    if (patternResult !== null && 'pathname' in patternResult) {\n      result = handler(patternResult)\n      break\n    }\n  }\n  return result\n}\n\nexport function middleware(request: NextRequest) {\n  const { locale, slug } = params(request.url)\n\n  if (locale && slug) {\n    const { search, protocol, host } = request.nextUrl\n    const url = new URL(`${protocol}//${locale}.${host}/${slug}${search}`)\n    return NextResponse.redirect(url)\n  }\n}\n```\n\n## Executing Middleware on Internal Next.js Requests\n\n### Summary of changes\n\n- Middleware will be executed for _all_ requests, including `_next`\n\n### Explanation\n\nPrior to Next.js `v12.2`, Middleware was not executed for `_next` requests.\n\nFor cases where Middleware is used for authorization, you should migrate to use `rewrite`/`redirect` to Pages that show an authorization error, login forms, or to an API Route.\n\nSee [No Response Body](#no-response-body) for an example of how to migrate to use `rewrite`/`redirect`.\n"},{"path":"errors/no-script-in-document.mdx","docUrl":"https://github.com/vercel/next.js/blob/canary/errors/no-script-in-document.mdx","prodUrl":"https://nextjs.org/docs/messages/no-script-in-document","sha":"552df7792c1758e291108b43262c19272e21f8d0","size":1048,"content":"---\ntitle: No Script in Document\n---\n\n> Prevent usage of `next/script` in `pages/_document.js`.\n\n> ⚠️ This error is not relevant in Next.js versions 12.1.6 or later. Please refer to the updated [error message](/docs/messages/no-before-interactive-script-outside-document).\n\n## Why This Error Occurred\n\nYou should not use the `next/script` component in `pages/_document.js` in Next.js versions prior to 12.1.6. That's because the `pages/_document.js` page only runs on the server and `next/script` has client-side functionality to ensure loading order.\n\n## Possible Ways to Fix It\n\nIf you want a global script, use `next/script` in `pages/_app.js` instead.\n\n```jsx filename=\"pages/_app.js\"\nimport Script from 'next/script'\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <>\n      <Script src=\"/my-script.js\" />\n      <Component {...pageProps} />\n    </>\n  )\n}\n\nexport default MyApp\n```\n\n- [custom-app](/docs/pages/building-your-application/routing/custom-app)\n- [next-script](/docs/pages/building-your-application/optimizing/scripts)\n"}]